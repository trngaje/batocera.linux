#!/bin/sh

# We need the graphics module in order to use SDL since we are
# using the sdl-compat/SDL2 for rendering
insmod /lib/modules/mali_kbase.ko

# Rotate screen for the rg28xx
BOARD=$(cat /boot/boot/batocera.board)
if [ "$BOARD" = "rg28xx" ]; then
    fbset -g 480 640 480 1280 32
fi

# This is needed so that on a restart charger binary is not run while plugged in
RESTART_FLAG=$( [ -f /boot/restart.flag ] && cat /boot/restart.flag || echo 0 )

if [ "$RESTART_FLAG" = "1" ]; then
    # Reset the flag to 0 for the next boot
    mount -o remount,rw /boot
    echo "0" > /boot/restart.flag
    sync
    mount -o remount,ro /boot
else
    # Call the charger process
    /usr/bin/charger
fi

# Start the progress bar
/usr/bin/progressbar &

# Start all init scripts in /etc/init.d
# executing them in numerical order.
#
for i in /etc/init.d/S??* ; do

    # Ignore dangling symlinks (if any).
    [ ! -f "$i" ] && continue

    # Update status for progress bar
    echo "$i" > /tmp/status.txt

    case "$i" in
        *.sh)
            # Source shell script for speed.
            (
                trap - INT QUIT TSTP
                set start
                . $i
            ) &
            ;;
        *)
            case "$i" in
                *S01dbus | *S02resize | *S03modules | *S04populate | *S05udev | *S06audio | *S06modprobe | *S11share | *S12populateshare) # Don't run these in background
                    $i start
                    ;;
                *)
                    $i start &
                    ;;
            esac
            ;;
    esac

    echo QUIT > /tmp/status.txt
    echo $(date +"%F %T,%3N")": ${i} - started" >> /var/run/boot.log
done

exit 0
