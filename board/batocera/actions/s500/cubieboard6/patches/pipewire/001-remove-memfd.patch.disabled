--- a/src/pipewire/mem.c	2022-09-30 07:58:08.000000000 +0000
+++ b/src/pipewire/mem.c	2022-10-20 03:34:04.169860225 +0000
@@ -58,7 +58,7 @@
 	return syscall(SYS_memfd_create, name, flags);
 }
 
-#define HAVE_MEMFD_CREATE 1
+#define HAVE_MEMFD_CREATE 0
 #endif
 
 #if defined(__FreeBSD__) || defined(__MidnightBSD__)
@@ -484,26 +484,6 @@
 	spa_list_init(&b->mappings);
 	spa_list_init(&b->memmaps);
 
-#ifdef HAVE_MEMFD_CREATE
-	char name[128];
-	snprintf(name, sizeof(name),
-		 "pipewire-memfd:flags=0x%08x,type=%" PRIu32 ",size=%zu",
-		 (unsigned int) flags, type, size);
-
-	b->this.fd = memfd_create(name, MFD_CLOEXEC | MFD_ALLOW_SEALING);
-	if (b->this.fd == -1) {
-		res = -errno;
-		pw_log_error("%p: Failed to create memfd: %m", pool);
-		goto error_free;
-	}
-#elif defined(__FreeBSD__) || defined(__MidnightBSD__)
-	b->this.fd = shm_open(SHM_ANON, O_CREAT | O_RDWR | O_CLOEXEC, 0);
-	if (b->this.fd == -1) {
-		res = -errno;
-		pw_log_error("%p: Failed to create SHM_ANON fd: %m", pool);
-		goto error_free;
-	}
-#else
 	char filename[128];
 	snprintf(filename, sizeof(filename),
 		 "/dev/shm/pipewire-tmpfile:flags=0x%08x,type=%" PRIu32 ",size=%zu:XXXXXX",
@@ -516,7 +496,7 @@
 		goto error_free;
 	}
 	unlink(filename);
-#endif
+
 	pw_log_debug("%p: new fd:%d", pool, b->this.fd);
 
 	if (ftruncate(b->this.fd, size) < 0) {
@@ -524,14 +504,7 @@
 		pw_log_warn("%p: Failed to truncate temporary file: %m", pool);
 		goto error_close;
 	}
-#ifdef HAVE_MEMFD_CREATE
-	if (flags & PW_MEMBLOCK_FLAG_SEAL) {
-		unsigned int seals = F_SEAL_GROW | F_SEAL_SHRINK | F_SEAL_SEAL;
-		if (fcntl(b->this.fd, F_ADD_SEALS, seals) == -1) {
-			pw_log_warn("%p: Failed to add seals: %m", pool);
-		}
-	}
-#endif
+
 	if (flags & PW_MEMBLOCK_FLAG_MAP && size > 0) {
 		b->this.map = pw_memblock_map(&b->this,
 				block_flags_to_mem(flags), 0, size, NULL);
