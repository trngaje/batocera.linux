diff --git a/src/drivers/blktiger.c b/src/drivers/blktiger.c
index 6e1a0240..6032d83d 100644
--- a/src/drivers/blktiger.c
+++ b/src/drivers/blktiger.c
@@ -405,6 +405,39 @@ ROM_START( blkdrgon )
 	ROM_LOAD( "bd04.11l",  0x0300, 0x0100, CRC(e5490b68) SHA1(40f9f92efe7dd97b49144aec02eb509834056915) )
 ROM_END
 
+ROM_START( blkdrgnk )
+	ROM_REGION( 0x50000, REGION_CPU1, 0 )	/* 64k for code + banked ROMs images */
+	ROM_LOAD( "blkdrgnk.5e",  0x00000, 0x08000, CRC(e713b486) SHA1(468a75120080f9529f2b56d66c72c767e7ee86df) )	/* CODE */
+	ROM_LOAD( "blkdrgon.6e",  0x10000, 0x10000, CRC(7d39c26f) SHA1(562a3f578e109ae020f65e341c876ad7e510a311) )	/* 0+1 */
+	ROM_LOAD( "blkdrgon.8e",  0x20000, 0x10000, CRC(d1bf3757) SHA1(b19f8b986406bde65ac7f0d55d54f87b37f5e42f) )	/* 2+3 */
+	ROM_LOAD( "blkdrgon.9e",  0x30000, 0x10000, CRC(4d1d6680) SHA1(e137624c59392de6aaffeded99b024938360bd25) )	/* 4+5 */
+	ROM_LOAD( "blkdrgon.10e", 0x40000, 0x10000, CRC(c8d0c45e) SHA1(66c2e5a74c5875a2c8e28740fe944bd943246ce5) )	/* 6+7 */
+
+	ROM_REGION( 0x10000, REGION_CPU2, 0 )
+	ROM_LOAD( "bd-06.1l",  0x0000, 0x8000, CRC(2cf54274) SHA1(87df100c65999ba1e9d358ffd0fe4bba23ae0efb) )
+
+	ROM_REGION( 0x08000, REGION_GFX1, ROMREGION_DISPOSE )
+	ROM_LOAD( "blkdrgnk.2n",  0x00000, 0x08000, CRC(3b432217) SHA1(da0b3fe16fb5192f6514bdf5fef85a889c7b2f0a) )	/* characters */
+
+	ROM_REGION( 0x40000, REGION_GFX2, ROMREGION_DISPOSE )
+	ROM_LOAD( "blkdrgon.5b",  0x00000, 0x10000, CRC(22d0a4b0) SHA1(f9402ea9ffedcb280497a63c5eb352de9d4ca3fd) )	/* tiles */
+	ROM_LOAD( "blkdrgon.4b",  0x10000, 0x10000, CRC(c8b5fc52) SHA1(621e899285ce6302e5b25d133d9cd52c09b7b202) )
+	ROM_LOAD( "blkdrgon.9b",  0x20000, 0x10000, CRC(9498c378) SHA1(841934ddef724faf04162c4be4aea1684d8d8e0f) )
+	ROM_LOAD( "blkdrgon.8b",  0x30000, 0x10000, CRC(5b0df8ce) SHA1(57d10b48bd61b0224ce21b36bde8d2479e8e5df4) )
+
+	ROM_REGION( 0x40000, REGION_GFX3, ROMREGION_DISPOSE )
+	ROM_LOAD( "bd-08.5a",  0x00000, 0x10000, CRC(e2f17438) SHA1(3e5fdae07d40febedc59c7c7c4d9c6f0d72b58b5) )	/* sprites */
+	ROM_LOAD( "bd-07.4a",  0x10000, 0x10000, CRC(5fccbd27) SHA1(33c55aa9c12b3121ca5c3b4c39a9b152b6946461) )
+	ROM_LOAD( "bd-10.9a",  0x20000, 0x10000, CRC(fc33ccc6) SHA1(d492626a88565c2626f98ecb1d74535f1ad68e4c) )
+	ROM_LOAD( "bd-09.8a",  0x30000, 0x10000, CRC(f449de01) SHA1(f6b40e9eb2471b89c42ab84f4214295d284db0c3) )
+
+	ROM_REGION( 0x0400, REGION_PROMS, 0 )	/* PROMs (function unknown) */
+	ROM_LOAD( "bd01.8j",   0x0000, 0x0100, CRC(29b459e5) SHA1(0034734a533df3dea16b7b48e072485d7f26f850) )
+	ROM_LOAD( "bd02.9j",   0x0100, 0x0100, CRC(8b741e66) SHA1(6c1fda59936a7217b05949f5c54b1f91f4b49dbe) )
+	ROM_LOAD( "bd03.11k",  0x0200, 0x0100, CRC(27201c75) SHA1(c54d87f06bfe0b0908389c005014d97156e272c2) )
+	ROM_LOAD( "bd04.11l",  0x0300, 0x0100, CRC(e5490b68) SHA1(40f9f92efe7dd97b49144aec02eb509834056915) )
+ROM_END
+
 ROM_START( blkdrgonb )
 	ROM_REGION( 0x50000, REGION_CPU1, 0 )	/* 64k for code + banked ROMs images */
 	ROM_LOAD( "a1",           0x00000, 0x08000, CRC(7caf2ba0) SHA1(57b17caff67d36b24075f5865d433bfc8bcc9bc2) )	/* CODE */
@@ -443,4 +476,5 @@ ROM_END
 GAME( 1987, blktiger,  0,        blktiger, blktiger, 0, ROT0, "Capcom", "Black Tiger" )
 GAME( 1987, bktigerb,  blktiger, blktiger, blktiger, 0, ROT0, "bootleg", "Black Tiger (bootleg)" )
 GAME( 1987, blkdrgon,  blktiger, blktiger, blktiger, 0, ROT0, "Capcom", "Black Dragon" )
+GAME( 1987, blkdrgnk,  blktiger, blktiger, blktiger, 0, ROT0, "Capcom", "Black Dragon (Korean Translation)" )
 GAME( 1987, blkdrgonb, blktiger, blktiger, blktiger, 0, ROT0, "bootleg", "Black Dragon (bootleg)" )
diff --git a/src/drivers/cps1.c b/src/drivers/cps1.c
index f1b47893..1976810e 100644
--- a/src/drivers/cps1.c
+++ b/src/drivers/cps1.c
@@ -3715,6 +3715,57 @@ INPUT_PORTS_START( rockmanj )
 INPUT_PORTS_END
 					
 /* CPS Changer */
+INPUT_PORTS_START( sfzch )
+	PORT_START    /* IN0 */
+	PORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_BUTTON5 | IPF_PLAYER1 )
+	PORT_BIT( 0x02, IP_ACTIVE_LOW, IPT_BUTTON5 | IPF_PLAYER2 )
+	PORT_BITX(0x04, IP_ACTIVE_LOW, IPT_SERVICE, "Pause", KEYCODE_F1, IP_JOY_NONE ) /* pause */
+	PORT_BIT( 0x08, IP_ACTIVE_LOW, IPT_SERVICE )	/* pause */
+	PORT_BIT( 0x10, IP_ACTIVE_LOW, IPT_START1 )
+	PORT_BIT( 0x20, IP_ACTIVE_LOW, IPT_START2 )
+	PORT_BIT( 0x40, IP_ACTIVE_LOW, IPT_BUTTON6 | IPF_PLAYER1 )
+	PORT_BIT( 0x80, IP_ACTIVE_LOW, IPT_BUTTON6 | IPF_PLAYER2 )
+
+	PORT_START
+	PORT_DIPNAME( 0xff, 0xff, DEF_STR( Unknown ) )
+	PORT_DIPSETTING(    0xff, DEF_STR( Off ) )
+	PORT_DIPSETTING(    0x00, DEF_STR( On ) )
+
+	PORT_START
+	PORT_DIPNAME( 0xff, 0xff, DEF_STR( Unknown ) )
+	PORT_DIPSETTING(    0xff, DEF_STR( Off ) )
+	PORT_DIPSETTING(    0x00, DEF_STR( On ) )
+
+	PORT_START
+	PORT_DIPNAME( 0xff, 0xff, DEF_STR( Unknown ) )
+	PORT_DIPSETTING(    0xff, DEF_STR( Off ) )
+	PORT_DIPSETTING(    0x00, DEF_STR( On ) )
+
+	PORT_START     /* Player 1 & 2 */
+	PORT_BIT( 0x0001, IP_ACTIVE_LOW, IPT_JOYSTICK_RIGHT | IPF_8WAY | IPF_PLAYER1 )
+	PORT_BIT( 0x0002, IP_ACTIVE_LOW, IPT_JOYSTICK_LEFT | IPF_8WAY | IPF_PLAYER1 )
+	PORT_BIT( 0x0004, IP_ACTIVE_LOW, IPT_JOYSTICK_DOWN | IPF_8WAY | IPF_PLAYER1 )
+	PORT_BIT( 0x0008, IP_ACTIVE_LOW, IPT_JOYSTICK_UP | IPF_8WAY | IPF_PLAYER1 )
+	PORT_BIT( 0x0010, IP_ACTIVE_LOW, IPT_BUTTON1 | IPF_PLAYER1 )
+	PORT_BIT( 0x0020, IP_ACTIVE_LOW, IPT_BUTTON2 | IPF_PLAYER1 )
+	PORT_BIT( 0x0040, IP_ACTIVE_LOW, IPT_BUTTON3 | IPF_PLAYER1 )
+	PORT_BIT( 0x0080, IP_ACTIVE_LOW, IPT_BUTTON4 | IPF_PLAYER1 )
+	PORT_BIT( 0x0100, IP_ACTIVE_LOW, IPT_JOYSTICK_RIGHT | IPF_8WAY | IPF_PLAYER2 )
+	PORT_BIT( 0x0200, IP_ACTIVE_LOW, IPT_JOYSTICK_LEFT | IPF_8WAY | IPF_PLAYER2 )
+	PORT_BIT( 0x0400, IP_ACTIVE_LOW, IPT_JOYSTICK_DOWN | IPF_8WAY | IPF_PLAYER2 )
+	PORT_BIT( 0x0800, IP_ACTIVE_LOW, IPT_JOYSTICK_UP | IPF_8WAY | IPF_PLAYER2 )
+	PORT_BIT( 0x1000, IP_ACTIVE_LOW, IPT_BUTTON1 | IPF_PLAYER2 )
+	PORT_BIT( 0x2000, IP_ACTIVE_LOW, IPT_BUTTON2 | IPF_PLAYER2 )
+	PORT_BIT( 0x4000, IP_ACTIVE_LOW, IPT_BUTTON3 | IPF_PLAYER2 )
+	PORT_BIT( 0x8000, IP_ACTIVE_LOW, IPT_BUTTON4 | IPF_PLAYER2 )
+
+	PORT_START      /* Player 3 - not used */
+	PORT_BIT( 0xff, IP_ACTIVE_LOW, IPT_UNUSED )
+
+	PORT_START      /* Player 4 - not used */
+	PORT_BIT( 0xff, IP_ACTIVE_LOW, IPT_UNUSED )
+INPUT_PORTS_END
+
 INPUT_PORTS_START( wofch )
 	PORT_START    /* IN0 */
 	PORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_BUTTON5 | IPF_PLAYER1 )
@@ -4272,6 +4323,44 @@ ROM_START( daimakai )
 	ROM_CONTINUE(              0x10000, 0x08000 )
 ROM_END
 
+ROM_START( daimakaik )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )
+	ROM_LOAD16_BYTE( "dmk_38.bin",   0x00000, 0x20000, CRC(c970babe) SHA1(32fc7e3cd5da5a5219d3e69a1b82986303e99ab0) )
+	ROM_LOAD16_BYTE( "dmk_39.bin",   0x00001, 0x20000, CRC(5441a3e1) SHA1(636351e01d50ace8631c349af663ee1c77dc0bd2) )
+	ROM_LOAD16_BYTE( "dmk_40.bin",   0x40000, 0x20000, CRC(0d559369) SHA1(df50eb1c6af8bb842b47b376f9f4229f12e7f9c4) )
+	ROM_LOAD16_BYTE( "dmk_41.bin",   0x40001, 0x20000, CRC(9a5eae6f) SHA1(2453eb8c4bddc829edfd023582e1ef79f2e9561a) )
+	ROM_LOAD16_WORD( "ghl17.bin",    0x80000, 0x80000, CRC(3ea1b0f2) SHA1(c51f1c38cdaed77ad715cedd845617a291ab2441) )
+
+	ROM_REGION( 0x300000, REGION_GFX1, 0 )
+	ROMX_LOAD( "ghl5k.bin",  0x000000, 0x80000, CRC(ccd4adba) SHA1(846d19e0bcad5460fcf862905d8eaf9dc335ced0) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ghl7k.bin",  0x000002, 0x80000, CRC(f1fe27ee) SHA1(a094352281f43be8a394b2e58029aecccdce25e4) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ghl6k.bin",  0x000004, 0x80000, CRC(8cd46653) SHA1(c58b73c3d969471e75007e0645ad2b9f6fb91b7d) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ghl8k.bin",  0x000006, 0x80000, CRC(e756c489) SHA1(8a4cfb0dd4005c854bb178900ba4fee129ce975b) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ghl09k.bin", 0x200000, 0x10000, CRC(a156a133) SHA1(fc26e3e7233fc03d1c1f448ee59c06b3d41af0a0) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl18k.bin", 0x200001, 0x10000, CRC(af5235c1) SHA1(85652c8e0e7037c3c4b063a3382d2f77ffec158b) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl13k.bin", 0x200002, 0x10000, CRC(973eece6) SHA1(85f1e64bf43aa450900c0702ef5094521c177a9d) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl22k.bin", 0x200003, 0x10000, CRC(03824bc9) SHA1(483fc20c08cec440f3e1c088ece9c9e0518b31d1) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl11k.bin", 0x200004, 0x10000, CRC(7c0ea715) SHA1(3a4fe6f6565e900b301c97b6919364b4ba7ba598) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl20k.bin", 0x200005, 0x10000, CRC(d3c0ca93) SHA1(069d5b98144b26db99b99ee8d380b828b3244ff3) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl15k.bin", 0x200006, 0x10000, CRC(2379a091) SHA1(6e74e8af4e90e127d118a1ece58166c7f6b0066d) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl24k.bin", 0x200007, 0x10000, CRC(2ec40b73) SHA1(6799a6bde50b405b6361adb469681db3a47f1d64) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl10.bin",  0x280000, 0x10000, CRC(bcc0f28c) SHA1(02f587aa4ae71631f27b0e3aaf1829cdded1bdc2) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl19.bin",  0x280001, 0x10000, CRC(2a40166a) SHA1(dc4e75d7ed87ae5386d721a09113bba364740465) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl14.bin",  0x280002, 0x10000, CRC(20f85c03) SHA1(86385139a9b42270aade758bfe338525936f5671) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl23.bin",  0x280003, 0x10000, CRC(8426144b) SHA1(2dbf9625413b302fcdad5bef8733a9dfbfaead52) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl12.bin",  0x280004, 0x10000, CRC(da088d61) SHA1(67229eff2827a42af97a60ceb252e132e7f307bc) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl21.bin",  0x280005, 0x10000, CRC(17e11df0) SHA1(42fb15e9300b07fc5f4bc21744484869859b130c) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl16.bin",  0x280006, 0x10000, CRC(f187ba1c) SHA1(6d9441d04ecef2a9d9c7a2cc7781acd7904c2061) , ROM_SKIP(7) )
+	ROMX_LOAD( "ghl25.bin",  0x280007, 0x10000, CRC(29f79c78) SHA1(26000a58454a06c3016f99ebc3a79c52911a7070) , ROM_SKIP(7) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 0x18000, REGION_CPU2, 0 ) /* 64k for the audio CPU */
+	ROM_LOAD( "ghl26.bin",     0x00000, 0x08000, CRC(3692f6e5) SHA1(61b8438d60a39b4cf5062dff0a53228e8a4e4b5f) )
+	ROM_CONTINUE(              0x10000, 0x08000 )
+ROM_END
+
 ROM_START( strider )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
 	ROM_LOAD16_BYTE( "strider.30",   0x00000, 0x20000, CRC(da997474) SHA1(3e4ac98f9a6967d61899281b31c7de779723397b) )
@@ -4389,6 +4478,36 @@ ROM_START( stridrja )
 	ROM_LOAD( "strider.19",   0x20000, 0x20000, CRC(444536d7) SHA1(a14f5de2f6b5b29ae5161dca1f8c08c566301a91) )
 ROM_END
 
+ROM_START( striderk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_BYTE( "sth36k.bin",  0x00000, 0x20000, CRC(81928ddd) SHA1(b1abed77446f2972e94d84a601168b50afcbf3d5) )
+	ROM_LOAD16_BYTE( "sth42k.bin",  0x00001, 0x20000, CRC(52c23218) SHA1(b7a30a837b18bb9084132db08400b28fa95605e6) )
+	ROM_LOAD16_BYTE( "sth37.bin",   0x40000, 0x20000, CRC(80e8877d) SHA1(806a62c03007efe6d58fb24dac467d4fc39bb96a) )
+	ROM_LOAD16_BYTE( "sth43.bin",   0x40001, 0x20000, CRC(6b3fa466) SHA1(6a3c9bd491eecf864971f7fdf02d01112d5ef7dd) )
+	ROM_LOAD16_WORD_SWAP( "strider.32",   0x80000, 0x80000, CRC(9b3cfc08) SHA1(a7d7f270a097437affa845d80bed82a1fa874878) )
+
+	ROM_REGION( 0x400000, REGION_GFX1, 0 )
+	ROMX_LOAD( "striderk.06",  0x000000, 0x80000, CRC(04c36c00) SHA1(0267c793dedd8d92ef0be43cb1151e001531b06e) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "striderk.08",  0x000002, 0x80000, CRC(c4ee13e0) SHA1(f0df1568a13e904bc5468c103d5767b75f5d3ae0) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "striderk.02",  0x000004, 0x80000, CRC(96d36cb7) SHA1(9b4458c43a7342b78d3c6d2a71aa439004d0ad98) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "striderk.04",  0x000006, 0x80000, CRC(808e37b7) SHA1(30ba52d51edd9034d9bf7139d1eaba4808527547) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "striderk.05",  0x200000, 0x80000, CRC(678c7875) SHA1(46f5ec7a6beb1e689a2aba89686d870d22944a05) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "striderk.07",  0x200002, 0x80000, CRC(4955a2ba) SHA1(afaaf913cd9c9450146216463a289d58efa80460) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "striderk.01",  0x200004, 0x80000, CRC(49b558b4) SHA1(c1f090e2c34b152f512d0e2ff80381fa5af1abf8) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "striderk.03",  0x200006, 0x80000, CRC(04f93716) SHA1(aa9e157b01e6889b9d58fc77d1a817773b2c2b59) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 0x18000, REGION_CPU2, 0 ) /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "strider.09",    0x00000, 0x08000, CRC(2ed403bc) SHA1(4ce863ea40d789db5a7cfce91d2c7c720deb9be5) )
+	ROM_CONTINUE(              0x10000, 0x08000 )
+
+	ROM_REGION( 0x40000, REGION_SOUND1, 0 )	/* Samples */
+	ROM_LOAD( "strider.18",   0x00000, 0x20000, CRC(4386bc80) SHA1(fb2b261995aeacfa13e7ee40b1a973dfb178f015) )
+	ROM_LOAD( "strider.19",   0x20000, 0x20000, CRC(444536d7) SHA1(a14f5de2f6b5b29ae5161dca1f8c08c566301a91) )
+ROM_END
+
 ROM_START( dw )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
 	ROM_LOAD16_BYTE( "d_wars30.11f", 0x00000, 0x20000, CRC(f9ec6d68) SHA1(02912db2b48f77489b0b841c2a5414bfb49b93f4) )
@@ -4655,6 +4774,56 @@ ROM_START( area88 )
 	ROM_LOAD( "unsquad.18",   0x00000, 0x20000, CRC(584b43a9) SHA1(7820815c8c67d484baf2fdad7e55d8c14b98b860) )
 ROM_END
 
+ROM_START( area88ka )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_BYTE( "ar36k.bin",    0x00000, 0x20000, CRC(1456a612) SHA1(cb3c7ea6fea2c357a29bef9456f753e04477bf14) )
+	ROM_LOAD16_BYTE( "ar42k.bin",    0x00001, 0x20000, CRC(9c41ba64) SHA1(25fee76243b3074cb09b9dbfe47e9778e57d29f2) )
+	ROM_LOAD16_BYTE( "unsquadk.31",  0x40000, 0x20000, CRC(ab132921) SHA1(790a10918727198e1571b1a9b41cbb5aa8abef87) )
+	ROM_LOAD16_BYTE( "unsquadk.36",  0x40001, 0x20000, CRC(aa9f3209) SHA1(671fd069a294798b4177e9ff4143ecd8f2c3bd40) )
+	ROM_LOAD16_WORD_SWAP( "unsquadk.32",  0x80000, 0x80000, CRC(60f9debd) SHA1(1194f5bc2a5d2316682318d7d897337f4b183b12) )
+
+	ROM_REGION( 0x200000, REGION_GFX1, 0 )
+	ROMX_LOAD( "unsquadka.05", 0x000000, 0x80000, CRC(a824ef33) SHA1(46c406bf21ad8781960326aed9d6234484bd12fc) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "unsquadka.07", 0x000002, 0x80000, CRC(b2333b50) SHA1(2b037e5d0b5fef7bc9eb37c4c0f7912d01a337f0) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "unsquadka.01", 0x000004, 0x80000, CRC(14c4bf4c) SHA1(fd6436619c3ae121187835f2bf96dd68a32a550c) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "unsquadka.03", 0x000006, 0x80000, CRC(b8b5fcb7) SHA1(ac6c253ce79e35621a15239e43e1c66f9178ddb0) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 0x18000, REGION_CPU2, 0 ) /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "unsquad.09",    0x00000, 0x08000, CRC(f3dd1367) SHA1(09eef72e862ac6b1a5cce5a45938b45bf4e456ad) )
+	ROM_CONTINUE(              0x10000, 0x08000 )
+
+	ROM_REGION( 0x20000, REGION_SOUND1, 0 )	/* Samples */
+	ROM_LOAD( "unsquad.18",   0x00000, 0x20000, CRC(584b43a9) SHA1(7820815c8c67d484baf2fdad7e55d8c14b98b860) )
+ROM_END
+
+ROM_START( area88kb )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_BYTE( "ar36k.bin",    0x00000, 0x20000, CRC(1456a612) SHA1(cb3c7ea6fea2c357a29bef9456f753e04477bf14) )
+	ROM_LOAD16_BYTE( "ar42k.bin",    0x00001, 0x20000, CRC(9c41ba64) SHA1(25fee76243b3074cb09b9dbfe47e9778e57d29f2) )
+	ROM_LOAD16_BYTE( "unsquadk.31",  0x40000, 0x20000, CRC(ab132921) SHA1(790a10918727198e1571b1a9b41cbb5aa8abef87) )
+	ROM_LOAD16_BYTE( "unsquadk.36",  0x40001, 0x20000, CRC(aa9f3209) SHA1(671fd069a294798b4177e9ff4143ecd8f2c3bd40) )
+	ROM_LOAD16_WORD_SWAP( "unsquadk.32",  0x80000, 0x80000, CRC(60f9debd) SHA1(1194f5bc2a5d2316682318d7d897337f4b183b12) )
+
+	ROM_REGION( 0x200000, REGION_GFX1, 0 )
+	ROMX_LOAD( "unsquadkb.05", 0x000000, 0x80000, CRC(7fe7251f) SHA1(be9d69627e7e97c17f2d62ca30e66a575a32b73d) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "unsquadkb.07", 0x000002, 0x80000, CRC(f8c38a59) SHA1(cf8109ee445f37c7b4451c5e06d77e272a943926) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "unsquadkb.01", 0x000004, 0x80000, CRC(f9ef3630) SHA1(41fcaad4e57f0f59ee3897534ab6386dbdfeeae4) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "unsquadkb.03", 0x000006, 0x80000, CRC(4acb6852) SHA1(05aa3e9b911eded0246cc49d8a6f7ec1c61e3d94) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 0x18000, REGION_CPU2, 0 ) /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "unsquad.09",    0x00000, 0x08000, CRC(f3dd1367) SHA1(09eef72e862ac6b1a5cce5a45938b45bf4e456ad) )
+	ROM_CONTINUE(              0x10000, 0x08000 )
+
+	ROM_REGION( 0x20000, REGION_SOUND1, 0 )	/* Samples */
+	ROM_LOAD( "unsquad.18",   0x00000, 0x20000, CRC(584b43a9) SHA1(7820815c8c67d484baf2fdad7e55d8c14b98b860) )
+ROM_END
+
 ROM_START( ffight )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
 	ROM_LOAD16_BYTE( "ff30-36.bin",  0x00000, 0x20000, CRC(f9a5ce83) SHA1(0756ae576a1f6d5b8b22f8630dca40ef38567ea6) )
@@ -4785,7 +4954,45 @@ ROM_START( ffightj1 )
 	ROM_LOAD( "ff18-18.bin",  0x00000, 0x20000, CRC(375c66e7) SHA1(36189e23209ce4ae5d9cbabd1574540d0591e7b3) )
 	ROM_LOAD( "ff19-19.bin",  0x20000, 0x20000, CRC(1ef137f9) SHA1(974b5e72aa28b87ebfa7438efbdfeda769dedf5e) )
 ROM_END
-                                        
+
+ROM_START( ffightk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_BYTE( "ff36k.bin",  0x00000, 0x20000, CRC(ed988977) SHA1(c718e989206bd2b68832c8fcb5667397d500ebac) )
+	ROM_LOAD16_BYTE( "ff42k.bin",  0x00001, 0x20000, CRC(07bf1c21) SHA1(f21a939fd92607c7f54816dedbcb3c5818cf4183) )
+	ROM_LOAD16_BYTE( "ff37k.bin",  0x40000, 0x20000, CRC(0144e630) SHA1(ee7198c28c39a6e953a956faaa6f2984118b7d3c) )
+	ROM_LOAD16_BYTE( "ff43k.bin",  0x40001, 0x20000, CRC(793b4caf) SHA1(ec83debbe358eccf093a874108f671a7cd5ff9c2) )
+	ROM_LOAD16_WORD_SWAP( "ff32-32m.bin", 0x80000, 0x80000, CRC(c747696e) SHA1(d3362dadded31ccb7eaf71ef282d698d18edd722) )
+
+	ROM_REGION( 0x200000, REGION_GFX1, 0 )
+	ROMX_LOAD( "ff09.bin",     0x000000, 0x20000, CRC(5b116d0d) SHA1(a24e829fdfa043bd27b508d7cc0788ad80fd180e) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff01.bin",     0x000001, 0x20000, CRC(815b1797) SHA1(549e5eefc8f607fec1c954ba715ff21b8e44a5aa) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff13.bin",     0x000002, 0x20000, CRC(8721a7da) SHA1(39b2b324fd7810342503f23695e423f364a6294d) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff05.bin",     0x000003, 0x20000, CRC(d0fcd4b5) SHA1(97ebcbead0cca7e425143c500c433dbcf9cadcc2) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff24.bin",     0x000004, 0x20000, CRC(a1ab607a) SHA1(56784c028b82d9e2affd9610f56fde57063e4c28) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff17.bin",     0x000005, 0x20000, CRC(2dc18cf4) SHA1(5e3bd895600cd30d561a75a2fcb6cc8bc84f4bd1) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff38.bin",     0x000006, 0x20000, CRC(6535a57f) SHA1(f4da9ec13cad7e3287e34dcceb0eb2d20107bad6) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff32.bin",     0x000007, 0x20000, CRC(c8bc4a57) SHA1(3eaf2b4e910fe1f79154020122d786d23a2e594a) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff10k.bin",    0x100000, 0x20000, CRC(aef14517) SHA1(b8a1b709fcc18fb2b3357c4f4e1a241a19c611af) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff02k.bin",    0x100001, 0x20000, CRC(af04aff3) SHA1(f285104e5d006c059b1447a3a3fa939496a0386a) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff14k.bin",    0x100002, 0x20000, CRC(401628be) SHA1(604430e4c93d6172e25d0b1e0cb84c28ba652f46) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff06k.bin",    0x100003, 0x20000, CRC(a70601f2) SHA1(04c33097e486132b4f2eec8769dda923dadd7a3b) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff25k.bin",    0x100004, 0x20000, CRC(a23a56b7) SHA1(22d1f027337c20203a8fd0d89561bb062de4d8f4) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff18k.bin",    0x100005, 0x20000, CRC(430b873e) SHA1(07ed8abc0df038e871da920928292855b962f4ae) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff39k.bin",    0x100006, 0x20000, CRC(de2e0dc8) SHA1(63e2e004205c9bbe78fb4811ce284230a5d8399c) , ROM_SKIP(7) )
+	ROMX_LOAD( "ff33k.bin",    0x100007, 0x20000, CRC(c8770bb7) SHA1(c582a7220437c3f00d204732a8a68bddad11b022) , ROM_SKIP(7) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 0x18000, REGION_CPU2, 0 ) /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "ff09-09.bin",   0x00000, 0x08000, CRC(b8367eb5) SHA1(ec3db29fdd6200e9a8f4f8073a7e34aef731354f) )
+	ROM_CONTINUE(              0x10000, 0x08000 )
+
+	ROM_REGION( 0x40000, REGION_SOUND1, 0 )	/* Samples */
+	ROM_LOAD( "ff18-18.bin",  0x00000, 0x20000, CRC(375c66e7) SHA1(36189e23209ce4ae5d9cbabd1574540d0591e7b3) )
+	ROM_LOAD( "ff19-19.bin",  0x20000, 0x20000, CRC(1ef137f9) SHA1(974b5e72aa28b87ebfa7438efbdfeda769dedf5e) )
+ROM_END
+
 ROM_START( ffightae )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "ff-23m.8h", 0x00000, 0x80000, CRC(86DEF74F) SHA1(5206cc13bfe40fb4f9c3677629aee89099623ee6) )
@@ -4807,7 +5014,30 @@ ROM_START( ffightae )
 	ROM_REGION( 0x40000, REGION_SOUND1, 0 )	/* Samples */
 	ROM_LOAD( "ff18-18.bin",  0x00000, 0x20000, CRC(375c66e7) SHA1(36189e23209ce4ae5d9cbabd1574540d0591e7b3) )
 	ROM_LOAD( "ff19-19.bin",  0x20000, 0x20000, CRC(1ef137f9) SHA1(974b5e72aa28b87ebfa7438efbdfeda769dedf5e) )
-ROM_END                                       
+ROM_END
+
+ROM_START( ffightaek )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "ffk-23m.8h", 0x00000, 0x80000, CRC(5fef82dd) SHA1(63ae596d6dc1c91a6b7f0e50b06705fe0905213e) )
+	ROM_LOAD16_WORD_SWAP( "ff-22m.7h",  0x80000, 0x80000, CRC(cbdd8689) SHA1(a75918ee837dfccdd4fd02b716928a2de2003103) )
+	
+	ROM_REGION( 0x200000, REGION_GFX1, 0 )
+	ROMX_LOAD( "ffk-5m.7a", 0x000000, 0x80000, CRC(99781f70) SHA1(2075366e238e69337d49f323eff054d13bd70123) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ffk-7m.9a", 0x000002, 0x80000, CRC(898726d4) SHA1(732eb1be9890e1aa6b9114a0e239d4dcc1dcb1d8) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ffk-1m.3a", 0x000004, 0x80000, CRC(dd9785ce) SHA1(9b7aa27f8dce871da84c586668d3634ceb8a5b98) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ffk-3m.5a", 0x000006, 0x80000, CRC(0c1c90a6) SHA1(5409595f642973ff6aca7dd54170834cbade4359) , ROM_GROUPWORD | ROM_SKIP(6) )
+	
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 0x18000, REGION_CPU2, 0 ) /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "ff09-09.bin",   0x00000, 0x08000, CRC(b8367eb5) SHA1(ec3db29fdd6200e9a8f4f8073a7e34aef731354f) )
+	ROM_CONTINUE(              0x10000, 0x08000 )
+
+	ROM_REGION( 0x40000, REGION_SOUND1, 0 )	/* Samples */
+	ROM_LOAD( "ff18-18.bin",  0x00000, 0x20000, CRC(375c66e7) SHA1(36189e23209ce4ae5d9cbabd1574540d0591e7b3) )
+	ROM_LOAD( "ff19-19.bin",  0x20000, 0x20000, CRC(1ef137f9) SHA1(974b5e72aa28b87ebfa7438efbdfeda769dedf5e) )
+ROM_END
 
 ROM_START( 1941 )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
@@ -5842,6 +6072,40 @@ ROM_START( wonder3 )
 	ROM_LOAD( "3wonders.19",  0x20000, 0x20000, CRC(dbe64ad0) SHA1(09f2ad522fe75d7bcca094b8c6696c3733b539d5) )
 ROM_END
 
+ROM_START( wonder3k )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_BYTE( "rtj36k.bin",   0x00000, 0x20000, CRC(4108a93d) SHA1(a6d4c03fb19fb410d06fb105499614312b85a150) )
+	ROM_LOAD16_BYTE( "rtj42k.bin",   0x00001, 0x20000, CRC(8ded6817) SHA1(b374c0aea016b73a925d5959dae2d1a2da66f04d) )
+	ROM_LOAD16_BYTE( "rtj37.bin",    0x40000, 0x20000, CRC(a1f677b0) SHA1(e1511ea0fa4a689d1355119ac37c075192880dde) )
+	ROM_LOAD16_BYTE( "rtj43.bin",    0x40001, 0x20000, CRC(85337a47) SHA1(0a247aa56c5cc17b1e888df7b502f65e88715469) )
+
+	ROM_LOAD16_BYTE( "3wonders.28",  0x80000, 0x20000, CRC(054137c8) SHA1(e4c406e0a32198323a5931093fbaa6836510b8ad) )
+	ROM_LOAD16_BYTE( "3wonders.33",  0x80001, 0x20000, CRC(7264cb1b) SHA1(b367acb9f6579569321ecaa98a14e29dd775b9db) )
+	ROM_LOAD16_BYTE( "rtj35k.bin",   0xc0000, 0x20000, CRC(775fc4ab) SHA1(2e36d3d1134107655433423f42194ceca19a1fe1) )
+	ROM_LOAD16_BYTE( "rtj41k.bin",   0xc0001, 0x20000, CRC(766b6e71) SHA1(67ef2b8b99bbcc4670c4ec07a0958adf1f9667a6) )
+
+	ROM_REGION( 0x400000, REGION_GFX1, 0 )
+	ROMX_LOAD( "3wondersk.05", 0x000000, 0x80000, CRC(a21deb43) SHA1(23ff960cf7d671c5ca4986ac61f8bb9314cfb573) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "3wondersk.07", 0x000002, 0x80000, CRC(e95720eb) SHA1(83c7dfd4ad2e7eb4ea9196ab2dc6a84503e13fbd) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "3wondersk.01", 0x000004, 0x80000, CRC(b4979a97) SHA1(d2f0c994334f86aa82a6d9648cc35fedb2204f7e) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "3wondersk.03", 0x000006, 0x80000, CRC(450eb6db) SHA1(1b84b864cc818e381dca5265926518aa36a8975d) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "3wondersk.06", 0x200000, 0x80000, CRC(3f7c7474) SHA1(0c97a3f692f13e78279a5f1e94098c6e69c59bc6) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "3wondersk.08", 0x200002, 0x80000, CRC(2a821eb2) SHA1(e83379492e2870a848a10caf63348615a7fb6f97) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "3wondersk.02", 0x200004, 0x80000, CRC(80e5d461) SHA1(c49b4ce1f5e2c0db137de217b7c50eaa3de7b85f) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "3wondersk.04", 0x200006, 0x80000, CRC(201e90b0) SHA1(988fa2b749fb77eabbeab3695bea19e3557348f2) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 0x18000, REGION_CPU2, 0 ) /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "rt23.bin",      0x00000, 0x08000, CRC(7d5a77a7) SHA1(4f2a6534d7a9e518061102c1dd7d7aca39600c33) )    /* could have one bad byte */
+	ROM_CONTINUE(              0x10000, 0x08000 )				/* (compare with US version, */
+																/* which is verified to be correct) */
+	ROM_REGION( 0x40000, REGION_SOUND1, 0 )	/* Samples */
+	ROM_LOAD( "3wonders.18",  0x00000, 0x20000, CRC(26b211ab) SHA1(0ea03fdd9edff41eacfc52aa9e0421c10968356b) )
+	ROM_LOAD( "3wonders.19",  0x20000, 0x20000, CRC(dbe64ad0) SHA1(09f2ad522fe75d7bcca094b8c6696c3733b539d5) )
+ROM_END
+
 ROM_START( kod )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
 	ROM_LOAD16_BYTE( "kod30.rom",    0x00000, 0x20000, CRC(c7414fd4) SHA1(37d27fbe7c617a26b53bfdfcd532cf573d42f33b) )
@@ -5938,6 +6202,36 @@ ROM_START( kodj )
 	ROM_LOAD( "kd19.bin",    0x20000, 0x20000, CRC(92941b80) SHA1(5fa7c2793e6febee54a83042d118ddd4f2b7d127) )
 ROM_END
 
+ROM_START( kodk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_BYTE( "kd30k.bin",     0x00000, 0x20000, CRC(dccccf4f) SHA1(50f7746a4d11c0f24aa1191b0b87b72657da0af5) )
+	ROM_LOAD16_BYTE( "kd37k.bin",     0x00001, 0x20000, CRC(1cb9a149) SHA1(72f55ea48ae24354a2f07ba088b99008fde08e60) )
+	ROM_LOAD16_BYTE( "kd31k.bin",     0x40000, 0x20000, CRC(622dd533) SHA1(f9b039099e535830ab9aa96347d507c94160c0c2) )
+	ROM_LOAD16_BYTE( "kd38k.bin",     0x40001, 0x20000, CRC(4cb36b59) SHA1(f28d09f6a1458abb9b42f1e00a5b14026a646f49) )
+	ROM_LOAD16_WORD_SWAP("kd33k.bin", 0x80000, 0x80000, CRC(260f5607) SHA1(6465ca8493c1ecde926b6a6d948b48dba87ac6e2) )
+
+	ROM_REGION( 0x400000, REGION_GFX1, 0 )
+	ROMX_LOAD( "kod02.rom",    0x000000, 0x80000, CRC(e45b8701) SHA1(604e39e455e81695ee4f899f102d0bcd789cedd0) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kod04.rom",    0x000002, 0x80000, CRC(a7750322) SHA1(3c583496a53cd64edf377db35f7f40f02b59b7e7) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kod01.rom",    0x000004, 0x80000, CRC(5f74bf78) SHA1(b7c43eea9bf77a0fb571dcd53f8be719e6655fd9) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kod03.rom",    0x000006, 0x80000, CRC(5e5303bf) SHA1(d9f90b898ffdf4398b2bbeb48247f06f728e7c00) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kod11k.rom",   0x200000, 0x80000, CRC(1cc076e1) SHA1(417a8937774999f4683ee4eada5f981b18748c1c) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kod13k.rom",   0x200002, 0x80000, CRC(efa0ffa3) SHA1(8908ab729c283d4e0c121582c39dee66e2ae5a43) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kod10k.rom",   0x200004, 0x80000, CRC(93004816) SHA1(77a51f799b13038a3f5bfb61dba861d14684f79a) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kod12k.rom",   0x200006, 0x80000, CRC(970e58a8) SHA1(978626aa7198383ac81044c586e831d8e05a2e9d) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 0x18000, REGION_CPU2, 0 ) /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "kd09.bin",      0x00000, 0x08000, CRC(bac6ec26) SHA1(6cbb6d55660150ae3f5270e023328275ee1bbf50) )
+	ROM_CONTINUE(              0x10000, 0x08000 )
+
+	ROM_REGION( 0x40000, REGION_SOUND1, 0 )	/* Samples */
+	ROM_LOAD( "kd18.bin",    0x00000, 0x20000, CRC(4c63181d) SHA1(270f27534a95cb0be3ff3f9ca71c502320d8090b) )
+	ROM_LOAD( "kd19.bin",    0x20000, 0x20000, CRC(92941b80) SHA1(5fa7c2793e6febee54a83042d118ddd4f2b7d127) )
+ROM_END
+
 ROM_START( kodb )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
 	ROM_LOAD16_BYTE( "kod.17",    0x00000, 0x080000, CRC(036dd74c) SHA1(489344e56863429e86b4c362b82d89819c1d6afb) )
@@ -6052,6 +6346,35 @@ ROM_START( captcomj )
 	ROM_LOAD( "cc_19.rom",    0x20000, 0x20000, CRC(b99091ae) SHA1(b19197c7ad3aeaf5f41c26bf853b0c9b502ecfca) )
 ROM_END
 
+ROM_START( captcomk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "cc23.bin",   0x000000, 0x80000, CRC(5b482b62) SHA1(c871aa1eb9ecc117c3079995d1f5212193bd2e12) )
+	ROM_LOAD16_WORD_SWAP( "cc22k.bin",  0x080000, 0x80000, CRC(216fe8e9) SHA1(cd7669772e0be8e91b3d2a48ebe9ffe5965c3df0) )
+	ROM_LOAD16_BYTE( "cc24k.bin",       0x100000, 0x20000, CRC(6856b740) SHA1(158864dda003b8aefdcfa56ce12d57d13b3d527c) )
+	ROM_LOAD16_BYTE( "cc28k.bin",       0x100001, 0x20000, CRC(b5ec9706) SHA1(715064a11a9cbb150a042a2674c61a762c833505) )
+
+	ROM_REGION( 0x400000, REGION_GFX1, 0 )
+	ROMX_LOAD( "gfx_01.rom",   0x000000, 0x80000, CRC(7261d8ba) SHA1(4b66292e42d20d0b79a756f0e445492ddb9c6bbc) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "gfx_03.rom",   0x000002, 0x80000, CRC(6a60f949) SHA1(87391ff92abaf3e451f70d789a938cffbd1fd222) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "gfx_02.rom",   0x000004, 0x80000, CRC(00637302) SHA1(2c554b59cceec2de67a9a4bc6281fe846d3c8cd2) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "gfx_04.rom",   0x000006, 0x80000, CRC(cc87cf61) SHA1(7fb1f49494cc1a08aded20754bb0cefb1c323198) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "gfx_05k.rom",  0x200000, 0x80000, CRC(edb5ac44) SHA1(635879916a09d5652684228a9153df578337efa6) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "gfx_07k.rom",  0x200002, 0x80000, CRC(93000eec) SHA1(4f3528e1c071380442ce714a319a58445eb67751) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "gfx_06k.rom",  0x200004, 0x80000, CRC(c9add6f8) SHA1(8e8d3880dc196e78ee06187628678c0aeec8cb1d) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "gfx_08k.rom",  0x200006, 0x80000, CRC(58327041) SHA1(f40bb97c5e7bb72dfc25809d5f24d96369a094d4) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 0x18000, REGION_CPU2, 0 ) /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "cc_09.rom",     0x00000, 0x08000, CRC(698e8b58) SHA1(b7a3d905a7ed2c430426ca2e185e3d7e75e752a1) )
+	ROM_CONTINUE(              0x10000, 0x08000 )
+
+	ROM_REGION( 0x40000, REGION_SOUND1, 0 )	/* Samples */
+	ROM_LOAD( "cc_18.rom",    0x00000, 0x20000, CRC(6de2c2db) SHA1(9a1eaba8d104f59a5e61f89679bb5de0c0c64364) )
+	ROM_LOAD( "cc_19.rom",    0x20000, 0x20000, CRC(b99091ae) SHA1(b19197c7ad3aeaf5f41c26bf853b0c9b502ecfca) )
+ROM_END
+
 ROM_START( knights )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "kr_23e.rom",   0x00000, 0x80000, CRC(1b3997eb) SHA1(724b68eff319fcdf0dd3bc1eb6662996c1f6ecd9) )
@@ -6136,6 +6459,36 @@ ROM_START( knightsj )
 	ROM_LOAD( "kr_19.rom",    0x20000, 0x20000, CRC(bfc654e9) SHA1(01b3d92e4dedf55ea3933d387c7ddb9ba2549773) )
 ROM_END
 
+ROM_START( knightsk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_BYTE( "krj30.bin",   0x00000, 0x20000, CRC(ad3d1a8e) SHA1(327f9e818f1500836fc549afeffbb2a3c5aafe8c) )
+	ROM_LOAD16_BYTE( "krj37.bin",   0x00001, 0x20000, CRC(e694a491) SHA1(5a4d27c879c10032c49880019501de3e45ab1b35) )
+	ROM_LOAD16_BYTE( "krk31.bin",   0x40000, 0x20000, CRC(5afdb8cc) SHA1(a2e3808bee9a40953f0757190f950fb637e6192f) )
+	ROM_LOAD16_BYTE( "krk38.bin",   0x40001, 0x20000, CRC(658de67a) SHA1(770c250650a1b90338888fae8df5dae488b01fd7) )
+	ROM_LOAD16_WORD_SWAP( "kr_22.rom",  0x80000, 0x80000, CRC(d0b671a9) SHA1(9865472c5fc3f617345e23b5de5a9ba177945b5a) )
+
+	ROM_REGION( 0x400000, REGION_GFX1, 0 )
+	ROMX_LOAD( "kr_gfx1.rom",  0x000000, 0x80000, CRC(9e36c1a4) SHA1(772daae74e119371dfb76fde9775bda78a8ba125) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kr_gfx3.rom",  0x000002, 0x80000, CRC(c5832cae) SHA1(a188cf401cd3a2909b377d3059f14d22ec3b0643) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kr_gfx2.rom",  0x000004, 0x80000, CRC(f095be2d) SHA1(0427d1574062f277a9d04440019d5638b05de561) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kr_gfx4.rom",  0x000006, 0x80000, CRC(179dfd96) SHA1(b1844e69da7ab13474da569978d5b47deb8eb2be) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kr_gfx5k.rom", 0x200000, 0x80000, CRC(54c19345) SHA1(cf6eec7155835ded9534170146a4207fe261c11f) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kr_gfx7k.rom", 0x200002, 0x80000, CRC(b5339fdc) SHA1(962177552a40c141d22e981bf4eef96bee19fa46) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kr_gfx6k.rom", 0x200004, 0x80000, CRC(4983b7aa) SHA1(57808ae2263ba4ca90eaa94cca3efd2c84cf8f7d) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "kr_gfx8k.rom", 0x200006, 0x80000, CRC(897bac6a) SHA1(d9b3fde5a049f88ded5fc80cf120323a4fc109c5) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 0x18000, REGION_CPU2, 0 ) /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "kr_09.rom",     0x00000, 0x08000, CRC(5e44d9ee) SHA1(47a7503321be8d52b5c44af838e3bb82ee15a415) )
+	ROM_CONTINUE(              0x10000, 0x08000 )
+
+	ROM_REGION( 0x40000, REGION_SOUND1, 0 )	/* Samples */
+	ROM_LOAD( "kr_18.rom",    0x00000, 0x20000, CRC(da69d15f) SHA1(9616207e693bae85705f786cef60b9f6951b5067) )
+	ROM_LOAD( "kr_19.rom",    0x20000, 0x20000, CRC(bfc654e9) SHA1(01b3d92e4dedf55ea3933d387c7ddb9ba2549773) )
+ROM_END
+
 ROM_START( sf2ce )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "sf2ce.23",     0x000000, 0x80000, CRC(3f846b74) SHA1(c8d7a01b626771870123f1663a01a81f9c8fe582) )
@@ -6999,6 +7352,64 @@ ROM_START( wofj )
 	ROM_LOAD( "tk2_q4.rom",     0x180000, 0x80000, CRC(36642e88) SHA1(8ab25b19e2b67215a5cb1f3aa81b9d26009cfeb8) )
 ROM_END
 
+ROM_START( wofk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "tk2k23c.bin",  0x000000, 0x80000, CRC(6fe5e13d) SHA1(90f3a8937102eec4ef545f2e37cb648b321facd8) )
+	ROM_LOAD16_WORD_SWAP( "tk2k22c.bin",  0x080000, 0x80000, CRC(a3b900c1) SHA1(bd3ffc8ab60512e5bb7db892e889b446e64fe98e) )
+
+	ROM_REGION( 0x400000, REGION_GFX1, 0 )
+	ROMX_LOAD( "tk2_gfx1.rom",   0x000000, 0x80000, CRC(0d9cb9bf) SHA1(cc7140e9a01a14b252cb1090bcea32b0de461928) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2_gfx3.rom",   0x000002, 0x80000, CRC(45227027) SHA1(b21afc593f0d4d8909dfa621d659cbb40507d1b2) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2_gfx2.rom",   0x000004, 0x80000, CRC(c5ca2460) SHA1(cbe14867f7b94b638ca80db7c8e0c60881183469) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2_gfx4.rom",   0x000006, 0x80000, CRC(e349551c) SHA1(1d977bdf256accf750ad9930ec4a0a19bbf86964) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2k05.bin",     0x200000, 0x80000, CRC(d83780f8) SHA1(7b7fe86de937e84b1bd6de1540f843275b7c7824) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2k06.bin",     0x200002, 0x80000, CRC(4b499b49) SHA1(1a1f30261b9c035e2353cde04174d5dc95e563a7) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2k07.bin",     0x200004, 0x80000, CRC(0885d2b2) SHA1(ca8d0963d0c9d012fdfeca3588e8c2c6b2fe7cff) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2k08.bin",     0x200006, 0x80000, CRC(5575812d) SHA1(4259a06b29e3f59a420d95e3aee3b1a4ee211af3) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 2*0x28000, REGION_CPU2, 0 ) /* QSound Z80 code + space for decrypted opcodes */
+	ROM_LOAD( "tk2_qa.rom",     0x00000, 0x08000, CRC(c9183a0d) SHA1(d8b1d41c572f08581f8ab9eb878de77d6ea8615d) )
+	ROM_CONTINUE(               0x10000, 0x18000 )
+
+	ROM_REGION( 0x200000, REGION_SOUND1, 0 ) /* QSound samples */
+	ROM_LOAD( "tk2_q1.rom",     0x000000, 0x80000, CRC(611268cf) SHA1(83ab059f2110fb25fdcff928d56b790fc1f5c975) )
+	ROM_LOAD( "tk2_q2.rom",     0x080000, 0x80000, CRC(20f55ca9) SHA1(90134e9a9c4749bb65c728b66ea4dac1fd4d88a4) )
+	ROM_LOAD( "tk2_q3.rom",     0x100000, 0x80000, CRC(bfcf6f52) SHA1(2a85ff3fc89b4cbabd20779ec12da2e116333c7c) )
+	ROM_LOAD( "tk2_q4.rom",     0x180000, 0x80000, CRC(36642e88) SHA1(8ab25b19e2b67215a5cb1f3aa81b9d26009cfeb8) )
+ROM_END
+
+ROM_START( wofk103 )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "tk2k23m.bin",  0x000000, 0x80000, CRC(997ea67a) SHA1(62f3285005000d75b66ea817ea2c618f835a8139) )
+	ROM_LOAD16_WORD_SWAP( "tk2k22m.bin",  0x080000, 0x80000, CRC(81db14c1) SHA1(1d2b6fd382af5dcb4fc660fde67afe1d4de9ea2a) )
+
+	ROM_REGION( 0x400000, REGION_GFX1, 0 )
+	ROMX_LOAD( "tk2_gfx1.rom",   0x000000, 0x80000, CRC(0d9cb9bf) SHA1(cc7140e9a01a14b252cb1090bcea32b0de461928) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2_gfx3.rom",   0x000002, 0x80000, CRC(45227027) SHA1(b21afc593f0d4d8909dfa621d659cbb40507d1b2) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2_gfx2.rom",   0x000004, 0x80000, CRC(c5ca2460) SHA1(cbe14867f7b94b638ca80db7c8e0c60881183469) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2_gfx4.rom",   0x000006, 0x80000, CRC(e349551c) SHA1(1d977bdf256accf750ad9930ec4a0a19bbf86964) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2k05.bin",     0x200000, 0x80000, CRC(d83780f8) SHA1(7b7fe86de937e84b1bd6de1540f843275b7c7824) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2k06.bin",     0x200002, 0x80000, CRC(4b499b49) SHA1(1a1f30261b9c035e2353cde04174d5dc95e563a7) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2k07.bin",     0x200004, 0x80000, CRC(0885d2b2) SHA1(ca8d0963d0c9d012fdfeca3588e8c2c6b2fe7cff) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2k08.bin",     0x200006, 0x80000, CRC(5575812d) SHA1(4259a06b29e3f59a420d95e3aee3b1a4ee211af3) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 2*0x28000, REGION_CPU2, 0 ) /* QSound Z80 code + space for decrypted opcodes */
+	ROM_LOAD( "tk2_qa.rom",     0x00000, 0x08000, CRC(c9183a0d) SHA1(d8b1d41c572f08581f8ab9eb878de77d6ea8615d) )
+	ROM_CONTINUE(               0x10000, 0x18000 )
+
+	ROM_REGION( 0x200000, REGION_SOUND1, 0 ) /* QSound samples */
+	ROM_LOAD( "tk2_q1.rom",     0x000000, 0x80000, CRC(611268cf) SHA1(83ab059f2110fb25fdcff928d56b790fc1f5c975) )
+	ROM_LOAD( "tk2_q2.rom",     0x080000, 0x80000, CRC(20f55ca9) SHA1(90134e9a9c4749bb65c728b66ea4dac1fd4d88a4) )
+	ROM_LOAD( "tk2_q3.rom",     0x100000, 0x80000, CRC(bfcf6f52) SHA1(2a85ff3fc89b4cbabd20779ec12da2e116333c7c) )
+	ROM_LOAD( "tk2_q4.rom",     0x180000, 0x80000, CRC(36642e88) SHA1(8ab25b19e2b67215a5cb1f3aa81b9d26009cfeb8) )
+ROM_END
+
 ROM_START( sf2t )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "sf2.23",        0x000000, 0x80000, CRC(89a1fc38) SHA1(aafb40fc311e318250973be8c6aa0d3f7902cb3c) )
@@ -7153,6 +7564,36 @@ ROM_START( dinoj )
 	ROM_LOAD( "cd_q4.rom",      0x180000, 0x80000, CRC(2c67821d) SHA1(6e2528d0b22508300a6a142a796dd3bf53a66946) )
 ROM_END
 
+ROM_START( dinok )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "cdk_23.8f",  0x000000, 0x80000, CRC(af7439b1) SHA1(90f6877fccbc4da25eedce76a01364a3b63550e2) )
+	ROM_LOAD16_WORD_SWAP( "cdk_22.7f",  0x080000, 0x80000, CRC(c72930bc) SHA1(3b201c955a246041cdfdb672f96893ec38420790) )
+	ROM_LOAD16_WORD_SWAP( "cdk_21.6f",  0x100000, 0x80000, CRC(7a7a0517) SHA1(9e54e385129ed3c5e8cc8799e3673b0a967308b2) )
+
+	ROM_REGION( 0x400000, REGION_GFX1, 0 )
+	ROMX_LOAD( "cd_gfx01k.rom",  0x000000, 0x80000, CRC(2403ca3a) SHA1(614d2aeb377038790eb6809ac6bf8b7b09cc94e1) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "cd_gfx03k.rom",  0x000002, 0x80000, CRC(39728396) SHA1(a375194a18c79bb7dc700cca5b927343d4b38623) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "cd_gfx02k.rom",  0x000004, 0x80000, CRC(a06fcf00) SHA1(a4710f1e26f3dfc0c4eb38a0a3203a2edff6246b) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "cd_gfx04k.rom",  0x000006, 0x80000, CRC(364d861a) SHA1(7ebce1cca1ef0dc770006f766aac8aa2b1a6c19d) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "cd_gfx05.rom",   0x200000, 0x80000, CRC(470befee) SHA1(a42e38319e9b7424381352512f11bd8edf0bbb96) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "cd_gfx07.rom",   0x200002, 0x80000, CRC(22bfb7a3) SHA1(c44959bd3d42b9fc8ecb482dfaf63fbd469d2c3e) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "cd_gfx06.rom",   0x200004, 0x80000, CRC(e7599ac4) SHA1(0e788a38547a8701115d01190ddeaca64388db4d) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "cd_gfx08.rom",   0x200006, 0x80000, CRC(211b4b15) SHA1(374f6b185faa0f14f5c45b9b1d60d0772d93fb17) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 2*0x28000, REGION_CPU2, 0 ) /* QSound Z80 code + space for decrypted opcodes */
+	ROM_LOAD( "cd_q.rom",       0x00000, 0x08000, CRC(605fdb0b) SHA1(9da90ddc6513aaaf2260f0c69719c6b0e585ba8c) )
+	ROM_CONTINUE(               0x10000, 0x18000 )
+
+	ROM_REGION( 0x200000, REGION_SOUND1, 0 ) /* QSound samples */
+	ROM_LOAD( "cd_q1.rom",      0x000000, 0x80000, CRC(60927775) SHA1(f8599bc84c38573ebbe8685822c58b6a38b50462) )
+	ROM_LOAD( "cd_q2.rom",      0x080000, 0x80000, CRC(770f4c47) SHA1(fec8ef00a6669d4d5e37787ecc7b58ee46709326) )
+	ROM_LOAD( "cd_q3.rom",      0x100000, 0x80000, CRC(2f273ffc) SHA1(f0de462f6c4d251911258e0ebd886152c14d1586) )
+	ROM_LOAD( "cd_q4.rom",      0x180000, 0x80000, CRC(2c67821d) SHA1(6e2528d0b22508300a6a142a796dd3bf53a66946) )
+ROM_END
+
 ROM_START( punisher )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
 	ROM_LOAD16_BYTE( "pse_26.rom",       0x000000, 0x20000, CRC(389a99d2) SHA1(e97f4225554e4603cb0e3edd296a90bb2e467ca7) )
@@ -7255,6 +7696,36 @@ ROM_START( punishrj )
 	ROM_LOAD( "ps_q4.rom",      0x180000, 0x80000, CRC(bed42f03) SHA1(21302f7e75f9c795392a3b34e16a959fc5f6e4e9) )
 ROM_END
 
+ROM_START( punishrk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "psj23.bin",   0x000000, 0x80000, CRC(6b2fda52) SHA1(5f95a79b7b802609ae9ddd6641cc52610d428bf4) )
+	ROM_LOAD16_WORD_SWAP( "psj22k.bin",  0x080000, 0x80000, CRC(439b2bcf) SHA1(ebcd14662b01001bb7a1474898dd39a959188f9f) )
+	ROM_LOAD16_WORD_SWAP( "ps_21.rom",   0x100000, 0x80000, CRC(8affa5a9) SHA1(268760b83b1723ff50a019ec51ef7af2e49935bf) )
+
+	ROM_REGION( 0x400000, REGION_GFX1, 0 )
+	ROMX_LOAD( "ps_gfx1k.rom",  0x000000, 0x80000, CRC(055de2d5) SHA1(f8e967c2296cde6ed85c825621b3d80d86b89661) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ps_gfx3k.rom",  0x000002, 0x80000, CRC(21bfedd1) SHA1(d90a30a1ac154224910cd726d1e67b53170a599c) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ps_gfx2k.rom",  0x000004, 0x80000, CRC(161076aa) SHA1(8a07cb50d4c4a4875224029572c6b66af6966e6b) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ps_gfx4k.rom",  0x000006, 0x80000, CRC(4047dd12) SHA1(4ad549b0f6712359981023fcd86e566f12620b39) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ps_gfx5.rom",   0x200000, 0x80000, CRC(c54ea839) SHA1(0733f37329edd9d0cace1319a7544b40aa7ecb0b) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ps_gfx7.rom",   0x200002, 0x80000, CRC(04c5acbd) SHA1(fddc94b0f36d4d22d7c357856ae15b7514c342d3) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ps_gfx6.rom",   0x200004, 0x80000, CRC(a544f4cc) SHA1(9552df8934ba25f19a22f2e07783712d8c8ef03c) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "ps_gfx8.rom",   0x200006, 0x80000, CRC(8f02f436) SHA1(a2f0ebb7e9593469c7b843f8962a66f3d77f79e5) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 2*0x28000, REGION_CPU2, 0 ) /* QSound Z80 code + space for decrypted opcodes */
+	ROM_LOAD( "ps_q.rom",       0x00000, 0x08000, CRC(49ff4446) SHA1(87af12f87a940a6c5428b4574ad44a4b54867bc3) )
+	ROM_CONTINUE(               0x10000, 0x18000 )
+
+	ROM_REGION( 0x200000, REGION_SOUND1, 0 ) /* QSound samples */
+	ROM_LOAD( "ps_q1.rom",      0x000000, 0x80000, CRC(31fd8726) SHA1(1d73a76682e9fb908db0c55b9a18163f7539fea1) )
+	ROM_LOAD( "ps_q2.rom",      0x080000, 0x80000, CRC(980a9eef) SHA1(36571381f349bc726508a7e618ba1c635ec9d271) )
+	ROM_LOAD( "ps_q3.rom",      0x100000, 0x80000, CRC(0dd44491) SHA1(903cea1d7f3120545ea3229d30fbd687d11ad68f) )
+	ROM_LOAD( "ps_q4.rom",      0x180000, 0x80000, CRC(bed42f03) SHA1(21302f7e75f9c795392a3b34e16a959fc5f6e4e9) )
+ROM_END
+
 ROM_START( slammast )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "mbe_23e.rom",  0x000000, 0x80000, CRC(5394057a) SHA1(57f8b40c0a15e82c98ce5f0a8c4bdf60a1bc3107) )
@@ -7714,8 +8185,44 @@ ROM_START( rockmanj )
 	ROM_LOAD( "rcm_18.rom",    0x00000, 0x20000, CRC(80f1f8aa) SHA1(4a5b7b2a6941ad68da7472c63362c7bcd353fa54) )
 	ROM_LOAD( "rcm_19.rom",    0x20000, 0x20000, CRC(f257dbe1) SHA1(967def6b6f93039dbc46373caabeb3301577be75) )
 ROM_END
-         
-/* CPS Prototype */                                        
+
+ROM_START( rockmank )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "rcm23k.bin",   0x000000, 0x80000, CRC(cb60d510) SHA1(1397ce99de98cb67b949a0c2d5a8fb804b5103e8) )
+	ROM_LOAD16_WORD_SWAP( "rcm22k.bin",   0x080000, 0x80000, CRC(ee2b97ff) SHA1(8ee614b63200b73ff223545e5e62139f50fb157f) )
+	ROM_LOAD16_WORD_SWAP( "rcm21a.bin",   0x100000, 0x80000, CRC(517ccde2) SHA1(492256c192f0c4814efa1ee1dd390453dd2e5865) )
+
+	ROM_REGION( 0x800000, REGION_GFX1, 0 )
+	ROMX_LOAD( "rcm_01k.rom",   0x000000, 0x80000, CRC(4c736693) SHA1(bdc569ae957c365ccb84004f636577e59f8999da) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_02k.rom",   0x000002, 0x80000, CRC(ab0ef46b) SHA1(ec94d0dba6a2a058a82bf34c57b8945515188c32) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_03k.rom",   0x000004, 0x80000, CRC(144d9090) SHA1(c4f12c401d399c312a3a3724311a2f7c18a47f91) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_04k.rom",   0x000006, 0x80000, CRC(6ba5999b) SHA1(92924a0dcc13293a138376e972d08be5070fc9da) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_05.rom",    0x200000, 0x80000, CRC(5dd131fd) SHA1(1a7fc8cf38901245d40901996e946e7ad9c0e0c5) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_06.rom",    0x200002, 0x80000, CRC(f0faf813) SHA1(adff01c2ecc4c8ce6f8a50cbd07d8f8bb9f48168) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_07.rom",    0x200004, 0x80000, CRC(826de013) SHA1(47f36b1d92a487c43c8dadc8293b8e6f40649286) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_08.rom",    0x200006, 0x80000, CRC(fbff64cf) SHA1(f0cb531ef195dc1dcd224a208906a62fb5d199a1) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_10k.rom",   0x400000, 0x80000, CRC(4cb36768) SHA1(a62b7f6d2a3dd3dd8d55624a00b6dab912262ca9) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_11k.rom",   0x400002, 0x80000, CRC(955c63e4) SHA1(0c14c641b0362a7ecf057c5d39fc1f51aaed1132) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_12k.rom",   0x400004, 0x80000, CRC(d62c851f) SHA1(8fdea604b3954f76a8d147571efbaa1a3096926c) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_13k.rom",   0x400006, 0x80000, CRC(278d0ea3) SHA1(d3386d5deedbd6fc790b411f99518b6167a0bd8f) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_14.rom",    0x600000, 0x80000, CRC(303be3bd) SHA1(1e5c3fd71966ea9f457840c40582795b501c323e) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_15.rom",    0x600002, 0x80000, CRC(4f2d372f) SHA1(db6a94d1f92c1b96e404b38ebcb1eedbec3ae6cc) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_16.rom",    0x600004, 0x80000, CRC(93d97fde) SHA1(e4be5216f98ad08a9118d629d398be2bd54e2e2a) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "rcm_17.rom",    0x600006, 0x80000, CRC(92371042) SHA1(c55833cbaddcc986edd23c009a3e3c7ff09c2708) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+
+	ROM_REGION( 0x28000, REGION_CPU2, 0 ) /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "rcm_09.rom",    0x00000, 0x08000, CRC(9632d6ef) SHA1(2bcb6f17005ffbc9ef8fa4478a814f24b2e6e0b6) )
+	ROM_CONTINUE(              0x10000, 0x18000 )
+
+	ROM_REGION( 0x40000, REGION_SOUND1, 0 )	/* Samples */
+	ROM_LOAD( "rcm_18.rom",    0x00000, 0x20000, CRC(80f1f8aa) SHA1(4a5b7b2a6941ad68da7472c63362c7bcd353fa54) )
+	ROM_LOAD( "rcm_19.rom",    0x20000, 0x20000, CRC(f257dbe1) SHA1(967def6b6f93039dbc46373caabeb3301577be75) )
+ROM_END
+
+/* CPS Prototype */
 
 ROM_START( gulunpa )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
@@ -7743,6 +8250,80 @@ ROM_END
                                         
 /* Home 'CPS Changer' Unit  */
 
+ROM_START( sfzch )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "sfzch23", 0x000000, 0x80000, CRC(1140743f) SHA1(10bcedb5cca266f2aa3ed99ede6f9a64fc877539) )
+	ROM_LOAD16_WORD_SWAP( "sfza22",  0x080000, 0x80000, CRC(8d9b2480) SHA1(405305c1572908d00eab735f28676fbbadb4fac6) )
+	ROM_LOAD16_WORD_SWAP( "sfzch21", 0x100000, 0x80000, CRC(5435225d) SHA1(6b1156fd82d0710e244ede39faaae0847c598376) )
+	ROM_LOAD16_WORD_SWAP( "sfza20",  0x180000, 0x80000, CRC(806e8f38) SHA1(b6d6912aa8f2f590335d7ff9a8214648e7131ebb) )
+
+	ROM_REGION( 0x800000, REGION_GFX1, 0 )
+	ROMX_LOAD( "sfz_01.3a",      0x000000, 0x80000, CRC(0dd53e62) SHA1(5f3bcf5ca0fd564d115fe5075a4163d3ee3226df) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_02.4a",      0x000002, 0x80000, CRC(94c31e3f) SHA1(2187b3d4977514f2ae486eb33ed76c86121d5745) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_03.5a",      0x000004, 0x80000, CRC(9584ac85) SHA1(bbd62d66b0f6909630e801ce5d6331d43f44d741) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_04.6a",      0x000006, 0x80000, CRC(b983624c) SHA1(841106bb9453e3dfb7869c4b0e9149cc610d515a) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_05.7a",      0x200000, 0x80000, CRC(2b47b645) SHA1(bc6426eff5df9417f32666586744626fa544f7b5) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_06.8a",      0x200002, 0x80000, CRC(74fd9fb1) SHA1(7945472591f3c06970e96611a0363ed8f3d52c36) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_07.9a",      0x200004, 0x80000, CRC(bb2c734d) SHA1(97a06935f86f31755d2ffdc5b56bef53944bdecd) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_08.10a",     0x200006, 0x80000, CRC(454f7868) SHA1(eecccba7542d893bc41676246a20aa4914b79bbc) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_10.3c",      0x400000, 0x80000, CRC(2a7d675e) SHA1(0144ba34a29fb08b41c780ce65bb06d25724e88f) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_11.4c",      0x400002, 0x80000, CRC(e35546c8) SHA1(7b08aa3413494d12c5c550263a5f00b64b98e6ab) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_12.5c",      0x400004, 0x80000, CRC(f122693a) SHA1(71ce901d8d30207e506b6a8d6a4e0fcf3a1b0eac) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_13.6c",      0x400006, 0x80000, CRC(7cf942c8) SHA1(a7109facb97a8a11ddf1b4e07de6ff3164d713a1) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_14.7c",      0x600000, 0x80000, CRC(09038c81) SHA1(3461d70902fbfb92ce40f804be6388276a01d153) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_15.8c",      0x600002, 0x80000, CRC(1aa17391) SHA1(b4d0f760a430b7fc4443b6c94da2659315c5b926) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_16.9c",      0x600004, 0x80000, CRC(19a5abd6) SHA1(73ba1de15c883fdc69fd7dccdb58d00ca512d4ea) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_17.10c",     0x600006, 0x80000, CRC(248b3b73) SHA1(95810a17b1caf6372b33ed3e4ee8a7e51482c70d) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+	
+	ROM_REGION( 0x18000, REGION_CPU2, 0 ) /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "sfz_09.12a",      0x00000, 0x08000, CRC(c772628b) SHA1(ebc5b7c173caf1e151f733f23c1b20abec24e16d) )
+	ROM_CONTINUE(                0x10000, 0x08000 )
+
+	ROM_REGION( 0x40000, REGION_SOUND1, 0 )	/* Samples */
+	ROM_LOAD( "sfz_18.11c",      0x00000, 0x20000, CRC(61022b2d) SHA1(6369d0c1d08a30ee19b94e52ab1463a7784b9de5) )
+	ROM_LOAD( "sfz_19.12c",      0x20000, 0x20000, CRC(3b5886d5) SHA1(7e1b7d40ef77b5df628dd663d45a9a13c742cf58) )
+ROM_END
+
+ROM_START( sfzchk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "sfzchk23", 0x000000, 0x80000, CRC(827e7b8f) SHA1(b2dee8d00cb1a91387a39200762f528b6d18168c) )
+	ROM_LOAD16_WORD_SWAP( "sfza22",   0x080000, 0x80000, CRC(8d9b2480) SHA1(405305c1572908d00eab735f28676fbbadb4fac6) )
+	ROM_LOAD16_WORD_SWAP( "sfzch21",  0x100000, 0x80000, CRC(5435225d) SHA1(6b1156fd82d0710e244ede39faaae0847c598376) )
+	ROM_LOAD16_WORD_SWAP( "sfza20",   0x180000, 0x80000, CRC(806e8f38) SHA1(b6d6912aa8f2f590335d7ff9a8214648e7131ebb) )
+
+	ROM_REGION( 0x800000, REGION_GFX1, 0 )
+	ROMX_LOAD( "sfz_01.3a",      0x000000, 0x80000, CRC(0dd53e62) SHA1(5f3bcf5ca0fd564d115fe5075a4163d3ee3226df) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_02.4a",      0x000002, 0x80000, CRC(94c31e3f) SHA1(2187b3d4977514f2ae486eb33ed76c86121d5745) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_03.5a",      0x000004, 0x80000, CRC(9584ac85) SHA1(bbd62d66b0f6909630e801ce5d6331d43f44d741) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_04.6a",      0x000006, 0x80000, CRC(b983624c) SHA1(841106bb9453e3dfb7869c4b0e9149cc610d515a) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_05.7a",      0x200000, 0x80000, CRC(2b47b645) SHA1(bc6426eff5df9417f32666586744626fa544f7b5) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_06.8a",      0x200002, 0x80000, CRC(74fd9fb1) SHA1(7945472591f3c06970e96611a0363ed8f3d52c36) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_07.9a",      0x200004, 0x80000, CRC(bb2c734d) SHA1(97a06935f86f31755d2ffdc5b56bef53944bdecd) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_08.10a",     0x200006, 0x80000, CRC(454f7868) SHA1(eecccba7542d893bc41676246a20aa4914b79bbc) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_10.3c",      0x400000, 0x80000, CRC(2a7d675e) SHA1(0144ba34a29fb08b41c780ce65bb06d25724e88f) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_11.4c",      0x400002, 0x80000, CRC(e35546c8) SHA1(7b08aa3413494d12c5c550263a5f00b64b98e6ab) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_12.5c",      0x400004, 0x80000, CRC(f122693a) SHA1(71ce901d8d30207e506b6a8d6a4e0fcf3a1b0eac) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfz_13.6c",      0x400006, 0x80000, CRC(7cf942c8) SHA1(a7109facb97a8a11ddf1b4e07de6ff3164d713a1) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfzk_14.7c",     0x600000, 0x80000, CRC(95e0cf7e) SHA1(aa0130e39d5f9921291d5c85ba9bee9510e34d64) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfzk_15.8c",     0x600002, 0x80000, CRC(b3dea987) SHA1(08330692e32d9d623d1c9f9b45e9b447e119bf1f) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfzk_16.9c",     0x600004, 0x80000, CRC(323b32ca) SHA1(47fa25f88a5bacbe29bec711671980a1963ddd6b) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "sfzk_17.10c",    0x600006, 0x80000, CRC(9b3c2d26) SHA1(28f519c5e01e80f8e4a3c474bfc198aa11e0c686) , ROM_GROUPWORD | ROM_SKIP(6) )
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+	
+	ROM_REGION( 0x18000, REGION_CPU2, 0 ) /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "sfz_09.12a",      0x00000, 0x08000, CRC(c772628b) SHA1(ebc5b7c173caf1e151f733f23c1b20abec24e16d) )
+	ROM_CONTINUE(                0x10000, 0x08000 )
+
+	ROM_REGION( 0x40000, REGION_SOUND1, 0 )	/* Samples */
+	ROM_LOAD( "sfz_18.11c",      0x00000, 0x20000, CRC(61022b2d) SHA1(6369d0c1d08a30ee19b94e52ab1463a7784b9de5) )
+	ROM_LOAD( "sfz_19.12c",      0x20000, 0x20000, CRC(3b5886d5) SHA1(7e1b7d40ef77b5df628dd663d45a9a13c742cf58) )
+ROM_END
+
 /* B-Board 91635B-2 */
 ROM_START( wofch )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
@@ -7771,8 +8352,37 @@ ROM_START( wofch )
 	ROM_LOAD( "tk2-q2.2k",       0x080000, 0x80000, CRC(20f55ca9) SHA1(90134e9a9c4749bb65c728b66ea4dac1fd4d88a4) )
 	ROM_LOAD( "tk2-q3.3k",       0x100000, 0x80000, CRC(bfcf6f52) SHA1(2a85ff3fc89b4cbabd20779ec12da2e116333c7c) )
 	ROM_LOAD( "tk2-q4.4k",       0x180000, 0x80000, CRC(36642e88) SHA1(8ab25b19e2b67215a5cb1f3aa81b9d26009cfeb8) )
-ROM_END		
-					
+ROM_END
+
+ROM_START( wofchk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )      /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "tk2k=ch=_23.8f", 0x000000, 0x80000, CRC(586c541f) SHA1(520b5821369d2b678e1af3dfb7a9b643d39feb2f) )
+	ROM_LOAD16_WORD_SWAP( "tk2k=ch=_22.7f", 0x080000, 0x80000, CRC(1a4a3459) SHA1(0a881731f6c69ed5bb652ea6c26684f2b9815210) )
+
+	ROM_REGION( 0x400000, REGION_GFX1, 0 )
+	ROMX_LOAD( "tk2-1m.3a",       0x000000, 0x80000, CRC(0d9cb9bf) SHA1(cc7140e9a01a14b252cb1090bcea32b0de461928) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2-3m.5a",       0x000002, 0x80000, CRC(45227027) SHA1(b21afc593f0d4d8909dfa621d659cbb40507d1b2) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2-2m.4a",       0x000004, 0x80000, CRC(c5ca2460) SHA1(cbe14867f7b94b638ca80db7c8e0c60881183469) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2-4m.6a",       0x000006, 0x80000, CRC(e349551c) SHA1(1d977bdf256accf750ad9930ec4a0a19bbf86964) , ROM_GROUPWORD | ROM_SKIP(6) )
+	ROMX_LOAD( "tk2k=ch=_05.7a",  0x200000, 0x80000, CRC(d83780f8) SHA1(7b7fe86de937e84b1bd6de1540f843275b7c7824) , ROM_GROUPWORD | ROM_SKIP(6) )    /* == tk2_05.7a */
+	ROMX_LOAD( "tk2k=ch=_06.8a",  0x200002, 0x80000, CRC(4b499b49) SHA1(1a1f30261b9c035e2353cde04174d5dc95e563a7) , ROM_GROUPWORD | ROM_SKIP(6) )    /* == tk2_06.8a */
+	ROMX_LOAD( "tk2k=ch=_07.9a",  0x200004, 0x80000, CRC(131382f5) SHA1(86c4fa6b659f8a51b089966fe0f4de284c4dd350) , ROM_GROUPWORD | ROM_SKIP(6) )    /* 1 byte different from wofj, pcb verified */
+	ROMX_LOAD( "tk2k=ch=_08.10a", 0x200006, 0x80000, CRC(5575812d) SHA1(4259a06b29e3f59a420d95e3aee3b1a4ee211af3) , ROM_GROUPWORD | ROM_SKIP(6) )    /* == tk2_08.10a */
+
+	ROM_REGION( 0x8000, REGION_GFX2, 0 )
+	ROM_COPY( REGION_GFX1, 0x000000, 0x000000, 0x8000 )	/* stars */
+	
+	ROM_REGION( 2*0x28000, REGION_CPU2, 0 ) /* QSound Z80 code + space for decrypted opcodes */
+	ROM_LOAD( "tk2_qa.5k",        0x00000, 0x08000, CRC(c9183a0d) SHA1(d8b1d41c572f08581f8ab9eb878de77d6ea8615d) )
+	ROM_CONTINUE(                 0x10000, 0x18000 )
+
+	ROM_REGION( 0x200000, REGION_SOUND1, 0 ) /* QSound samples */
+	ROM_LOAD( "tk2-q1.1k",        0x000000, 0x80000, CRC(611268cf) SHA1(83ab059f2110fb25fdcff928d56b790fc1f5c975) )
+	ROM_LOAD( "tk2-q2.2k",        0x080000, 0x80000, CRC(20f55ca9) SHA1(90134e9a9c4749bb65c728b66ea4dac1fd4d88a4) )
+	ROM_LOAD( "tk2-q3.3k",        0x100000, 0x80000, CRC(bfcf6f52) SHA1(2a85ff3fc89b4cbabd20779ec12da2e116333c7c) )
+	ROM_LOAD( "tk2-q4.4k",        0x180000, 0x80000, CRC(36642e88) SHA1(8ab25b19e2b67215a5cb1f3aa81b9d26009cfeb8) )
+ROM_END
+
 
 
 static DRIVER_INIT( wof )
@@ -7829,10 +8439,12 @@ GAME( 1988, lostwrld, forgottn, forgottn,          forgottn, cps1,     ROT0,   "
 GAME( 1988, ghouls,   0,        cps1,              ghouls,   cps1,     ROT0,   "Capcom", "Ghouls'n Ghosts (World)" )						/* Wed.26.10.1988 in the ROMS*/
 GAME( 1988, ghoulsu,  ghouls,   cps1,              ghoulsu,  cps1,     ROT0,   "Capcom", "Ghouls'n Ghosts (US)" )						/* Wed.26.10.1988 in the ROMS*/
 GAME( 1988, daimakai, ghouls,   cps1_12mhz,        daimakai, cps1,     ROT0,   "Capcom", "Dai Makai-Mura (Japan)" )						/* Wed.26.10.1988 in the ROMS*/
+GAME( 1988, daimakaik, ghouls,   cps1_12mhz,        daimakai, cps1,     ROT0,   "Capcom", "Dai Makai-Mura (Korean Translation)" )			/* Wed.26.10.1988 in the ROMS*/
 GAME( 1989, strider,  0,        cps1,              strider,  cps1,     ROT0,   "Capcom", "Strider (US set 1)" )
 GAME( 1989, stridrua, strider,  cps1,              stridrua, cps1,     ROT0,   "Capcom", "Strider (US set 2)" )
 GAME( 1989, striderj, strider,  cps1_12mhz,        strider,  cps1,     ROT0,   "Capcom", "Strider Hiryu (Japan set 1)" )
 GAME( 1989, stridrja, strider,  cps1,              strider,  cps1,     ROT0,   "Capcom", "Strider Hiryu (Japan set 2)" )
+GAME( 1989, striderk,  strider,  cps1_12mhz,        strider,  cps1,     ROT0,   "Capcom", "Strider Hiryu (Korean Translation)" )
 GAME( 1989, dw,       0,        cps1,              dw,       cps1,     ROT0,   "Capcom", "Dynasty Wars (World)" )						/* (c) Capcom U.S.A.*/
 GAME( 1989, dwj,      dw,       cps1,              dw,       cps1,     ROT0,   "Capcom", "Tenchi wo Kurau (Japan)" )
 GAME( 1989, willow,   0,        cps1,              willow,   cps1,     ROT0,   "Capcom", "Willow (US)" )
@@ -7840,11 +8452,15 @@ GAME( 1989, willowj,  willow,   cps1,              willow,   cps1,     ROT0,   "
 GAME( 1989, willowje, willow,   cps1,              willow,   cps1,     ROT0,   "Capcom", "Willow (Japan, English)" )						/* (c) Capcom U.S.A. but Japan - warning*/
 GAME( 1989, unsquad,  0,        cps1,              unsquad,  cps1,     ROT0,   "Capcom", "U.N. Squadron (US)" )
 GAME( 1989, area88,   unsquad,  cps1,              unsquad,  cps1,     ROT0,   "Capcom", "Area 88 (Japan)" )
+GAME( 1989, area88ka,  unsquad,  cps1,              unsquad,  cps1,     ROT0,   "Capcom", "Area 88 (Korean Translation, Type A)" )
+GAME( 1989, area88kb,  unsquad,  cps1,              unsquad,  cps1,     ROT0,   "Capcom", "Area 88 (Korean Translation, Type B)" )
 GAME( 1989, ffight,   0,        ffight_hack,       ffight,   cps1,     ROT0,   "Capcom", "Final Fight (World)" )
 GAME( 1989, ffightu,  ffight,   ffight_hack,       ffight,   cps1,     ROT0,   "Capcom", "Final Fight (US 900112)" )
 GAME( 1989, ffightj,  ffight,   ffight_hack,       ffight,   cps1,     ROT0,   "Capcom", "Final Fight (Japan set 1)" )
 GAME( 1989, ffightj1, ffight,   ffight_hack,       ffight,   cps1,     ROT0,   "Capcom", "Final Fight (Japan set 2)" )
+GAME( 1989, ffightk,   ffight,   ffight_hack,       ffight,   cps1,     ROT0,   "Capcom", "Final Fight (Korean Translation 900613)" )
 GAME( 1989, ffightae, ffight,   ffight_hack_12mhz, ffightae, cps1,     ROT0,   "bootleg", "Final Fight 30th Anniversary Edition" )
+GAME( 1989, ffightaek, ffight,   ffight_hack_12mhz, ffightae, cps1,     ROT0,   "bootleg", "Final Fight 30th Anniversary Edition (Korean Translation)" )
 GAME( 1990, 1941,     0,        cps1,              1941,     cps1,     ROT270, "Capcom", "1941 - Counter Attack (World)" )
 GAME( 1990, 1941j,    1941,     cps1,              1941,     cps1,     ROT270, "Capcom", "1941 - Counter Attack (Japan)" )
 GAME( 1990, mercs,    0,        cps1,              mercs,    cps1,     ROT270, "Capcom", "Mercs (World 900302)" )						/* ETC*/
@@ -7877,16 +8493,20 @@ GAMEC(1991, sf2jc,    sf2,      sf2,               sf2j,     cps1,     ROT0,   "
 GAME( 1991, 3wonders, 0,        cps1,              3wonders, cps1,     ROT0,   "Capcom", "Three Wonders (World 910520)" )					/* ETC */
 GAME( 1991, 3wonderu, 3wonders, cps1,              3wonders, cps1,     ROT0,   "Capcom", "Three Wonders (US 910520)" )
 GAME( 1991, wonder3,  3wonders, cps1,              3wonders, cps1,     ROT0,   "Capcom", "Wonder 3 (Japan 910520)" )
+GAME( 1991, wonder3k,  3wonders, cps1,              3wonders, cps1,     ROT0,   "Capcom", "Wonder 3 (Korean Translation 910520)" )
 GAME( 1991, kod,      0,        cps1,              kod,      cps1,     ROT0,   "Capcom", "The King of Dragons (World 910711)" )				/* ETC */
 GAME( 1991, kodu,     kod,      cps1,              kodj,     cps1,     ROT0,   "Capcom", "The King of Dragons (US 910910)" )
 GAME( 1991, kodj,     kod,      cps1,              kodj,     cps1,     ROT0,   "Capcom", "The King of Dragons (Japan 910805)" )
+GAME( 1991, kodk,      kod,      cps1,              kodj,     cps1,     ROT0,   "Capcom", "The King of Dragons (Korean Translation 910805)" )
 GAMEX(1991, kodb,     kod,      cps1,              kod,      cps1,     ROT0,   "Capcom", "The King of Dragons (bootleg)", GAME_NOT_WORKING )		/* 910731  ETC*/
 GAME( 1991, captcomm, 0,        cps1,              captcomm, cps1,     ROT0,   "Capcom", "Captain Commando (World 911014)" )				/* OTHER COUNTRY*/
 GAME( 1991, captcomu, captcomm, cps1,              captcomm, cps1,     ROT0,   "Capcom", "Captain Commando (US 910928)" )
 GAME( 1991, captcomj, captcomm, cps1,              captcomm, cps1,     ROT0,   "Capcom", "Captain Commando (Japan 911202)" )
+GAME( 1991, captcomk,  captcomm, cps1,              captcomm, cps1,     ROT0,   "Capcom", "Captain Commando (Korean Translation 911202)" )
 GAME( 1991, knights,  0,        cps1,              knights,  cps1,     ROT0,   "Capcom", "Knights of the Round (World 911127)" )				/* ETC */
 GAME( 1991, knightsu, knights,  cps1,              knights,  cps1,     ROT0,   "Capcom", "Knights of the Round (US 911127)" )
 GAME( 1991, knightsj, knights,  cps1,              knights,  cps1,     ROT0,   "Capcom", "Knights of the Round (Japan 911127)" )
+GAME( 1991, knightsk,  knights,  cps1,              knights,  cps1,     ROT0,   "Capcom", "Knights of the Round (Korean Translation 911127)" )
 GAMEC(1992, sf2ce,    0,        sf2_12mhz,         sf2,      cps1,     ROT0,   "Capcom", "Street Fighter II' - Champion Edition (World 920313)", &sf2_ctrl, NULL )	/* ETC */
 GAMEC(1992, sf2ceua,  sf2ce,    sf2_12mhz,         sf2,      cps1,     ROT0,   "Capcom", "Street Fighter II' - Champion Edition (US 920313)", &sf2_ctrl, NULL )
 GAMEC(1992, sf2ceub,  sf2ce,    sf2_12mhz,         sf2,      cps1,     ROT0,   "Capcom", "Street Fighter II' - Champion Edition (US 920513)", &sf2_ctrl, NULL )
@@ -7917,16 +8537,21 @@ GAME( 1994, qadj,     qad,      cps1_12mhz,        qadj,     cps1,     ROT0,   "
 GAME( 1995, qtono2,   0,        cps1_12mhz,        qtono2,   cps1,     ROT0,   "Capcom", "Quiz Tonosama no Yabou 2 Zenkoku-ban (Japan 950123)" )
 GAME( 1995, megaman,  0,        cps1_12mhz,        megaman,  cps1,     ROT0,   "Capcom", "Mega Man - The Power Battle (CPS1 Asia 951006)" )
 GAME( 1995, rockmanj, megaman,  cps1_12mhz,        megaman,  cps1,     ROT0,   "Capcom", "Rockman - The Power Battle (CPS1 Japan 950922)" )
+GAME( 1995, rockmank,  megaman,  cps1_12mhz,        megaman,  cps1,     ROT0,   "Capcom", "Rockman: The Power Battle (CPS1 Korean Translation 950922)" )
 GAME( 1992, wof,      0,        qsound,            wof,      wof,      ROT0,   "Capcom", "Warriors of Fate (World 921002)" )				/* ETC */
 GAME( 1992, wofa,     wof,      qsound,            wof,      wof,      ROT0,   "Capcom", "Sangokushi II (Asia 921005)" )					/* World - warning */
 GAME( 1992, wofu,     wof,      qsound,            wof,      wof,      ROT0,   "Capcom", "Warriors of Fate (US 921031)" )					/* World - warning */
 GAME( 1992, wofj,     wof,      qsound,            wof,      wof,      ROT0,   "Capcom", "Tenchi wo Kurau II - Sekiheki no Tatakai (Japan 921031)" )
+GAME( 1992, wofk,      wof,      qsound,            wof,      wof,      ROT0,   "Capcom", "Tenchi wo Kurau II: Sekiheki no Tatakai (Korean Translation 921031)" )
+GAME( 1992, wofk103,   wof,      qsound,            wof,      wof,      ROT0,   "Capcom", "Tenchi wo Kurau II: Counter Attack of Mei Sisters (Korean Translation 921031)" )
 GAME( 1993, dino,     0,        qsound,            dino,     dino,     ROT0,   "Capcom", "Cadillacs and Dinosaurs (World 930201)" )			/* ETC */
 GAME( 1993, dinou,    dino,     qsound,            dino,     dino ,    ROT0,   "Capcom", "Cadillacs and Dinosaurs (US 930201)" )
 GAME( 1993, dinoj,    dino,     qsound,            dino,     dino ,    ROT0,   "Capcom", "Cadillacs Kyouryuu-Shinseiki (Japan 930201)" )
+GAME( 1993, dinok,     dino,     qsound,            dino,     dino ,    ROT0,   "Capcom", "Cadillacs and Dinosaurs (Korean Translation 930223)" )
 GAME( 1993, punisher, 0,        qsound,            punisher, punisher, ROT0,   "Capcom", "The Punisher (World 930422)" )					/* ETC*/
 GAME( 1993, punishru, punisher, qsound,            punisher, punisher, ROT0,   "Capcom", "The Punisher (US 930422)" )
 GAME( 1993, punishrj, punisher, qsound,            punisher, punisher, ROT0,   "Capcom", "The Punisher (Japan 930422)" )
+GAME( 1993, punishrk,  punisher, qsound,            punisher, punisher, ROT0,   "Capcom", "The Punisher (Korean Translation 930422)" )
 GAME( 1993, slammast, 0,        qsound,            slammast, slammast, ROT0,   "Capcom", "Saturday Night Slam Masters (World 930713)" )		/* ETC */
 GAME( 1993, slammasu, slammast, qsound,            slammast, slammast, ROT0,   "Capcom", "Saturday Night Slam Masters (US 930713)" )
 GAME( 1993, mbomberj, slammast, qsound,            slammast, slammast, ROT0,   "Capcom", "Muscle Bomber - The Body Explosion (Japan 930713)" )
@@ -7939,4 +8564,7 @@ GAME( 1995, pang3j,   pang3,    pang3,             pang3,    pang3,    ROT0,   "
 /* CPS Prototype */
 GAME( 1993, gulunpa,  0,        cps1,              gulunpa,  cps1,     ROT0,   "Capcom", "Gulun.Pa! (Japan 931220 L Prototype)" )         			
 /* CPS Changer */
+GAME( 1995, sfzch,     0,        cps1,              sfzch,    cps1,     ROT0,   "Capcom", "Street Fighter Zero (CPS Changer, Japan 951020)" )
+GAME( 1995, sfzchk,    sfzch,    cps1,              sfzch,    cps1,     ROT0,   "Capcom", "Street Fighter Zero (CPS Changer, Korean Translation 951020)" )
 GAME( 1994, wofch,    0,        qsound,            wofch,    wof,      ROT0,   "Capcom", "Tenchi wo Kurau II: Sekiheki no Tatakai (CPS Changer, Japan 921031)" )
+GAME( 1994, wofchk,    wofch,    qsound,            wofch,    wof,      ROT0,   "Capcom", "Tenchi wo Kurau II: Sekiheki no Tatakai (CPS Changer, Korean Translation 921031)" )
diff --git a/src/drivers/cps2.c b/src/drivers/cps2.c
index 42bdcfb0..8b68e8b6 100644
--- a/src/drivers/cps2.c
+++ b/src/drivers/cps2.c
@@ -1965,6 +1965,35 @@ ROM_START( avsph )
 	ROM_LOAD( "avsph.key",    0x000000, 0x000014, CRC(cae7b680) SHA1(b5f7c90c6c258ee9d0943028298bc8a0fcba63fb) )
 ROM_END
 
+ROM_START( avspk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "avpk.03d", 0x000000, 0x80000, CRC(2d12ee9a) SHA1(7cfee45a8336db8a9df5c55c6b7e7db747f111f8) )
+	ROM_LOAD16_WORD_SWAP( "avpk.04d", 0x080000, 0x80000, CRC(48d480b8) SHA1(83ec28ef01d585dbe93c56554646cfe7b7af6456) )
+	ROM_LOAD16_WORD_SWAP( "avpk.05d", 0x100000, 0x80000, CRC(a8dfff2e) SHA1(f3db74147ac9bf1e161d962f74508755668fbb55) )
+	ROM_LOAD16_WORD_SWAP( "avp.06",   0x180000, 0x80000, CRC(190b817f) SHA1(9bcfc0a015ffba9cdac25b6270939a9690de5da7) )
+
+	ROM_REGION( 0x1000000, REGION_GFX1, 0 )
+	ROM_LOAD64_WORD( "avp.13m",   0x0000000, 0x200000, CRC(8f8b5ae4) SHA1(457ce959aa5db3a003de7dda2b3799b2f1ae279b) )  /* LH53706A */
+	ROM_LOAD64_WORD( "avp.15m",   0x0000002, 0x200000, CRC(b00280df) SHA1(bc1291a4a222d410bc99b6f1ed392067d9c3999e) )  /* LH53706B */
+	ROM_LOAD64_WORD( "avp.17m",   0x0000004, 0x200000, CRC(94403195) SHA1(efaad001527a5eba8f626aea9037ac6ef9a2c295) )  /* LH53706C */
+	ROM_LOAD64_WORD( "avp.19m",   0x0000006, 0x200000, CRC(e1981245) SHA1(809ccb7f10262e227d5e9d9f710e06f0e751f550) )  /* LH53706D */
+	ROM_LOAD64_WORD( "avpk.14m",  0x0800000, 0x100000, CRC(893a2d85) SHA1(08b5b56680687960eb7597710b3c65ced2416428) )  /* LH53855G */
+	ROM_LOAD64_WORD( "avpk.16m",  0x0800002, 0x100000, CRC(89d1a27b) SHA1(f908def0b5380fb11f678ec8d33c531b303b8048) )  /* LH53855H */
+	ROM_LOAD64_WORD( "avpk.18m",  0x0800004, 0x100000, CRC(9e82fd9d) SHA1(76a8f69ace9410850475d3cb26d995ebd065dbda) )  /* LH53855J */
+	ROM_LOAD64_WORD( "avpk.20m",  0x0800006, 0x100000, CRC(e8e90701) SHA1(4d545203aad0da720b57be9446d9ea4c606a0bc7) )  /* LH53855K */
+
+	ROM_REGION( QSOUND_SIZE, REGION_CPU2, 0 )  /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "avp.01",   0x00000, 0x08000, CRC(2d3b4220) SHA1(2b2d04d4282550fa9f6e1ad8528f20d1f2ac02eb) )
+	ROM_CONTINUE(         0x10000, 0x18000 )
+
+	ROM_REGION( 0x400000, REGION_SOUND1, 0 )  /* QSound samples */
+	ROM_LOAD16_WORD_SWAP( "avp.11m",   0x000000, 0x200000, CRC(83499817) SHA1(e65b0ebd61ddc748842a9d4d92404b5305307623) )
+	ROM_LOAD16_WORD_SWAP( "avp.12m",   0x200000, 0x200000, CRC(f4110d49) SHA1(f27538776cc1ba8213f19f98728ed8c02508d3ac) )
+
+	ROM_REGION( 0x20, REGION_USER5, 0 )
+	ROM_LOAD( "avspj.key",    0x000000, 0x000014, CRC(3d5ccc08) SHA1(85b30ccde86e2e1f50e662598dc81d47219519a1) )
+ROM_END
+
 ROM_START( batcir )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "btce.03", 0x000000, 0x80000, CRC(bc60484b) SHA1(9b4e46d0f3d96edcd1c3707409507a5027c69039) )
@@ -2278,6 +2307,33 @@ ROM_START( csclubh )
 	ROM_LOAD( "csclubh.key",  0x000000, 0x000014, CRC(b0adc39e) SHA1(37f29580497d24c8f248031acdfab06374ed77fd) )
 ROM_END
 
+ROM_START( csclubk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "csck.03", 0x000000, 0x80000, CRC(bd9fdb94) SHA1(f4f5c70fa8c905959482ef565cd455326e811f5b) )
+	ROM_LOAD16_WORD_SWAP( "cscj.04", 0x080000, 0x80000, CRC(60c632bb) SHA1(0d42c33aa476d2cc4efcdad78667353b88225966) )
+	ROM_LOAD16_WORD_SWAP( "cscj.05", 0x100000, 0x80000, CRC(ad042003) SHA1(1e167c88f3b0617c38c9f43bdc816045ac0296e0) )
+	ROM_LOAD16_WORD_SWAP( "cscj.06", 0x180000, 0x80000, CRC(169e4d40) SHA1(6540d89df5e76189d32b696be7626087fe26e33b) )
+	ROM_LOAD16_WORD_SWAP( "csc.07",  0x200000, 0x80000, CRC(01b05caa) SHA1(5b84487da68e6b6f2889c76bf9e070e25941988c) )
+
+	ROM_REGION( 0x1000000, REGION_GFX1, 0 )
+	ROM_FILL(              0x000000, 0x800000, 0x00 )
+	ROM_LOAD64_WORD( "csck.14m",  0x800000, 0x200000, CRC(af69c781) SHA1(d265d1de2dc15cc4450150e8fa1eae4d18578001) )  /* ROMs 73 to 76 joined in all EPROM version */
+	ROM_LOAD64_WORD( "csck.16m",  0x800002, 0x200000, CRC(60fd4794) SHA1(bbb06181742a3ae6e508247fa3626552b1845ca4) )  /* ROMs 63 to 66 joined in all EPROM version */
+	ROM_LOAD64_WORD( "csck.18m",  0x800004, 0x200000, CRC(9e8a3643) SHA1(1d513b528bca67cea4e1708bf760b97c4a948743) )  /* ROMs 83 to 86 joined in all EPROM version */
+	ROM_LOAD64_WORD( "csck.20m",  0x800006, 0x200000, CRC(eefb5de5) SHA1(bb70dc487995f34fd65c71d564983737debaedea) )  /* ROMs 93 to 96 joined in all EPROM version */
+
+	ROM_REGION( QSOUND_SIZE, REGION_CPU2, 0 )  /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "csc.01",   0x00000, 0x08000, CRC(ee162111) SHA1(ce8d4bd32bb10ee8b0274ba6fcef05a583b39d48) )
+	ROM_CONTINUE(         0x10000, 0x18000 )
+
+	ROM_REGION( 0x400000, REGION_SOUND1, 0 )  /* QSound samples */
+	ROM_LOAD16_WORD_SWAP( "csc.11m",   0x000000, 0x200000, CRC(a027b827) SHA1(6d58a63efc7bd5d07353d9b55826c01a3c416c33) )  /* ROMs 51 to 54 joined in all EPROM version */
+	ROM_LOAD16_WORD_SWAP( "csc.12m",   0x200000, 0x200000, CRC(cb7f6e55) SHA1(b64e6b663fd09e887d2dc0f4b545e88688c0af55) )  /* ROMs 55 to 58 joined in all EPROM version */
+
+	ROM_REGION( 0x20, REGION_USER5, 0 )
+	ROM_LOAD( "csclubj.key",  0x000000, 0x000014, CRC(519a04db) SHA1(8f792831dc7e07fb621806c4e320a047f801e9b8) )
+ROM_END
+
 ROM_START( cybots )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "cybe.03", 0x000000, 0x80000, CRC(234381cd) SHA1(6202a2a318feda525e16fd7b31c03af9ccc5d964) )
@@ -2740,6 +2796,36 @@ ROM_START( ddtodhr2 )
 	ROM_LOAD( "ddtodh.key",   0x000000, 0x000014, CRC(65f33a1c) SHA1(4bc2c0968115365fd8cd721b769f62ed32b02cf5) )
 ROM_END
 
+ROM_START( ddtodk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "dadk.03c", 0x000000, 0x80000, CRC(fc8b949f) SHA1(b0442bf6036dcab41738612aa54849d717467d39) )
+	ROM_LOAD16_WORD_SWAP( "dadk.04c", 0x080000, 0x80000, CRC(f931f325) SHA1(f0bdd649b302007f452a633bb9ac1788aa0cee1f) )
+	ROM_LOAD16_WORD_SWAP( "dadk.05c", 0x100000, 0x80000, CRC(3fc42c7e) SHA1(b14c0be83cfdb7803ea023886ccdee20147a817f) )
+	ROM_LOAD16_WORD_SWAP( "dadk.06a", 0x180000, 0x80000, CRC(e9fc6884) SHA1(fdd436925a471e665ffeace676be4106568c6dd4) )
+	ROM_LOAD16_WORD_SWAP( "dad.07a",  0x200000, 0x80000, CRC(b3480ec3) SHA1(a66f8dba67101fd71c2af4f3c3d71e55778a9f2c) )
+
+	ROM_REGION( 0xc00000, REGION_GFX1, 0 )
+	ROM_LOAD64_WORD( "dadk.13m",  0x000000, 0x200000, CRC(d89b6f34) SHA1(ba5a83ef7db0f675ec6b981efbbda423e969c682) )
+	ROM_LOAD64_WORD( "dadk.15m",  0x000002, 0x200000, CRC(09939159) SHA1(b90e9fd102d2d8e85148c7d7f4a040540729691a) )
+	ROM_LOAD64_WORD( "dadk.17m",  0x000004, 0x200000, CRC(f1678c95) SHA1(eeb7a0796e10f4ee27b6e66e40360f6d837686ac) )
+	ROM_LOAD64_WORD( "dadk.19m",  0x000006, 0x200000, CRC(62bbaec0) SHA1(34a2450348ef016f11fa86178bb74b0771f03eb4) )
+	ROM_LOAD64_WORD( "dadk.14m",  0x800000, 0x100000, CRC(d36dfb89) SHA1(59b135654e339e6c96b213311c5478843af0c46c) )
+	ROM_LOAD64_WORD( "dadk.16m",  0x800002, 0x100000, CRC(d3c7bde7) SHA1(4c58fabbb034f2de944c727f66a37ded01bbcbb4) )
+	ROM_LOAD64_WORD( "dadk.18m",  0x800004, 0x100000, CRC(9ee00759) SHA1(e2eeedd8a5d918432095db8d7c6bd479af7308e0) )
+	ROM_LOAD64_WORD( "dadk.20m",  0x800006, 0x100000, CRC(aa0528a2) SHA1(2ed1a14a48caaad11ca7724ceae2ed5af7c4fbb8) )
+
+	ROM_REGION( QSOUND_SIZE, REGION_CPU2, 0 )  /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "dad.01",   0x00000, 0x08000, CRC(3f5e2424) SHA1(4aa744576bc6752c43a90a27a816ebd90076b248) )
+	ROM_CONTINUE(         0x10000, 0x18000 )
+
+	ROM_REGION( 0x400000, REGION_SOUND1, 0 )  /* QSound samples */
+	ROM_LOAD16_WORD_SWAP( "dad.11m",   0x000000, 0x200000, CRC(0c499b67) SHA1(a8ebd8a1cd6dece8344b7cb0439d85843fb97616) )
+	ROM_LOAD16_WORD_SWAP( "dad.12m",   0x200000, 0x200000, CRC(2f0b5a4e) SHA1(8d1ebbb811aa469b0f0d29d719d2b9af28fb63a2) )
+
+	ROM_REGION( 0x20, REGION_USER5, 0 )
+	ROM_LOAD( "ddtoda.key",   0x000000, 0x000014, CRC(e5e8d1b8) SHA1(04667003776e2dbd207933b5c707bed635871cac) )
+ROM_END
+
 ROM_START( ddsom )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "dd2e.03e", 0x000000, 0x80000, CRC(449361af) SHA1(14af2b35e6f43f92c9e071f1dc85b18cf73ecb35) )
@@ -3183,6 +3269,40 @@ ROM_START( ddsomh )
 	ROM_LOAD( "ddsomh.key",   0x000000, 0x000014, CRC(caf6b540) SHA1(c17ea2dab973f54ce2eee457f83c519b86087117) )
 ROM_END
 
+ROM_START( ddsomk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "dd2k.03g", 0x000000, 0x80000, CRC(e89d22e3) SHA1(d20bcc55ed92dc391ec25504956aa8a0895f0a24) )
+	ROM_LOAD16_WORD_SWAP( "dd2k.04g", 0x080000, 0x80000, CRC(9a44d69c) SHA1(1bc2907058581fa39ddbbea5184cef9eac8a81c8) )
+	ROM_LOAD16_WORD_SWAP( "dd2.05g",  0x100000, 0x80000, CRC(5eb1991c) SHA1(429a60b5396ff4192904867fbe0524268f0edbcb) )
+	ROM_LOAD16_WORD_SWAP( "dd2k.06g", 0x180000, 0x80000, CRC(7f7ded68) SHA1(2a4784cf8156e5874f7b28d1995ba387d2530c67) )
+	ROM_LOAD16_WORD_SWAP( "dd2.07",   0x200000, 0x80000, CRC(909a0b8b) SHA1(58bda17c36063a79df8b5031755c7909a9bda221) )
+	ROM_LOAD16_WORD_SWAP( "dd2.08",   0x280000, 0x80000, CRC(e53c4d01) SHA1(bad872e4e793a39f68bc0e580772e982714b5876) )
+	ROM_LOAD16_WORD_SWAP( "dd2k.09",  0x300000, 0x80000, CRC(62f76683) SHA1(3ba1620c096e38b2ba108d69441f83aa4d5cc741) )
+	ROM_LOAD16_WORD_SWAP( "dd2k.10",  0x380000, 0x80000, CRC(df5efd28) SHA1(fc5079c4e2b316b9787e79391e80e59cad099a68) )
+
+	ROM_REGION( 0x1800000, REGION_GFX1, 0 )
+	ROM_LOAD64_WORD( "dd2k.13m",  0x0000000, 0x400000, CRC(9da53675) SHA1(39a2b51ea8da7fe271a86c8ac1f98bdb637f06ac) )
+	ROM_LOAD64_WORD( "dd2k.15m",  0x0000002, 0x400000, CRC(78a5c30f) SHA1(254b551dad21fa6ea965d3c7f1cc7d3600a7cc89) )
+	ROM_LOAD64_WORD( "dd2k.17m",  0x0000004, 0x400000, CRC(7289bac1) SHA1(117e693ecea88d8249a6440d2fb3113428aaaaa3) )
+	ROM_LOAD64_WORD( "dd2k.19m",  0x0000006, 0x400000, CRC(e23746e8) SHA1(7ec101f0bb001ec88a77b88999f21d6b3746165b) )
+	ROM_LOAD64_WORD( "dd2k.14m",  0x1000000, 0x200000, CRC(75b8fd5d) SHA1(3cd27336027d9aabcaef4a57f7155df3221ab209) )
+	ROM_LOAD64_WORD( "dd2k.16m",  0x1000002, 0x200000, CRC(9187a205) SHA1(c5caa3ef637fe88c98d16860c2fb4d95e44e7a7a) )
+	ROM_LOAD64_WORD( "dd2k.18m",  0x1000004, 0x200000, CRC(7e4fad8a) SHA1(fbc4f90722018efa5ffa2882cdcca5098666a864) )
+	ROM_LOAD64_WORD( "dd2k.20m",  0x1000006, 0x200000, CRC(2d5bb55c) SHA1(faf8c1f59c8f19dc9f7d1a23a8fc15ef4ed995cd) )
+
+	ROM_REGION( QSOUND_SIZE, REGION_CPU2, 0 )  /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "dd2.01",   0x00000, 0x08000, CRC(99d657e5) SHA1(1528dd6b07a0e79951a35c0457c8a9c9770e9c78) )
+	ROM_CONTINUE(         0x10000, 0x18000 )
+	ROM_LOAD( "dd2.02",   0x28000, 0x20000, CRC(117a3824) SHA1(14f3a12170b601c5466c93af9d2f24e0b386b4e4) )
+
+	ROM_REGION( 0x400000, REGION_SOUND1, 0 )  /* QSound samples */
+	ROM_LOAD16_WORD_SWAP( "dd2.11m",   0x000000, 0x200000, CRC(98d0c325) SHA1(7406e8d943d77c468eb418c4113261f4ab973bbf) )
+	ROM_LOAD16_WORD_SWAP( "dd2.12m",   0x200000, 0x200000, CRC(5ea2e7fa) SHA1(0e6a9fd007f637adcb2226c902394f07de45e803) )
+
+	ROM_REGION( 0x20, REGION_USER5, 0 )
+	ROM_LOAD( "ddsoma.key",   0x000000, 0x000014, CRC(8c3cc560) SHA1(ad19e78b938a67c9f5ed0dcd5c68b383e6ce0575) )
+ROM_END
+
 ROM_START( dimahoo )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "gmde.03", 0x000000, 0x80000, CRC(968fcecd) SHA1(82d6eb6488df48bc7b977fc900c24b29bd6573a9) )
@@ -4073,6 +4193,32 @@ ROM_START( megaman2h )
 	ROM_LOAD( "megaman2h.key", 0x000000, 0x000014, CRC(99cb8d19) SHA1(24b059ec7ef2188cce0636eacfbc9e676e8d558b) )
 ROM_END
 
+ROM_START( rockman2k )
+	ROM_REGION(CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "rm2k.03", 0x000000, 0x80000, CRC(6ba5e8d2) SHA1(73d925dee1fc3f910b13525703784a19045dd42a) )
+	ROM_LOAD16_WORD_SWAP( "rm2k.04", 0x080000, 0x80000, CRC(211105c9) SHA1(72f83c58a2729e7a6d1a469c6bbc8236d722181a) )
+	ROM_LOAD16_WORD_SWAP( "rm2.05",  0x100000, 0x80000, CRC(02ee9efc) SHA1(1b80c40389b51a03b930051f232630616c12e6c5) )
+
+	ROM_REGION( 0x1000000, REGION_GFX1, 0 )
+	ROM_FILL(              0x000000, 0x800000, 0x00 )
+	ROM_LOAD64_WORD( "rm2k.14m", 0x800000, 0x200000, CRC(712ccd27) SHA1(45fa1380fb9f11624369b3d478713e8319f32322) )
+	ROM_LOAD64_WORD( "rm2k.16m", 0x800002, 0x200000, CRC(ba4cc30b) SHA1(75b2697de7891c66c64285cb12e1b28af5aec668) )
+	ROM_LOAD64_WORD( "rm2k.18m", 0x800004, 0x200000, CRC(53cb1a05) SHA1(91a34006d63c5d8c28ea1df15470abab45c69834) )
+	ROM_LOAD64_WORD( "rm2k.20m", 0x800006, 0x200000, CRC(7b019f2c) SHA1(cfbb1dbbca954a9d33d5b53e406c24316018b2be) )
+
+	ROM_REGION(QSOUND_SIZE, REGION_CPU2, 0 )  /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "rm2.01a",  0x00000, 0x08000, CRC(d18e7859) SHA1(0939fac70042d0b4db5c2fdcef1f79b95febd45e) )
+	ROM_CONTINUE(         0x10000, 0x18000 )
+	ROM_LOAD( "rm2.02",   0x28000, 0x20000, CRC(c463ece0) SHA1(5c3e41eb61610b3f8c431206f6672907e3a0bdb0) )
+
+	ROM_REGION( 0x400000, REGION_SOUND1, 0 )  /* QSound samples */
+	ROM_LOAD16_WORD_SWAP( "rm2.11m",   0x000000, 0x200000, CRC(2106174d) SHA1(0a35d9ca8ebcad74904b20648d5320f839d6377e) )
+	ROM_LOAD16_WORD_SWAP( "rm2.12m",   0x200000, 0x200000, CRC(546c1636) SHA1(f96b172ab899f2c6ee17a5dd1fb61af9432e3cd2) )
+
+	ROM_REGION( 0x20, REGION_USER5, 0 )
+	ROM_LOAD( "rockman2j.key", 0x000000, 0x000014, CRC(c590187a) SHA1(f9140da0849711938c4d8a98fb38bc1504582a43) )
+ROM_END
+
 /*
 
 Gigaman 2 - 2004 Chinese rebuild Bootleg
@@ -6274,6 +6420,49 @@ ROM_START( rmancp2j )
 	ROM_LOAD( "rmancp2j.key", 0x000000, 0x000014, CRC(17309a70) SHA1(7d72a07bd556874a4b9b5cf3727d3c547051bb7a) )
 ROM_END
 
+ROM_START( rmancp2k )
+	ROM_REGION(CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "rcmk.03a", 0x000000, 0x80000, CRC(09512f87) SHA1(8cbf2e64115dbaa0f7332d17b7e53d698ec74140) )
+	ROM_LOAD16_WORD_SWAP( "rcmk.04a", 0x080000, 0x80000, CRC(09c95de1) SHA1(6273f5d4c6412255878e9b7270dbafece2619215) )
+	ROM_LOAD16_WORD_SWAP( "rcm.05a", 0x100000, 0x80000, CRC(517ccde2) SHA1(492256c192f0c4814efa1ee1dd390453dd2e5865) )
+
+	ROM_REGION( 0x1000000, REGION_GFX1, 0 )
+	ROM_FILL(              0x000000, 0x800000, 0x00 )
+	ROM_LOAD64_WORD( "rcmk.73",  0x800000, 0x080000, CRC(11542f04) SHA1(35d4fd9bdb075b968b60c067a896870d07146be7) )
+	ROM_LOAD64_WORD( "rcmk.63",  0x800002, 0x080000, CRC(922ece19) SHA1(99729f1f429e4726d8ab21da8b647669d0bd3d7a) )
+	ROM_LOAD64_WORD( "rcmk.83",  0x800004, 0x080000, CRC(0ceb4599) SHA1(383aa72a5e246f21bb37c4ba77022b32b0b3ff01) )
+	ROM_LOAD64_WORD( "rcmk.93",  0x800006, 0x080000, CRC(44d9e31d) SHA1(c4ff9dae0eec4f43ff0af3b3c1d8b0511ff0619a) )
+	ROM_LOAD64_WORD( "rcm.74",   0xa00000, 0x080000, CRC(004ec725) SHA1(b1d3bcf920b0a1d0f4b59c77f5962e8162bbef65) )
+	ROM_LOAD64_WORD( "rcm.64",   0xa00002, 0x080000, CRC(65c0464e) SHA1(4a035f4d28fc8aa72bfe0a06392b93b0abfba458) )
+	ROM_LOAD64_WORD( "rcm.84",   0xa00004, 0x080000, CRC(fb3097cc) SHA1(7bff2372809cdfa4dcd8537a448b177c0e86a94e) )
+	ROM_LOAD64_WORD( "rcm.94",   0xa00006, 0x080000, CRC(2e16557a) SHA1(f4a916c1524a8de23fc6afabc8c724a89530c631) )
+	ROM_LOAD64_WORD( "rcmk.75",  0xc00000, 0x080000, CRC(0be9a313) SHA1(2d5de4ff2bd84da6f67e23235d59709e53b8d4c9) )
+	ROM_LOAD64_WORD( "rcmk.65",  0xc00002, 0x080000, CRC(cc022b9a) SHA1(ad529367efca8ddecf6bc6e598373ac50abd33bc) )
+	ROM_LOAD64_WORD( "rcmk.85",  0xc00004, 0x080000, CRC(53a5e239) SHA1(397c8dec7d57b2d7eeb66ba7940fa52c520ec9ef) )
+	ROM_LOAD64_WORD( "rcmk.95",  0xc00006, 0x080000, CRC(a256c1d0) SHA1(8655c7020d2e9ee5d042eb3d593efb255b0ba5f4) )
+	ROM_LOAD64_WORD( "rcm.76",   0xe00000, 0x080000, CRC(89a889ad) SHA1(1ffe112051a3afc94df1326f17ef58dc2fc531aa) )
+	ROM_LOAD64_WORD( "rcm.66",   0xe00002, 0x080000, CRC(1300eb7b) SHA1(db4f53b1cf521df99d073dcf0bfafe7b113e95d5) )
+	ROM_LOAD64_WORD( "rcm.86",   0xe00004, 0x080000, CRC(6d974ebd) SHA1(41de66481a64fa8a6471c512fc5dcaf96d95ee69) )
+	ROM_LOAD64_WORD( "rcm.96",   0xe00006, 0x080000, CRC(7da4cd24) SHA1(dd44377ff9f83f15cac032c4e7ef2071adcfa196) )
+
+	ROM_REGION(QSOUND_SIZE, REGION_CPU2, 0 )  /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "rcm.01",   0x00000, 0x08000, CRC(d60cf8a3) SHA1(dccd84b93e62489c703011422d0fe84444c7f7db) )
+	ROM_CONTINUE(         0x10000, 0x18000 )
+
+	ROM_REGION( 0x400000, REGION_SOUND1, 0 )  /* QSound samples */
+	ROM_LOAD16_WORD_SWAP( "rcm.51",   0x000000, 0x80000, CRC(b6d07080) SHA1(b8f07553c01b1f67b0696110cd4e35e4cf4fa158) )
+	ROM_LOAD16_WORD_SWAP( "rcm.52",   0x080000, 0x80000, CRC(dfddc493) SHA1(56b5129f24d05d2c85a767b0a632bf260f5425b2) )
+	ROM_LOAD16_WORD_SWAP( "rcm.53",   0x100000, 0x80000, CRC(6062ae3a) SHA1(28a4d59bce0c341c240ee8cc92f85850ea8ffb10) )
+	ROM_LOAD16_WORD_SWAP( "rcm.54",   0x180000, 0x80000, CRC(08c6f3bf) SHA1(6b8175748ff25b90572f914e4565935e27aa09a5) )
+	ROM_LOAD16_WORD_SWAP( "rcm.55",   0x200000, 0x80000, CRC(f97dfccc) SHA1(752a3855d78e55dc31291e14d0223104691784f4) )
+	ROM_LOAD16_WORD_SWAP( "rcm.56",   0x280000, 0x80000, CRC(ade475bc) SHA1(02ae6bc21d5e41e05595845f264c9ad040d70b37) )
+	ROM_LOAD16_WORD_SWAP( "rcm.57",   0x300000, 0x80000, CRC(075effb3) SHA1(4be02d966d933c0d92908c5e05842c6b33c9703b) )
+	ROM_LOAD16_WORD_SWAP( "rcm.58",   0x380000, 0x80000, CRC(f6c1f87b) SHA1(d6cd8d2bac96404b6983d738093b7177d478f12e) )
+
+	ROM_REGION( 0x20, REGION_USER5, 0 )
+	ROM_LOAD( "rmancp2j.key", 0x000000, 0x000014, CRC(17309a70) SHA1(7d72a07bd556874a4b9b5cf3727d3c547051bb7a) )
+ROM_END
+
 ROM_START( sfa )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "sfze.03d", 0x000000, 0x80000, CRC(ebf2054d) SHA1(6e7b9e4202b86ab237ea5634c98b71b82d812ef2) )
@@ -6652,6 +6841,33 @@ ROM_START( sfzbr1 )
 	ROM_LOAD( "sfzb.key",     0x000000, 0x000014, CRC(b0570359) SHA1(1d35b79cc1c48c866d381f9a0a4b40626ec617c5) )
 ROM_END
 
+ROM_START( sfzk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "sfzk.03c", 0x000000, 0x80000, CRC(e15711a0) SHA1(d797da886706c9e10f2b015388b8c40d8b890f20) )
+	ROM_LOAD16_WORD_SWAP( "sfz.04b",  0x080000, 0x80000, CRC(8b73b0e5) SHA1(5318761f615c21395366b5333e75eaaa73ef2073) )
+	ROM_LOAD16_WORD_SWAP( "sfz.05a",  0x100000, 0x80000, CRC(0810544d) SHA1(5f39bda3e7b16508eb58e5a2e0cc58c09cf428ce) )
+	ROM_LOAD16_WORD_SWAP( "sfz.06",   0x180000, 0x80000, CRC(806e8f38) SHA1(b6d6912aa8f2f590335d7ff9a8214648e7131ebb) )
+
+	ROM_REGION( 0x1000000, REGION_GFX1, 0 )
+	ROM_FILL(              0x000000, 0x800000, 0x00 )
+	ROM_LOAD64_WORD( "sfzk.14m", 0x800000, 0x200000, CRC(2abed9af) SHA1(0996e70f3f6b4aac894aa0ef5a637b06ce6571bf) )
+	ROM_LOAD64_WORD( "sfzk.16m", 0x800002, 0x200000, CRC(e30c4e37) SHA1(e999e7ac3b85a3cff2332f24faba748683962e7d) )
+	ROM_LOAD64_WORD( "sfzk.18m", 0x800004, 0x200000, CRC(a5a760b9) SHA1(60940a5057ce3afd2135b08643049532b92fca45) )
+	ROM_LOAD64_WORD( "sfzk.20m", 0x800006, 0x200000, CRC(c72b7c2d) SHA1(7342fea8e32b39d262f2f4b81f2ba54c1de1ada1) )
+
+	ROM_REGION( QSOUND_SIZE, REGION_CPU2, 0 )  /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "sfz.01",   0x00000, 0x08000, CRC(ffffec7d) SHA1(75b4aef001b72a0f571b51b2b97803facc1832dd) )
+	ROM_CONTINUE(         0x10000, 0x18000 )
+	ROM_LOAD( "sfz.02",   0x28000, 0x20000, CRC(45f46a08) SHA1(e32dbd27b52ab708278045b5a829376e55a4ca81) )
+
+	ROM_REGION( 0x400000, REGION_SOUND1, 0 )  /* QSound samples */
+	ROM_LOAD16_WORD_SWAP( "sfz.11m",   0x000000, 0x200000, CRC(c4b093cd) SHA1(256526bb693a0b72443f047e060304c9b739acd1) )
+	ROM_LOAD16_WORD_SWAP( "sfz.12m",   0x200000, 0x200000, CRC(8bdbc4b4) SHA1(0e21c9a75a17a7e7dfd8bb51098c2b9dc4c933ec) )
+
+	ROM_REGION( 0x20, REGION_USER5, 0 )
+	ROM_LOAD( "sfzj.key",     0x000000, 0x000014, CRC(355d85b8) SHA1(5da2c407852ce7b28153f3f94de8328802ff2f2d) )
+ROM_END
+
 ROM_START( sfa2 )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "sz2e.03", 0x000000, 0x80000, CRC(1061e6bb) SHA1(f9b05e5cbcb1dc874de6874b01058defd6e4c407) )
@@ -6972,6 +7188,38 @@ ROM_START( sfz2n )
 	ROM_LOAD( "sfz2n.key",    0x000000, 0x000014, CRC(d1cc49d5) SHA1(bcf9f8d1fb5fe74dd2568a4a8d8a00d5384ea0db) )
 ROM_END
 
+ROM_START( sfz2k )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "sz2k.03b", 0x000000, 0x80000, CRC(e46526a9) SHA1(07f2a35fb24d0dcfc48fdc0d5328d4c710a6cea7) )
+	ROM_LOAD16_WORD_SWAP( "sz2k.04b", 0x080000, 0x80000, CRC(8ad8c4c5) SHA1(17d74d4926c6414935b035e832f5f67f7f75f29e) )
+	ROM_LOAD16_WORD_SWAP( "sz2j.05b", 0x100000, 0x80000, CRC(dd224156) SHA1(85d29f2a288430d51c53b88130f255131e5dc601) )
+	ROM_LOAD16_WORD_SWAP( "sz2j.06b", 0x180000, 0x80000, CRC(a45a75a6) SHA1(e9cd4ad08ac0d058e9e1660acb07eb350a141fd6) )
+	ROM_LOAD16_WORD_SWAP( "sz2k.07b", 0x200000, 0x80000, CRC(515ceb77) SHA1(25269af66e480484d432fa12076ffe26ab958e37) )
+	ROM_LOAD16_WORD_SWAP( "sz2j.08b", 0x280000, 0x80000, CRC(92b66e01) SHA1(f09cb38aa49b22a9c98219fb2ad8a66b11fa5872) )
+
+	ROM_REGION( 0x1400000, REGION_GFX1, 0 )
+	ROM_LOAD64_WORD( "sz2k.13m",  0x0000000, 0x400000, CRC(10ef2d2b) SHA1(e2bac04e12763fea420ea544eef7b15f2b908b2a) )
+	ROM_LOAD64_WORD( "sz2k.15m",  0x0000002, 0x400000, CRC(fcc1f004) SHA1(3480c1665f78fb3f7b0467e7dedf8b170e8a4b96) )
+	ROM_LOAD64_WORD( "sz2k.17m",  0x0000004, 0x400000, CRC(e364b775) SHA1(f15218c33292049aa7fbc3e4a8de735473a5b9e3) )
+	ROM_LOAD64_WORD( "sz2k.19m",  0x0000006, 0x400000, CRC(ea68b6a9) SHA1(d116adc03593e2809e32c3de55c5cf70bebf308e) )
+	ROM_LOAD64_WORD( "sz2.14m",   0x1000000, 0x100000, CRC(0560c6aa) SHA1(f2bed3a8efef18052b51a7f0f6a888a18db813a1) )
+	ROM_LOAD64_WORD( "sz2.16m",   0x1000002, 0x100000, CRC(ae940f87) SHA1(39ee26333abbe302ba76dced0196a2e6b3b1d02a) )
+	ROM_LOAD64_WORD( "sz2.18m",   0x1000004, 0x100000, CRC(4bc3c8bc) SHA1(6256963c515bf56f39b6e559afefd653ead56c54) )
+	ROM_LOAD64_WORD( "sz2.20m",   0x1000006, 0x100000, CRC(39e674c0) SHA1(8e771a2d8c2accad0463bccd21d7b23af0c895a1) )
+
+	ROM_REGION( QSOUND_SIZE, REGION_CPU2, 0 )  /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "sz2.01a",   0x00000, 0x08000, CRC(1bc323cf) SHA1(83fbd6e9b327700dc9f1c59700b7385bc3705749) )
+	ROM_CONTINUE(         0x10000, 0x18000 )
+	ROM_LOAD( "sz2.02a",   0x28000, 0x20000, CRC(ba6a5013) SHA1(7814f3e56b69529b9860dd61c3b1e8d700244b03) )
+
+	ROM_REGION( 0x400000, REGION_SOUND1, 0 )  /* QSound samples */
+	ROM_LOAD16_WORD_SWAP( "sz2.11m",   0x000000, 0x200000, CRC(aa47a601) SHA1(a4d1ee89c84a3b9db06469bb66e85293b5aa9ac9) )
+	ROM_LOAD16_WORD_SWAP( "sz2.12m",   0x200000, 0x200000, CRC(2237bc53) SHA1(96d5693047e4cf1ed10a8ee1905cea267a278e92) )
+
+	ROM_REGION( 0x20, REGION_USER5, 0 )
+	ROM_LOAD( "sfz2j.key",    0x000000, 0x000014, CRC(455bd098) SHA1(6a928a2d44f416ccdb0c09a8dd7466ac12f38110) )
+ROM_END
+
 ROM_START( sfz2al )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "szaa.03", 0x000000, 0x80000, CRC(88e7023e) SHA1(34e74ec54c05d75e5cf207abb6e536fcca233b8b) )
@@ -7132,6 +7380,38 @@ ROM_START( sfz2alb )
 	ROM_LOAD( "sfz2alb.key",  0x000000, 0x000014, CRC(c8b3ac73) SHA1(42feb1c5c3fc67574deef5cd0d783a29d108be08) )
 ROM_END
 
+ROM_START( sfz2alk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "szak.03a", 0x000000, 0x80000, CRC(3b795a57) SHA1(ce003f59f6b2f122c690596ac99ba467766f6a30) )
+	ROM_LOAD16_WORD_SWAP( "szak.04a", 0x080000, 0x80000, CRC(75fa7bc8) SHA1(d4f87dfd260485b7900ea0cfeb0284d9a1ca25c9) )
+	ROM_LOAD16_WORD_SWAP( "szak.05a", 0x100000, 0x80000, CRC(d2cb29fa) SHA1(eb7271409ec30692a5b81b4a8e163902b249f4f1) )
+	ROM_LOAD16_WORD_SWAP( "szaj.06a", 0x180000, 0x80000, CRC(35ed5b7a) SHA1(b03cb92f594eb35fa374445f74930e9040a2baff) )
+	ROM_LOAD16_WORD_SWAP( "szaj.07a", 0x200000, 0x80000, CRC(975dcb3e) SHA1(a2ca8e5a768e49cce9e2137ec0dcba9337ed2ad5) )
+	ROM_LOAD16_WORD_SWAP( "szaj.08a", 0x280000, 0x80000, CRC(dc73f2d7) SHA1(09fa10e7d1ff5f0dac87a6cf3d66730e3ab9ad25) )
+
+	ROM_REGION( 0x1400000, REGION_GFX1, 0 )
+	ROM_LOAD64_WORD( "szak.13m",  0x0000000, 0x400000, CRC(10ef2d2b) SHA1(e2bac04e12763fea420ea544eef7b15f2b908b2a) )
+	ROM_LOAD64_WORD( "szak.15m",  0x0000002, 0x400000, CRC(fcc1f004) SHA1(3480c1665f78fb3f7b0467e7dedf8b170e8a4b96) )
+	ROM_LOAD64_WORD( "szak.17m",  0x0000004, 0x400000, CRC(e364b775) SHA1(f15218c33292049aa7fbc3e4a8de735473a5b9e3) )
+	ROM_LOAD64_WORD( "szak.19m",  0x0000006, 0x400000, CRC(ea68b6a9) SHA1(d116adc03593e2809e32c3de55c5cf70bebf308e) )
+	ROM_LOAD64_WORD( "sza.14m",   0x1000000, 0x100000, CRC(0560c6aa) SHA1(f2bed3a8efef18052b51a7f0f6a888a18db813a1) )
+	ROM_LOAD64_WORD( "sza.16m",   0x1000002, 0x100000, CRC(ae940f87) SHA1(39ee26333abbe302ba76dced0196a2e6b3b1d02a) )
+	ROM_LOAD64_WORD( "sza.18m",   0x1000004, 0x100000, CRC(4bc3c8bc) SHA1(6256963c515bf56f39b6e559afefd653ead56c54) )
+	ROM_LOAD64_WORD( "sza.20m",   0x1000006, 0x100000, CRC(39e674c0) SHA1(8e771a2d8c2accad0463bccd21d7b23af0c895a1) )
+
+	ROM_REGION( QSOUND_SIZE, REGION_CPU2, 0 )  /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "sza.01",   0x00000, 0x08000, CRC(1bc323cf) SHA1(83fbd6e9b327700dc9f1c59700b7385bc3705749) )
+	ROM_CONTINUE(         0x10000, 0x18000 )
+	ROM_LOAD( "sza.02",   0x28000, 0x20000, CRC(ba6a5013) SHA1(7814f3e56b69529b9860dd61c3b1e8d700244b03) )
+
+	ROM_REGION( 0x400000, REGION_SOUND1, 0 )  /* QSound samples */
+	ROM_LOAD16_WORD_SWAP( "sza.11m",   0x000000, 0x200000, CRC(aa47a601) SHA1(a4d1ee89c84a3b9db06469bb66e85293b5aa9ac9) )
+	ROM_LOAD16_WORD_SWAP( "sza.12m",   0x200000, 0x200000, CRC(2237bc53) SHA1(96d5693047e4cf1ed10a8ee1905cea267a278e92) )
+
+	ROM_REGION( 0x20, REGION_USER5, 0 )
+	ROM_LOAD( "sfz2alj.key",  0x000000, 0x000014, CRC(4c42320f) SHA1(0fabdab677416c5a8060526d997e6f80b26f9bb3) )
+ROM_END
+
 ROM_START( sfa3 )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "sz3e.03c", 0x000000, 0x80000, CRC(9762b206) SHA1(fc4561ca990dd11ed2c5203540102078b721db2f) )
@@ -7603,6 +7883,37 @@ ROM_START( pfghtj )
 	ROM_LOAD( "pfghtj.key",   0x000000, 0x000014, CRC(62297638) SHA1(efe090ffa8992823cfd787ade736df5487d69ca7) )
 ROM_END
 
+ROM_START( pfghtk )
+	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "pcfk.03", 0x000000, 0x80000, CRC(64a6e6ef) SHA1(0a3a5a66e7b23cafed2cbb0b26b004d8483a26e6) )
+	ROM_LOAD16_WORD_SWAP( "pcfk.04", 0x080000, 0x80000, CRC(6c882837) SHA1(0fc4f96a1a5e50ae72a1d3913f8691a2582009a6) )
+	ROM_LOAD16_WORD_SWAP( "pcf.05",  0x100000, 0x80000, CRC(215655f6) SHA1(242c0f4401520f2a3b0deafc3a807b18b987e496) )
+	ROM_LOAD16_WORD_SWAP( "pcf.06",  0x180000, 0x80000, CRC(ea6f13ea) SHA1(1bc924a8a9da1d2ad7667685cdb92fe317a39aba) )
+	ROM_LOAD16_WORD_SWAP( "pcf.07",  0x200000, 0x80000, CRC(5ac6d5ea) SHA1(9ce8e4668b565658597a868830545fb75a5eeaa6) )
+
+	ROM_REGION( 0x1400000, REGION_GFX1, 0 )
+	ROM_LOAD64_WORD( "pcfk.13m",  0x0000000, 0x400000, CRC(068c3659) SHA1(2877100c92297694f8bd1c8572ca9dd0f1849e7c) )
+	ROM_LOAD64_WORD( "pcfk.15m",  0x0000002, 0x400000, CRC(0d93bbdd) SHA1(470ab3a4b93b31f2ba8da4875a273a05a05c8067) )
+	ROM_LOAD64_WORD( "pcfk.17m",  0x0000004, 0x400000, CRC(946ad5cb) SHA1(63a8903ccba285092b3c8f32442cc7fcf98d9d62) )
+	ROM_LOAD64_WORD( "pcfk.19m",  0x0000006, 0x400000, CRC(8945c67f) SHA1(ee757f5f2622e0f7a66399aa218f1eaad9abe027) )
+	ROM_LOAD64_WORD( "pcf.14m",   0x1000000, 0x100000, CRC(0383897c) SHA1(aba14afa1d0c971afcee4317f480e88117d77b5e) )
+	ROM_LOAD64_WORD( "pcf.16m",   0x1000002, 0x100000, CRC(76f91084) SHA1(3d1e32467f2aa5dd6fb96bd5c866ecc9691660fc) )
+	ROM_LOAD64_WORD( "pcf.18m",   0x1000004, 0x100000, CRC(756c3754) SHA1(be2f709b90222a567f198f851cf07ffb0ad433d7) )
+	ROM_LOAD64_WORD( "pcf.20m",   0x1000006, 0x100000, CRC(9ec9277d) SHA1(b7ceeaca30dfcdf498b61a6961f0aa1a068b8ec4) )
+
+	ROM_REGION( QSOUND_SIZE, REGION_CPU2, 0 )  /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "pcf.01",   0x00000, 0x08000, CRC(254e5f33) SHA1(c413ec0630b9bdd15e64f42893eba8958a09b573) )
+	ROM_CONTINUE(         0x10000, 0x18000 )
+	ROM_LOAD( "pcf.02",   0x28000, 0x20000, CRC(6902f4f9) SHA1(9bfe4ddade3c666076d26a2b545120f6d059fd7c) )
+
+	ROM_REGION( 0x800000, REGION_SOUND1, 0 )  /* QSound samples */
+	ROM_LOAD16_WORD_SWAP( "pcf.11m",   0x000000, 0x400000, CRC(a5dea005) SHA1(3ae79baf6ff5bd527f82b26f164c7e3c65423ae2) )
+	ROM_LOAD16_WORD_SWAP( "pcf.12m",   0x400000, 0x400000, CRC(4ce235fe) SHA1(795b94557e954cc0e45fd3778b609064d57a34a2) )
+
+	ROM_REGION( 0x20, REGION_USER5, 0 )
+	ROM_LOAD( "pfghtj.key",   0x000000, 0x000014, CRC(62297638) SHA1(efe090ffa8992823cfd787ade736df5487d69ca7) )
+ROM_END
+
 ROM_START( sgemfa )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "pcfa.03", 0x000000, 0x80000, CRC(e17c089a) SHA1(59529957aeb430df48a88414637e67848fdaaaca) )
@@ -7791,6 +8102,31 @@ ROM_START( spf2th )
 	ROM_LOAD( "spf2th.key",   0x000000, 0x000014, CRC(292db449) SHA1(e0b82bd471ceadcee1e52ff5a4a8835d53a84a66) )
 ROM_END
 
+ROM_START( spf2xk )
+	ROM_REGION(CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
+	ROM_LOAD16_WORD_SWAP( "pzfk.03a", 0x000000, 0x80000, CRC(4c29e2a6) SHA1(a5cd108fd01eb9e9f63e170a088c7235acfcf0da) )
+	ROM_LOAD16_WORD_SWAP( "pzfk.04",  0x080000, 0x80000, CRC(faf9c818) SHA1(d2bc8d30d3a16eb30620f2c5835fa840f72af744) )
+
+	ROM_REGION( 0xC00000, REGION_GFX1, 0 )
+	ROM_FILL(             0x000000, 0x800000, 0x00 )
+	ROM_LOAD64_WORD( "pzfk.14m", 0x800000, 0x100000, CRC(bb5da961) SHA1(b9dbc81504ae187d3be9520b81355abc35697b24) )
+	ROM_LOAD64_WORD( "pzfk.16m", 0x800002, 0x100000, CRC(2eee8408) SHA1(16f9fa8db183b381969901cba91e3121479519de) )
+	ROM_LOAD64_WORD( "pzfk.18m", 0x800004, 0x100000, CRC(9e792b30) SHA1(433ded7ff199a44514866db6d4087bd2ed3192a8) )
+	ROM_LOAD64_WORD( "pzfk.20m", 0x800006, 0x100000, CRC(26605f63) SHA1(e1a0cf979485ce6f5b78b5f6d7bd32bbae5f9f39) )
+
+	ROM_REGION(QSOUND_SIZE, REGION_CPU2, 0 )  /* 64k for the audio CPU (+banks) */
+	ROM_LOAD( "pzf.01",   0x00000, 0x08000, CRC(600fb2a3) SHA1(1fab1c2a23bf6ad8309d29ddbbc29435a8aeea13) )
+	ROM_CONTINUE(         0x10000, 0x18000 )
+	ROM_LOAD( "pzf.02",   0x28000, 0x20000, CRC(496076e0) SHA1(1ee4e135140afd0e8e03231e570cd77d140f6367) )
+
+	ROM_REGION( 0x400000, REGION_SOUND1, 0 )  /* QSound samples */
+	ROM_LOAD16_WORD_SWAP( "pzf.11m",   0x000000, 0x200000, CRC(78442743) SHA1(b61190bb586871de6d54af580e3e1d9cc0de0acb) )
+	ROM_LOAD16_WORD_SWAP( "pzf.12m",   0x200000, 0x200000, CRC(399d2c7b) SHA1(e849dea97b8d16540415c0d9bbc4f9f4eb755ec4) )
+
+	ROM_REGION( 0x20, REGION_USER5, 0 )
+	ROM_LOAD( "spf2xj.key",   0x000000, 0x000014, CRC(dc39fd34) SHA1(d18f015070d08e772677ef79b542f12664cfba53) )
+ROM_END
+
 ROM_START( ssf2 )
 	ROM_REGION( CODE_SIZE, REGION_CPU1, 0 )  /* 68000 code */
 	ROM_LOAD16_WORD_SWAP( "ssfe-03b", 0x000000, 0x80000, CRC(af654792) SHA1(a8e84154a639c036413f1423aaf2312a5affa55a) )
@@ -11719,6 +12055,7 @@ GAME( 1993, ddtodar1,   ddtod,    cps2,     cps2_4p4b,  my_cps2,     ROT0,   "Ca
 GAME( 1993, ddtodh,     ddtod,    cps2,     cps2_4p4b,  my_cps2,     ROT0,   "Capcom", "Dungeons & Dragons: Tower of Doom (Hispanic 940412)")
 GAME( 1993, ddtodhr1,   ddtod,    cps2,     cps2_4p4b,  my_cps2,     ROT0,   "Capcom", "Dungeons & Dragons: Tower of Doom (Hispanic 940125)")
 GAME( 1993, ddtodhr2,   ddtod,    cps2,     cps2_4p4b,  my_cps2,     ROT0,   "Capcom", "Dungeons & Dragons: Tower of Doom (Hispanic 940113)")
+GAME( 1993, ddtodk,     ddtod,    cps2,     cps2_4p4b,  my_cps2,     ROT0,   "Capcom", "Dungeons & Dragons: Tower of Doom (Korean Translation 940412)")
 GAME( 1994, ssf2t,      0,        cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Super Street Fighter II Turbo (World 940223)")
 GAME( 1994, ssf2ta,     ssf2t,    cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Super Street Fighter II Turbo (Asia 940223)")
 GAME( 1994, ssf2th,     ssf2t,    cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Super Street Fighter II Turbo (Hispanic 940223)")
@@ -11732,6 +12069,7 @@ GAME( 1994, avspu,      avsp,     cps2,     cps2_3p3b,  my_cps2,     ROT0,   "Ca
 GAME( 1994, avspj,      avsp,     cps2,     cps2_3p3b,  my_cps2,     ROT0,   "Capcom", "Alien vs. Predator (Japan 940520)")
 GAME( 1994, avspa,      avsp,     cps2,     cps2_3p3b,  my_cps2,     ROT0,   "Capcom", "Alien vs. Predator (Asia 940520)")
 GAME( 1994, avsph,      avsp,     cps2,     cps2_3p3b,  my_cps2,     ROT0,   "Capcom", "Alien vs. Predator (Hispanic 940520)")
+GAME( 1994, avspk,      avsp,     cps2,     cps2_3p3b,  my_cps2,     ROT0,   "Capcom", "Alien vs. Predator (Korean Translation 940520)")
 GAME( 1994, dstlk,      0,        cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Darkstalkers: The Night Warriors (Euro 940705)")
 GAME( 1994, dstlku,     dstlk,    cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Darkstalkers: The Night Warriors (USA 940818)")
 GAME( 1994, dstlkur1,   dstlk,    cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Darkstalkers: The Night Warriors (USA 940705)")
@@ -11795,10 +12133,12 @@ GAME( 1995, sfzh,       sfa,      cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Ca
 GAME( 1995, sfzhr1,     sfa,      cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero (Hispanic 950627)")
 GAME( 1995, sfzb,       sfa,      cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero (Brazil 951109)")
 GAME( 1995, sfzbr1,     sfa,      cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero (Brazil 950727)")
+GAME( 1995, sfzk,       sfa,      cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero (Korean Translation 950727)")
 GAME( 1995, mmancp2u,   megaman,  cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Mega Man: The Power Battle (CPS2, USA 951006, SAMPLE Version)")
 GAME( 1995, mmancp2ur1, megaman,  cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Mega Man: The Power Battle (CPS2, USA 950926, SAMPLE Version)")
 GAME( 1995, mmancp2ur2, megaman,  cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Mega Man: The Power Battle (CPS2, USA 950925, SAMPLE Version)")
 GAME( 1995, rmancp2j,   megaman,  cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Rockman: The Power Battle (CPS2, Japan 950922)")
+GAME( 1995, rmancp2k,   megaman,  cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Rockman: The Power Battle (CPS2, Korean Translation 950922)")
 GAME( 1995, msh,        0,        cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Marvel Super Heroes (Euro 951024)")
 GAME( 1995, mshu,       msh,      cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Marvel Super Heroes (USA 951024)")
 GAME( 1995, mshj,       msh,      cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Marvel Super Heroes (Japan 951117)")
@@ -11829,6 +12169,7 @@ GAMEC(1996, ddsoma,     ddsom,    cps2,     cps2_4p4b,  my_cps2,     ROT0,   "Ca
 GAMEC(1996, ddsomar1,   ddsom,    cps2,     cps2_4p4b,  my_cps2,     ROT0,   "Capcom", "Dungeons & Dragons: Shadow over Mystara (Asia 960208)", &ddsom_ctrl, &ddsoma_bootstrap)
 GAME( 1996, ddsomh,     ddsom,    cps2,     cps2_4p4b,  my_cps2,     ROT0,   "Capcom", "Dungeons & Dragons: Shadow over Mystara (Hispanic 960223)") /* 2 players only */
 GAME( 1996, ddsomb,     ddsom,    cps2,     cps2_4p4b,  my_cps2,     ROT0,   "Capcom", "Dungeons & Dragons: Shadow over Mystara (Brazil 960223)") /* 2 players only */
+GAMEC(1996, ddsomk,     ddsom,    cps2,     cps2_4p4b,  my_cps2,     ROT0,   "Capcom", "Dungeons & Dragons: Shadow over Mystara (Korean Translation 960619)", &ddsom_ctrl, &ddsoma_bootstrap)
 GAME( 1996, sfa2,       0,        cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Alpha 2 (Euro 960229)")
 GAME( 1996, sfa2u,      sfa2,     cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Alpha 2 (USA 960430)")
 GAME( 1996, sfa2ur1,    sfa2,     cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Alpha 2 (USA 960306)")
@@ -11839,20 +12180,24 @@ GAME( 1996, sfz2b,      sfa2,     cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Ca
 GAME( 1996, sfz2br1,    sfa2,     cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero 2 (Brazil 960304)")
 GAME( 1996, sfz2h,      sfa2,     cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero 2 (Hispanic 960304)")
 GAME( 1996, sfz2n,      sfa2,     cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero 2 (Oceania 960229)")
+GAME( 1996, sfz2k,      sfa2,     cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero 2 (Korean Translation 960430)")
 GAME( 1996, sfz2al,     0,        cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero 2 Alpha (Asia 960826)")
 GAME( 1996, sfz2alr1,   sfz2al,   cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero 2 Alpha (Asia 960805)")
 GAME( 1996, sfz2alj,    sfz2al,   cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero 2 Alpha (Japan 960805)")
 GAME( 1996, sfz2alh,    sfz2al,   cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero 2 Alpha (Hispanic 960813)")
 GAME( 1996, sfz2alb,    sfz2al,   cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero 2 Alpha (Brazil 960813)")
+GAME( 1996, sfz2alk,    sfz2al,   cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Street Fighter Zero 2 Alpha (Korean Translation 960805)")
 GAME( 1996, spf2t,      0,        cps2,     cps2_2p2b,  my_cps2,     ROT0,   "Capcom", "Super Puzzle Fighter II Turbo (Euro 960529)")
 GAME( 1996, spf2tu,     spf2t,    cps2,     cps2_2p2b,  my_cps2,     ROT0,   "Capcom", "Super Puzzle Fighter II Turbo (USA 960620)")
 GAME( 1996, spf2xj,     spf2t,    cps2,     cps2_2p2b,  my_cps2,     ROT0,   "Capcom", "Super Puzzle Fighter II X (Japan 960531)")
 GAME( 1996, spf2ta,     spf2t,    cps2,     cps2_2p2b,  my_cps2,     ROT0,   "Capcom", "Super Puzzle Fighter II Turbo (Asia 960529)")
 GAME( 1996, spf2th,     spf2t,    cps2,     cps2_2p2b,  my_cps2,     ROT0,   "Capcom", "Super Puzzle Fighter II Turbo (Hispanic 960531)")
+GAME( 1996, spf2xk,     spf2t,    cps2,     cps2_2p2b,  my_cps2,     ROT0,   "Capcom", "Super Puzzle Fighter II X (Korean Translation 960531)")
 GAME( 1996, megaman2,   0,        cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Mega Man 2: The Power Fighters (USA 960708)")
 GAME( 1996, megaman2a,  megaman2, cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Mega Man 2: The Power Fighters (Asia 960708)")
 GAME( 1996, rockman2j,  megaman2, cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Rockman 2: The Power Fighters (Japan 960708)")
 GAME( 1996, megaman2h,  megaman2, cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Mega Man 2: The Power Fighters (Hispanic 960712)")
+GAME( 1996, rockman2k,  megaman2, cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Rockman 2: The Power Fighters (Korean Translation 960708)")
 GAME( 1996, qndream,    0,        cps2,     qndream,    my_cps2,     ROT0,   "Capcom", "Quiz Nanairo Dreams: Nijiirochou no Kiseki (Japan 96086)")
 GAME( 1996, xmvsf,      0,        cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "X-Men Vs. Street Fighter (Euro 961004)")
 GAME( 1996, xmvsfr1,    xmvsf,    cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "X-Men Vs. Street Fighter (Euro 960910)")
@@ -11895,8 +12240,10 @@ GAME( 1997, cscluba,    csclub,   cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Ca
 GAME( 1997, csclubj,    csclub,   cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Capcom Sports Club (Japan 970722)")
 GAME( 1997, csclubjy,   csclub,   cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Capcom Sports Club (Japan 970722, yellow case)")
 GAME( 1997, csclubh,    csclub,   cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Capcom Sports Club (Hispanic 970722)")
+GAME( 1997, csclubk,    csclub,   cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Capcom Sports Club (Korean Translation 970722)")
 GAME( 1997, sgemf,      0,        cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Super Gem Fighter Mini Mix (USA 970904)")
 GAME( 1997, pfghtj,     sgemf,    cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Pocket Fighter (Japan 970904)")
+GAME( 1997, pfghtk,     sgemf,    cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Pocket Fighter (Korean Translation 970904)")
 GAME( 1997, sgemfa,     sgemf,    cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Super Gem Fighter: Mini Mix (Asia 970904)")
 GAME( 1997, sgemfh,     sgemf,    cps2,     cps2_2p3b,  my_cps2,     ROT0,   "Capcom", "Super Gem Fighter: Mini Mix (Hispanic 970904)")
 GAME( 1997, vhunt2,     0,        cps2,     cps2_2p6b,  my_cps2,     ROT0,   "Capcom", "Vampire Hunter 2: Darkstalkers Revenge (Japan 970929)")
diff --git a/src/drivers/ginganin.c b/src/drivers/ginganin.c
index bdb2d850..9aacba8e 100644
--- a/src/drivers/ginganin.c
+++ b/src/drivers/ginganin.c
@@ -435,7 +435,40 @@ ROM_START( ginganin )
 	ROM_REGION( 0x20000, REGION_SOUND1, 0 )	/* samples */
 	ROM_LOAD( "gn_04.bin", 0x00000, 0x10000, CRC(0ed9133b) SHA1(77f628e8ec28016efac2d906146865ca4ec54bd5) )
 	ROM_LOAD( "gn_03.bin", 0x10000, 0x10000, CRC(f1ba222c) SHA1(780c0bd0045bac1e1bb3209576383db90504fbf3) )
+ROM_END
+
+ROM_START( ginganink )
+	ROM_REGION( 0x20000, REGION_CPU1, 0 )	/* main cpu */
+	ROM_LOAD16_BYTE( "gn_02.bin", 0x00000, 0x10000, CRC(4a4e012f) SHA1(7c94a5b6b71e037af355f3aa4623be1f585db8dc) )
+	ROM_LOAD16_BYTE( "gn_01.bin", 0x00001, 0x10000, CRC(30256fcb) SHA1(dc15e0da88ae5cabe0150f7290508c3d58c06c11) )
+
+	ROM_REGION( 0x10000, REGION_CPU2, 0 )	/* sound cpu */
+	ROM_LOAD( "gn_05.bin", 0x00000, 0x10000, CRC(e76e10e7) SHA1(b16f10a1a01b7b04221c9bf1b0d157e936bc5fb5) )
+
+	ROM_REGION( 0x20000, REGION_GFX1, ROMREGION_DISPOSE )
+	ROM_LOAD( "gn_15k.bin", 0x000000, 0x10000, CRC(eba72bc2) SHA1(5a3496f0eb9e0942b6957f3d0121e84a72f6d032) )  /* bg */
+	ROM_LOAD( "gn_14.bin",  0x010000, 0x10000, CRC(e73fe668) SHA1(fa39fddd7448d3fc6b539506e33b951db205afa1) )
+
+	ROM_REGION( 0x20000, REGION_GFX2, ROMREGION_DISPOSE )
+	ROM_LOAD( "gn_12.bin", 0x000000, 0x10000, CRC(c134a1e9) SHA1(8bace0f0169e61f1b7254393fa9cad6dca09c335) )  /* fg */
+	ROM_LOAD( "gn_13.bin", 0x010000, 0x10000, CRC(1d3bec21) SHA1(305823c78cad9288f918178e1c24cb0459ba2a6e) )
+
+	ROM_REGION( 0x04000, REGION_GFX3, ROMREGION_DISPOSE )
+	ROM_LOAD( "gn_10k.bin", 0x000000, 0x04000, CRC(5d5ce06f) SHA1(0df6867ed9af78a4e86455f64d3d57c68d148af0) )  /* txt */
+
+	ROM_REGION( 0x50000, REGION_GFX4, ROMREGION_DISPOSE )
+	ROM_LOAD( "gn_06.bin",  0x000000, 0x10000, CRC(bdc65835) SHA1(53222fc3ec15e641289abb754657b0d59b88b66b) )  /* sprites */
+	ROM_CONTINUE(		    0x040000, 0x10000 )
+	ROM_LOAD( "gn_07k.bin", 0x010000, 0x10000, CRC(d12bae11) SHA1(2f1a8289b3a69bd2624e03d48f75312478aa120e) )
+	ROM_LOAD( "gn_08.bin",  0x020000, 0x10000, CRC(f7c73c18) SHA1(102700e2217bcd1532af56ee6a00ad608c8217db) )
+	ROM_LOAD( "gn_09.bin",  0x030000, 0x10000, CRC(a5e07c3b) SHA1(cdda02cd847330575612cb33d1bb38a5d50a3e6d) )
 
+	ROM_REGION( 0x08000, REGION_GFX5, 0 )	/* background tilemaps */
+	ROM_LOAD( "gn_11.bin", 0x00000, 0x08000, CRC(f0d0e605) SHA1(0c541e8e036573be1d99ecb71fdb4568ca8cc269) )
+
+	ROM_REGION( 0x20000, REGION_SOUND1, 0 )	/* samples */
+	ROM_LOAD( "gn_04.bin", 0x00000, 0x10000, CRC(0ed9133b) SHA1(77f628e8ec28016efac2d906146865ca4ec54bd5) )
+	ROM_LOAD( "gn_03.bin", 0x10000, 0x10000, CRC(f1ba222c) SHA1(780c0bd0045bac1e1bb3209576383db90504fbf3) )
 ROM_END
 
 
@@ -458,3 +491,4 @@ DRIVER_INIT( ginganin )
 
 
 GAME( 1987, ginganin, 0, ginganin, ginganin, ginganin, ROT0, "Jaleco", "Ginga NinkyouDen" )
+GAME( 1987, ginganink, ginganin, ginganin, ginganin, ginganin, ROT0, "Jaleco", "Ginga NinkyouDen (Korean Translation)" )
diff --git a/src/drivers/m92.c b/src/drivers/m92.c
index b62f21af..6d03ff78 100644
--- a/src/drivers/m92.c
+++ b/src/drivers/m92.c
@@ -1682,6 +1682,33 @@ ROM_START( hookj )
 	ROM_LOAD( "hook-da.rom", 0x000000, 0x080000, CRC(88cd0212) SHA1(789532f5544b5d024d8af60eb8a5c133ae0d19d4) )
 ROM_END
 
+ROM_START( hookk )
+	ROM_REGION( 0x100000, REGION_CPU1, 0 )
+	ROM_LOAD16_BYTE( "h-h0-k.3h",  0x000001, 0x040000, CRC(fd07a242) SHA1(3728e6d412c195eb1a655c6ff60405b612b50f60) )
+	ROM_LOAD16_BYTE( "h-l0-k.5h",  0x000000, 0x040000, CRC(95200fad) SHA1(1ef19e182d1da2a146d250a4e441f2aebccaf784) )
+	ROM_LOAD16_BYTE( "h-h1.rom",   0x080001, 0x020000, CRC(264ba1f0) SHA1(49ecf9b3e5375629607fb747abe264406065580b) )
+	ROM_LOAD16_BYTE( "h-l1.rom",   0x080000, 0x020000, CRC(f9913731) SHA1(be7871d6843e76f66fae6b501c5ee83ccc366463) )
+
+	ROM_REGION( 0x100000 * 2, REGION_CPU2, 0 )	/* 1MB for the audio CPU - encrypted V30 = NANAO custom D80001 (?) */
+	ROM_LOAD16_BYTE( "h-sh0-a.3l", 0x000001, 0x010000, CRC(bd3d1f61) SHA1(0c884a0b5519f9c0823128872baf7b0c4078e5c4) )
+	ROM_LOAD16_BYTE( "h-sl0-a.3n", 0x000000, 0x010000, CRC(76371def) SHA1(b7a86fd4eecdd8a538c32e08cd920c27bd50924b) )
+
+	ROM_REGION( 0x100000, REGION_GFX1, ROMREGION_DISPOSE )/* Tiles */
+	ROM_LOAD( "hook-c0k.rom", 0x000000, 0x040000, CRC(eda80f88) SHA1(c9a81ecf66e754e5db3a6716da351a98fb475977) )
+	ROM_LOAD( "hook-c1k.rom", 0x040000, 0x040000, CRC(cd4896f8) SHA1(d0dbb81375ff3755515d7edc268e6a6a042c035f) )
+	ROM_LOAD( "hook-c2k.rom", 0x080000, 0x040000, CRC(e1dc2199) SHA1(87fc955a13653613822bc2dc96cdc8a28d27f490) )
+	ROM_LOAD( "hook-c3k.rom", 0x0c0000, 0x040000, CRC(1ced76e5) SHA1(335e696602381e5648df3150a344268639ed0cb0) )
+
+	ROM_REGION( 0x400000, REGION_GFX2, ROMREGION_DISPOSE )/* Sprites */
+	ROM_LOAD( "hook-000.rom", 0x000000, 0x100000, CRC(ccceac30) SHA1(16e2b4393840344debe869034135feead7450184) )
+	ROM_LOAD( "hook-010.rom", 0x100000, 0x100000, CRC(8ac8da67) SHA1(a9b962cb0bc0d8bc3bda8a0ed1ce06641d666b41) )
+	ROM_LOAD( "hook-020.rom", 0x200000, 0x100000, CRC(8847af9a) SHA1(f82cdbd640fac373136219422172ca9fbf5d1830) )
+	ROM_LOAD( "hook-030.rom", 0x300000, 0x100000, CRC(239e877e) SHA1(445e1096619c4e3a2d5b50a645fd45bd7c501590) )
+
+	ROM_REGION( 0x80000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "hook-da.rom", 0x000000, 0x080000, CRC(88cd0212) SHA1(789532f5544b5d024d8af60eb8a5c133ae0d19d4) )
+ROM_END
+
 ROM_START( rtypeleo )
 	ROM_REGION( 0x100000, REGION_CPU1, 0 )
 	ROM_LOAD16_BYTE( "rtl-h0-c",     0x000001, 0x040000, CRC(5fef7fa1) SHA1(7d18d4ea979d887d6da42c79734b8c695f3df02b) )
@@ -1871,6 +1898,33 @@ ROM_START( uccopsj )
 	ROM_LOAD( "uca-da.bin", 0x000000, 0x080000, CRC(0b2855e9) SHA1(70f9decd78eab679a2ccad69e01cb303b61e0d38) )
 ROM_END
 
+ROM_START( uccopsk )
+	ROM_REGION( 0x100000, REGION_CPU1, 0 )
+	ROM_LOAD16_BYTE( "uca-h0.bin",  0x000001, 0x040000, CRC(9e17cada) SHA1(086bb9c1ab851cab3734c2f9188d8ff3c5f98913) )
+	ROM_LOAD16_BYTE( "uca-l0.bin",  0x000000, 0x040000, CRC(4a4e3208) SHA1(d61c74d46584e2c15e70f7a17b598e51981da9e8) )
+	ROM_LOAD16_BYTE( "uca-h1k.bin", 0x080001, 0x020000, CRC(891c0678) SHA1(aeee5a45f3fe29ae1687f87a48c18af7856117c1) )
+	ROM_LOAD16_BYTE( "uca-l1k.bin", 0x080000, 0x020000, CRC(77beea06) SHA1(fc1a584cf0dddf8c5be6595f70b82b7409bf7a09) )
+
+	ROM_REGION( 0x100000 * 2, REGION_CPU2, 0 )	/* 1MB for the audio CPU - encrypted V30 = NANAO custom D80001 (?) */
+	ROM_LOAD16_BYTE( "uca-sh0.bin", 0x000001, 0x010000, CRC(f0ca1b03) SHA1(07154a2c747091f8be23587c109d91ed1672da6e) )
+	ROM_LOAD16_BYTE( "uca-sl0.bin", 0x000000, 0x010000, CRC(d1661723) SHA1(bdc00196aa2074e7b21e5949f73e9f2b93d76fd9) )
+
+	ROM_REGION( 0x200000, REGION_GFX1, ROMREGION_DISPOSE ) /* Tiles */
+	ROM_LOAD( "uca-c0k.bin", 0x000000, 0x080000, CRC(dc672f1b) SHA1(12894ad8d2d5fc9820bd25c1c013f472ddfa85c3) )
+	ROM_LOAD( "uca-c1k.bin", 0x080000, 0x080000, CRC(bb73ca75) SHA1(068dd9f3f674ec55ad23cff20d6e69efb30f6058) )
+	ROM_LOAD( "uca-c2.bin",  0x100000, 0x080000, CRC(96397ac6) SHA1(6dfe507bd9f41b5d46d85ef5f46a368745593b52) )
+	ROM_LOAD( "uca-c3.bin",  0x180000, 0x080000, CRC(5d07d10d) SHA1(ee1a928b37043c476346f189f75d2bfcc44bffe6) )
+
+	ROM_REGION( 0x400000, REGION_GFX2, ROMREGION_DISPOSE ) /* Sprites */
+	ROM_LOAD( "uca-o3.bin", 0x000000, 0x100000, CRC(97f7775e) SHA1(5cd147fd940b1ab6eba8e6c6f803bdcc5da5a563) )
+	ROM_LOAD( "uca-o2.bin", 0x100000, 0x100000, CRC(5e0b1d65) SHA1(9e45753d10b2d7b580cd11cef74181209a424189) )
+	ROM_LOAD( "uca-o1.bin", 0x200000, 0x100000, CRC(bdc224b3) SHA1(09477ec39890d954fac6ff653b9f46c9adea56b6) )
+	ROM_LOAD( "uca-o0.bin", 0x300000, 0x100000, CRC(7526daec) SHA1(79431d711deb6ed09dc52be753b7b0f2c5588dc3) )
+
+	ROM_REGION( 0x80000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "uca-da.bin", 0x000000, 0x080000, CRC(0b2855e9) SHA1(70f9decd78eab679a2ccad69e01cb303b61e0d38) )
+ROM_END
+
 ROM_START( lethalth )
 	ROM_REGION( 0x100000, REGION_CPU1, 0 )
 	ROM_LOAD16_BYTE( "lt_d-h0.rom",  0x000001, 0x020000, CRC(20c68935) SHA1(edbb5322082bde7136ab015931fdcd18e5c293a8) )
@@ -1979,6 +2033,33 @@ ROM_START( leaguemn )
 	ROM_LOAD( "lh534k0k.8" ,0x000000, 0x080000, CRC(735e6380) SHA1(bf019815e579ef2393c00869f101a01f746e04d6) )
 ROM_END
 
+ROM_START( leaguemk )
+	ROM_REGION( 0x180000, REGION_CPU1, 0 )
+	ROM_LOAD16_BYTE( "lma1-h0k.34", 0x000001, 0x040000, CRC(0707e8e0) SHA1(ee850edd2542d730ac1efad9781eed620dac6f79) )
+	ROM_LOAD16_BYTE( "lma1-l0k.31", 0x000000, 0x040000, CRC(898652c7) SHA1(e3b64463b92b16aca64ef438d3e9868516adae91) )
+	ROM_LOAD16_BYTE( "a1-h1-k.33",  0x100001, 0x040000, CRC(51c3c8ca) SHA1(1cc87f32876db3d5e1aa74eaf018ab2bc4902410) )
+	ROM_LOAD16_BYTE( "a1-l1-k.32",  0x100000, 0x040000, CRC(6b7ab60b) SHA1(003722267360a6e6b631afd0b273af203fb97dfc) )
+
+	ROM_REGION( 0x100000 * 2, REGION_CPU2, 0 )	/* 1MB for the audio CPU */
+	ROM_LOAD16_BYTE( "a1-sh0-.14",  0x000001, 0x010000, CRC(b7fae3e6) SHA1(ce41380d6c0f29f2facf9bf23dd4403648cd9eb4) )
+	ROM_LOAD16_BYTE( "a1-sl0-.17",  0x000000, 0x010000, CRC(b26d54fc) SHA1(136e1a83da08a0dc9046faf71f3f58d8d3095fde) )
+
+	ROM_REGION( 0x200000, REGION_GFX1, ROMREGION_DISPOSE ) /* Tiles */
+	ROM_LOAD( "lh534k0ck.9",  0x000000, 0x080000, CRC(347bef8a) SHA1(741bb891257d11e5812a49b2c3b590bd6f4b2386) )
+	ROM_LOAD( "lh534k0ek.10", 0x080000, 0x080000, CRC(b2413b78) SHA1(1e7626e881e315aa20271745a03e18c2eee18691) )
+	ROM_LOAD( "lh534k0fk.11", 0x100000, 0x080000, CRC(bd7f3055) SHA1(264d8b48525afded7d457984cdb0f547bf7f58af) )
+	ROM_LOAD( "lh534k0gk.12", 0x180000, 0x080000, CRC(cb394021) SHA1(80c4688b112688689fd1ebadba7580c2266b407f) )
+
+	ROM_REGION( 0x400000, REGION_GFX2, ROMREGION_DISPOSE ) /* Sprites */
+	ROM_LOAD( "lh538393k.42", 0x000000, 0x100000, CRC(b005fc63) SHA1(d4164b82fd46c6e782f8fca38c9434cca8dd945d) )
+	ROM_LOAD( "lh538394k.43", 0x100000, 0x100000, CRC(73154a63) SHA1(1b32de6eb1cb438f17ba7dcd6ca32ad455a3a382) )
+	ROM_LOAD( "lh538395k.44", 0x200000, 0x100000, CRC(774c697b) SHA1(b7ba21ba1b006bcdf9f009fc0981190ae082a0d1) )
+	ROM_LOAD( "lh538396k.45", 0x300000, 0x100000, CRC(bbc34e51) SHA1(546b1f901a3666aeb721380c8c7f2b4802cf2b32) )
+
+	ROM_REGION( 0x80000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "lh534k0k.8", 0x000000, 0x080000, CRC(735e6380) SHA1(bf019815e579ef2393c00869f101a01f746e04d6) )
+ROM_END
+
 ROM_START( ssoldier )
 	ROM_REGION( 0x100000, REGION_CPU1, 0 )
 	ROM_LOAD16_BYTE( "f3-h0-h.bin",  0x000001, 0x040000, CRC(b63fb9da) SHA1(429beb7ebc98815809fdd0ff69fcb4a14e1d8a14) )
@@ -2556,6 +2637,7 @@ GAME( 1991, thndblst, lethalth, lethalth,  lethalth, lethalth, ROT270, "Irem",
 GAME( 1992, uccops,   0,        raster,    uccops,   uccops,   ROT0,   "Irem",         "Undercover Cops (World)" )
 GAME( 1992, uccopsar, uccops,   raster,    uccops,   uccopsj,  ROT0,   "Irem",         "Undercover Cops (Alpha Renewal Version)" )
 GAME( 1992, uccopsj,  uccops,   raster,    uccops,   uccopsj,  ROT0,   "Irem",         "Undercover Cops (Japan)" )
+GAME( 1992, uccopsk,  uccops,   raster,    uccops,   uccopsj,  ROT0,   "Irem",         "Undercover Cops (Korean Translation)" )
 GAME( 1992, mysticri, 0,        nonraster, mysticri, mysticri, ROT0,   "Irem",         "Mystic Riders (World)" )
 GAME( 1992, gunhohki, mysticri, nonraster, mysticri, mysticri, ROT0,   "Irem",         "Gun Hohki (Japan)" )
 GAMEX(1992, majtitl2, 0,        raster,    majtitl2, majtitl2, ROT0,   "Irem",         "Major Title 2 (World)", GAME_IMPERFECT_GRAPHICS )
@@ -2564,6 +2646,7 @@ GAMEX(1992, skingam2, majtitl2, raster,    majtitl2, majtitl2, ROT0,   "Irem Ame
 GAME( 1992, hook,     0,        nonraster, hook,     hook,     ROT0,   "Irem",         "Hook (World)" )
 GAME( 1992, hooku,    hook,     nonraster, hook,     hook,     ROT0,   "Irem America", "Hook (US)" )
 GAME( 1992, hookj,    hook,     nonraster, hook,     hook,     ROT0,   "Irem", 	       "Hook (Japan)" )
+GAME( 1992, hookk,    hook,     nonraster, hook,     hook,     ROT0,   "Irem", 	       "Hook (Korean Translation)" )
 GAME( 1992, rtypeleo, 0,        raster,    rtypeleo, rtypeleo, ROT0,   "Irem",         "R-Type Leo (World rev. C)" )
 GAME( 1992, rtypelej, rtypeleo, raster,    rtypeleo, rtypelej, ROT0,   "Irem",         "R-Type Leo (Japan rev. D)" )
 GAME( 1993, inthunt,  0,        raster,    inthunt,  inthunt,  ROT0,   "Irem",         "In The Hunt (World)" )
@@ -2571,6 +2654,7 @@ GAME( 1993, inthuntu, inthunt,  raster,    inthunt,  inthunt,  ROT0,   "Irem Ame
 GAME( 1993, kaiteids, inthunt,  raster,    inthunt,  kaiteids, ROT0,   "Irem",         "Kaitei Daisensou (Japan)" )
 GAMEX(1993, nbbatman, 0,        raster,    nbbatman, nbbatman, ROT0,   "Irem America", "Ninja Baseball Batman (US)", GAME_IMPERFECT_GRAPHICS )
 GAMEX(1993, leaguemn, nbbatman, raster,    nbbatman, nbbatman, ROT0,   "Irem",         "Yakyuu Kakutou League-Man (Japan)", GAME_IMPERFECT_GRAPHICS )
+GAMEX(1993, leaguemk, nbbatman, raster,    nbbatman, nbbatman, ROT0,   "Irem",         "Yakyuu Kakutou League-Man (Korean Translation)", GAME_IMPERFECT_GRAPHICS )
 GAME( 1993, ssoldier, 0,        psoldier,  psoldier, ssoldier, ROT0,   "Irem America", "Superior Soldiers (US)" )
 GAME( 1993, psoldier, ssoldier, psoldier,  psoldier, psoldier, ROT0,   "Irem",         "Perfect Soldiers (Japan)" )
 GAME( 1994, dsccr94j, dsoccr94, psoldier,  dsccr94j, dsccr94j, ROT0,   "Irem",         "Dream Soccer '94 (Japan)" )
diff --git a/src/drivers/neogeo.c b/src/drivers/neogeo.c
index bfe50aa1..c3f1fd57 100644
--- a/src/drivers/neogeo.c
+++ b/src/drivers/neogeo.c
@@ -2743,6 +2743,31 @@ ROM_START( aof )
 	ROM_CONTINUE(      			 0x600001, 0x100000 )
 ROM_END
 
+ROM_START( aofk )
+	ROM_REGION( 0x100000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "044-p1k.bin", 0x000000, 0x080000, CRC(8461f3ac) SHA1(042df3f6bb49676d94308f958024558b2ce9961e) )
+
+	NEO_SFIX_128K( "044-s1k.bin", CRC(6e7c531e) SHA1(b0ede854b16216a97214a294d246af757f2500e8) )
+
+	NEO_BIOS_SOUND_128K( "044-m1.bin", CRC(981345f8) SHA1(5eb6a5a3f633d74a48555808e2562a0ba16d8675) )
+
+	ROM_REGION( 0x400000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "044-v2.bin", 0x000000, 0x200000, CRC(3ec632ea) SHA1(e3f413f580b57f70d2dae16dbdacb797884d3fce) )
+	ROM_LOAD( "044-v4.bin", 0x200000, 0x200000, CRC(4b0f8e23) SHA1(105da0cc5ba19869c7147fba8b177500758c232b) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x800000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "044-c1.bin", 0x000000, 0x100000, CRC(ddab98a7) SHA1(f20eb81ec431268798c142c482146c1545af1c24) ) /* Plane 0,1 */
+	ROM_CONTINUE(                  0x400000, 0x100000 )
+	ROM_LOAD16_BYTE( "044-c2.bin", 0x000001, 0x100000, CRC(d8ccd575) SHA1(f697263fe92164e274bf34c55327b3d4a158b332) ) /* Plane 2,3 */
+	ROM_CONTINUE(                  0x400001, 0x100000 )
+	ROM_LOAD16_BYTE( "044-c3.bin", 0x200000, 0x100000, CRC(403e898a) SHA1(dd5888f8b24a33b2c1f483316fe80c17849ccfc4) ) /* Plane 0,1 */
+	ROM_CONTINUE(                  0x600000, 0x100000 )
+	ROM_LOAD16_BYTE( "044-c4.bin", 0x200001, 0x100000, CRC(6235fbaa) SHA1(9090e337d7beed25ba81ae0708d0aeb57e6cf405) ) /* Plane 2,3 */
+	ROM_CONTINUE(                  0x600001, 0x100000 )
+ROM_END
+
 ROM_START( samsho )
 	ROM_REGION( 0x180000, REGION_CPU1, 0 )
 	ROM_LOAD16_WORD_SWAP( "045-p1.bin", 0x000000, 0x080000, CRC(80aa6c97) SHA1(6e07a4aa7b4719ae487a10cee9389cb55a370a7a) )
@@ -3000,6 +3025,60 @@ ROM_START( kof94 )
 	ROM_LOAD16_BYTE( "055-c8.bin", 0xc00001, 0x200000, CRC(fe0a235d) SHA1(a45c66836e4e3c77dfef9d4c6cc422cb59169149) ) /* Plane 2,3 */
 ROM_END
 
+ROM_START( kof94uh )
+	ROM_REGION( 0x200000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "055-p1uh.bin", 0x100000, 0x100000, CRC(bae7e4da) SHA1(2d2327c0ac3ff93864f2e3600074c31cc711faa6) )
+	ROM_CONTINUE(						  0x000000, 0x100000 )
+
+	NEO_SFIX_128K( "055-s1.bin", CRC(825976c1) SHA1(cb6a70bdd95d449d25196ca269b621c362db6743) )
+
+	NEO_BIOS_SOUND_128K( "055-m1.bin", CRC(f6e77cf5) SHA1(292a3e3a4918ffe72bd1c41acb927b91844e035e) )
+
+	ROM_REGION( 0x600000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "055-v1.bin", 0x000000, 0x200000, CRC(8889596d) SHA1(c9ce713b720511438dbd3fe3bcc7c246f475c6a2) )
+	ROM_LOAD( "055-v2.bin", 0x200000, 0x200000, CRC(25022b27) SHA1(2b040a831c3c92ac6e4719de38009a0d55b64f6b) )
+	ROM_LOAD( "055-v3.bin", 0x400000, 0x200000, CRC(83cf32c0) SHA1(34a31a37eb10945b5169e96321bcea06eec33a00) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x1000000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "055-c1.bin", 0x000000, 0x200000, CRC(b96ef460) SHA1(e52f5303c17b50ce165c008be2837336369c110b) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "055-c2.bin", 0x000001, 0x200000, CRC(15e096a7) SHA1(237c2a3d059de00bfca66e0016ed325d7a32bfec) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "055-c3.bin", 0x400000, 0x200000, CRC(54f66254) SHA1(c594384bcd8b03beb8c595591505fecc44b185ac) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "055-c4.bin", 0x400001, 0x200000, CRC(0b01765f) SHA1(ec1fdcc944611408367bf5023d4ebe7edd9dfa88) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "055-c5.bin", 0x800000, 0x200000, CRC(ee759363) SHA1(8a5621c1b1f8267b9b9b6a14ab4944de542e1945) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "055-c6.bin", 0x800001, 0x200000, CRC(498da52c) SHA1(1e6e6202ee053a5261db889177ce3a087e078bda) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "055-c7.bin", 0xc00000, 0x200000, CRC(62f66888) SHA1(ac91a0eab0753bee175ad40213a4ae5d38ed5b87) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "055-c8.bin", 0xc00001, 0x200000, CRC(fe0a235d) SHA1(a45c66836e4e3c77dfef9d4c6cc422cb59169149) ) /* Plane 2,3 */
+ROM_END
+
+ROM_START( kof94k )
+	ROM_REGION( 0x200000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "055-p1k.bin", 0x100000, 0x100000, CRC(dbecb405) SHA1(1829ce3dfce5e7fff115a0a71588613b75fed879) )
+	ROM_CONTINUE(                        0x000000, 0x100000 )
+
+	NEO_SFIX_128K( "055-s1.bin", CRC(825976c1) SHA1(cb6a70bdd95d449d25196ca269b621c362db6743) )
+
+	NEO_BIOS_SOUND_128K( "055-m1.bin", CRC(f6e77cf5) SHA1(292a3e3a4918ffe72bd1c41acb927b91844e035e) )
+
+	ROM_REGION( 0x600000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "055-v1.bin", 0x000000, 0x200000, CRC(8889596d) SHA1(c9ce713b720511438dbd3fe3bcc7c246f475c6a2) )
+	ROM_LOAD( "055-v2.bin", 0x200000, 0x200000, CRC(25022b27) SHA1(2b040a831c3c92ac6e4719de38009a0d55b64f6b) )
+	ROM_LOAD( "055-v3.bin", 0x400000, 0x200000, CRC(83cf32c0) SHA1(34a31a37eb10945b5169e96321bcea06eec33a00) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x1000000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "055-c1k.bin", 0x000000, 0x200000, CRC(bf987727) SHA1(d77dcc0f83e80d9b55a62269e13cc6e29c59c8f1) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "055-c2.bin",  0x000001, 0x200000, CRC(15e096a7) SHA1(237c2a3d059de00bfca66e0016ed325d7a32bfec) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "055-c3.bin",  0x400000, 0x200000, CRC(54f66254) SHA1(c594384bcd8b03beb8c595591505fecc44b185ac) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "055-c4.bin",  0x400001, 0x200000, CRC(0b01765f) SHA1(ec1fdcc944611408367bf5023d4ebe7edd9dfa88) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "055-c5.bin",  0x800000, 0x200000, CRC(ee759363) SHA1(8a5621c1b1f8267b9b9b6a14ab4944de542e1945) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "055-c6.bin",  0x800001, 0x200000, CRC(498da52c) SHA1(1e6e6202ee053a5261db889177ce3a087e078bda) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "055-c7.bin",  0xc00000, 0x200000, CRC(62f66888) SHA1(ac91a0eab0753bee175ad40213a4ae5d38ed5b87) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "055-c8.bin",  0xc00001, 0x200000, CRC(fe0a235d) SHA1(a45c66836e4e3c77dfef9d4c6cc422cb59169149) ) /* Plane 2,3 */
+ROM_END
+
 ROM_START( aof2 )
 	ROM_REGION( 0x200000, REGION_CPU1, 0 )
 	ROM_LOAD16_WORD_SWAP( "056-p1.bin", 0x000000, 0x100000, CRC(a3b1d021) SHA1(ee42f3ca4516226b0088d0303ed28e3ecdabcd71) )
@@ -3298,6 +3377,29 @@ ROM_START( wjammers )
 	ROM_LOAD16_BYTE( "065-c4.bin", 0x200001, 0x100000, CRC(715e15ff) SHA1(ac8b8b01f5c7384b883afbe0cf977430378e3fef) )
 ROM_END
 
+ROM_START( wjammerk )
+	ROM_REGION( 0x100000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "065-p1.bin", 0x000000, 0x080000, CRC(e81e7a31) SHA1(bb1a8922afe269f6e3ea63c3a377c2a6e2171d2d) )
+
+	NEO_SFIX_128K( "065-s1.bin", CRC(074b5723) SHA1(86d3b3bb5414f43e4d3b7a2af0db23cc71ce8412) )
+
+	NEO_BIOS_SOUND_128K( "065-m1.bin", CRC(52c23cfc) SHA1(809a7e072ad9acbffc25e9bd27cdb97638d09d07) )
+
+	ROM_REGION( 0x380000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "065-v1.bin", 0x000000, 0x100000, CRC(ce8b3698) SHA1(7d75e2a5cf8c90be422f8b425447e81597fe145a) )
+	ROM_LOAD( "065-v2.bin", 0x100000, 0x100000, CRC(659f9b96) SHA1(62f40365212153bc3b92a1187fa44f6cdc7f7b83) )
+	ROM_LOAD( "065-v3.bin", 0x200000, 0x100000, CRC(39f73061) SHA1(ec57cd58e7f8569cff925d11e2320d588ce4fe49) )
+	ROM_LOAD( "065-v4.bin", 0x300000, 0x080000, CRC(3740edde) SHA1(aaf64df1d27289e23dc4e3979ba12a7c928d1a7f) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x400000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "065-c1k.bin", 0x000000, 0x100000, CRC(ebded27e) SHA1(574a0086bf13a5ac5d27de90c4d4611a19668cf8) )
+	ROM_LOAD16_BYTE( "065-c2k.bin", 0x000001, 0x100000, CRC(f5483767) SHA1(756dd8e161bf428659c642b5056aa0bcf5e0d9a8) )
+	ROM_LOAD16_BYTE( "065-c3.bin",  0x200000, 0x100000, CRC(40986386) SHA1(65795a50197049681265946713d416c9cdb68f08) )
+	ROM_LOAD16_BYTE( "065-c4.bin",  0x200001, 0x100000, CRC(715e15ff) SHA1(ac8b8b01f5c7384b883afbe0cf977430378e3fef) )
+ROM_END
+
 ROM_START( karnovr )
 	ROM_REGION( 0x100000, REGION_CPU1, 0 )
 	ROM_LOAD16_WORD_SWAP( "066-p1.bin", 0x000000, 0x100000, CRC(8c86fd22) SHA1(8cf97c6fb9c5717167ccc54bf5856248ccaf32c6) )
@@ -3708,6 +3810,66 @@ ROM_START( kof95a )
 	ROM_LOAD16_BYTE( "084-c8.bin", 0x1800001, 0x100000, CRC(78eb0f9b) SHA1(2925ea21ed2ce167f08a25589e94f28643379034) ) /* Plane 2,3 */
 ROM_END
 
+ROM_START( kof95k )
+	ROM_REGION( 0x200000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "084-p1k.bin", 0x100000, 0x100000, CRC(1ba01d5b) SHA1(48005f70d7031170d921a5c455b5e4ea25a08112) )
+	ROM_CONTINUE(                        0x000000, 0x100000 )
+
+	NEO_SFIX_128K( "084-s1k.bin", CRC(0d07a5ab) SHA1(d5426bb91fe31cbb1633d2ca90479869c8d2210d) )
+
+	NEO_BIOS_SOUND_128K( "084-m1.bin", CRC(6f2d7429) SHA1(6f8462e4f07af82a5ca3197895d5dcbb67bdaa61) )
+
+	ROM_REGION( 0x900000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+/*	ROM_LOAD( "084-v1.bin", 0x000000, 0x400000, CRC(21469561) SHA1(f35c72d31f026efc9e74bc4f198a123999ab3fc3) ) */ /* bad old rom ?*/
+ 	ROM_LOAD( "084-v1.bin", 0x000000, 0x400000, CRC(84861b56) SHA1(1b6c91ddaed01f45eb9b7e49d9c2b9b479d50da6) )
+	ROM_LOAD( "084-v2.bin", 0x400000, 0x200000, CRC(b38a2803) SHA1(dbc2c8606ca09ed7ff20906b022da3cf053b2f09) )
+	/* 600000-7fffff empty */
+	ROM_LOAD( "084-v3.bin", 0x800000, 0x100000, CRC(d683a338) SHA1(eb9866b4b286edc09963cb96c43ce0a8fb09adbb) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x1a00000, REGION_GFX3, 0 )
+ 	ROM_LOAD16_BYTE( "084-c1k.bin", 0x0000000, 0x400000, CRC(4bb4eb90) SHA1(b14ed655272a13cc189bc6bc3a5f327c55e2182b) ) /* Plane 0,1 */
+ 	ROM_LOAD16_BYTE( "084-c2k.bin", 0x0000001, 0x400000, CRC(7e94c968) SHA1(e188e6c714ec7600f1275b01c56c8e836fc00a05) ) /* Plane 2,3 */
+ 	ROM_LOAD16_BYTE( "084-c3.bin",  0x0800000, 0x400000, CRC(a4e65d1b) SHA1(740a405b40b3a4b324697d2652cae29ffe0ac0bd) ) /* Plane 0,1 */
+ 	ROM_LOAD16_BYTE( "084-c4.bin",  0x0800001, 0x400000, CRC(c1ace468) SHA1(74ea2a3cfd7b744f0988a05baaff10016ca8f625) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "084-c5.bin",  0x1000000, 0x200000, CRC(8a2c1edc) SHA1(67866651bc0ce27122285a66b0aab108acf3d065) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "084-c6.bin",  0x1000001, 0x200000, CRC(f593ac35) SHA1(302c92c63f092a8d49429c3331e5e5678f0ea48d) ) /* Plane 2,3 */
+	/* 1400000-17fffff empty */
+	ROM_LOAD16_BYTE( "084-c7.bin",  0x1800000, 0x100000, CRC(9904025f) SHA1(eec770746a0ad073f7d353ab16a2cc3a5278d307) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "084-c8.bin",  0x1800001, 0x100000, CRC(78eb0f9b) SHA1(2925ea21ed2ce167f08a25589e94f28643379034) ) /* Plane 2,3 */
+ROM_END
+
+ROM_START( kof95uh )
+	ROM_REGION( 0x200000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "084-p1uh.bin", 0x100000, 0x100000, CRC(3560dc75) SHA1(84015a4fcb98afad728fb961e6dc4556ea616cda) )
+	ROM_CONTINUE(						  0x000000, 0x100000 )
+
+	NEO_SFIX_128K( "084-s1.bin", CRC(de716f8a) SHA1(f7386454a943ed5caf625f67ee1d0197b1c6fa13) )
+
+	NEO_BIOS_SOUND_128K( "084-m1.bin", CRC(6f2d7429) SHA1(6f8462e4f07af82a5ca3197895d5dcbb67bdaa61) )
+
+	ROM_REGION( 0x900000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+/*	ROM_LOAD( "084-v1.bin", 0x000000, 0x400000, CRC(21469561) SHA1(f35c72d31f026efc9e74bc4f198a123999ab3fc3) ) */ /* bad old rom ?*/
+ 	ROM_LOAD( "084-v1.bin", 0x000000, 0x400000, CRC(84861b56) SHA1(1b6c91ddaed01f45eb9b7e49d9c2b9b479d50da6) )
+	ROM_LOAD( "084-v2.bin", 0x400000, 0x200000, CRC(b38a2803) SHA1(dbc2c8606ca09ed7ff20906b022da3cf053b2f09) )
+	/* 600000-7fffff empty */
+	ROM_LOAD( "084-v3.bin", 0x800000, 0x100000, CRC(d683a338) SHA1(eb9866b4b286edc09963cb96c43ce0a8fb09adbb) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x1a00000, REGION_GFX3, 0 )
+ 	ROM_LOAD16_BYTE( "084-c1.bin", 0x0000000, 0x400000, CRC(fe087e32) SHA1(e8e89faa616027e4fb9b8a865c1a67f409c93bdf) ) /* Plane 0,1 */
+ 	ROM_LOAD16_BYTE( "084-c2.bin", 0x0000001, 0x400000, CRC(07864e09) SHA1(0817fcfd75d0735fd8ff27561eaec371e4ff5829) ) /* Plane 2,3 */
+ 	ROM_LOAD16_BYTE( "084-c3.bin", 0x0800000, 0x400000, CRC(a4e65d1b) SHA1(740a405b40b3a4b324697d2652cae29ffe0ac0bd) ) /* Plane 0,1 */
+ 	ROM_LOAD16_BYTE( "084-c4.bin", 0x0800001, 0x400000, CRC(c1ace468) SHA1(74ea2a3cfd7b744f0988a05baaff10016ca8f625) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "084-c5.bin", 0x1000000, 0x200000, CRC(8a2c1edc) SHA1(67866651bc0ce27122285a66b0aab108acf3d065) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "084-c6.bin", 0x1000001, 0x200000, CRC(f593ac35) SHA1(302c92c63f092a8d49429c3331e5e5678f0ea48d) ) /* Plane 2,3 */
+	/* 1400000-17fffff empty */
+	ROM_LOAD16_BYTE( "084-c7.bin", 0x1800000, 0x100000, CRC(9904025f) SHA1(eec770746a0ad073f7d353ab16a2cc3a5278d307) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "084-c8.bin", 0x1800001, 0x100000, CRC(78eb0f9b) SHA1(2925ea21ed2ce167f08a25589e94f28643379034) ) /* Plane 2,3 */
+ROM_END
+
 ROM_START( tws96 )
 	ROM_REGION( 0x100000, REGION_CPU1, 0 )
 	ROM_LOAD16_WORD_SWAP( "086-p1.bin", 0x000000, 0x100000, CRC(03e20ab6) SHA1(3a0a5a54649178ce7a6158980cb4445084b40fb5) )
@@ -4078,6 +4240,24 @@ ROM_START( puzzledp )
 	ROM_LOAD16_BYTE( "202-c2.bin", 0x000001, 0x100000, CRC(42371307) SHA1(df794f989e2883634bf7ffeea48d6bc3854529af) ) /* Plane 2,3 */
 ROM_END
 
+ROM_START( puzzldpk )
+	ROM_REGION( 0x100000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "202-p1.bin", 0x000000, 0x080000, CRC(2b61415b) SHA1(0e3e4faf2fd6e63407425e1ac788003e75aeeb4f) )
+
+	NEO_SFIX_64K( "202-s1.bin", CRC(4a421612) SHA1(8a79055be7bf6e2c344a72d6afe6a33be3d4a6c3) )
+
+	NEO_BIOS_SOUND_128K( "202-m1.bin", CRC(9c0291ea) SHA1(3fa67c62acba79be6b3a98cc1601e45569fa11ae) )
+
+	ROM_REGION( 0x080000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "202-v1.bin", 0x000000, 0x080000, CRC(debeb8fb) SHA1(49a3d3578c087f1a0050168571ef8d1b08c5dc05) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x200000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "202-c1k.bin", 0x000000, 0x100000, CRC(fc5e5ae7) SHA1(8bfc1764f57fb932ddf583bbc0cf35ee4780ebd0) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "202-c2.bin",  0x000001, 0x100000, CRC(42371307) SHA1(df794f989e2883634bf7ffeea48d6bc3854529af) ) /* Plane 2,3 */
+ROM_END
+
 ROM_START( mosyougi )
 	ROM_REGION( 0x100000, REGION_CPU1, 0 )
 	ROM_LOAD16_WORD_SWAP( "203-p1.bin", 0x000000, 0x100000, CRC(7ba70e2d) SHA1(945f472cc3e7706f613c52df18de35c986d166e7) )
@@ -4279,6 +4459,33 @@ ROM_START( kof96h )
 	ROM_LOAD16_BYTE( "214-c8.bin", 0x1800001, 0x400000, CRC(fa1461ad) SHA1(6c71a7f08e4044214223a6bf80984582ab5e0328) ) /* Plane 2,3 */
 ROM_END
 
+ROM_START( kof96k )
+	ROM_REGION( 0x300000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "214-p1k.bin", 0x000000, 0x100000, CRC(a54e1812) SHA1(46b6eee1303a8d0efdd4659080a30a53ae2aeb15) )
+	ROM_LOAD16_WORD_SWAP( "214-p2k.bin", 0x100000, 0x200000, CRC(a7e05e29) SHA1(f639e81cf74169fd11b7c76732db36b475938a92) )
+
+	NEO_SFIX_128K( "214-s1.bin", CRC(1254cbdb) SHA1(fce5cf42588298711a3633e9c9c1d4dcb723ac76) )
+
+	NEO_BIOS_SOUND_128K( "214-m1.bin", CRC(dabc427c) SHA1(b76722ed142ee7addceb4757424870dbd003e8b3) )
+
+	ROM_REGION( 0xa00000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "214-v1.bin", 0x000000, 0x400000, CRC(63f7b045) SHA1(1353715f1a8476dca6f8031d9e7a401eacab8159) )
+	ROM_LOAD( "214-v2.bin", 0x400000, 0x400000, CRC(25929059) SHA1(6a721c4cb8f8dc772774023877d4a9f50d5a9e31) )
+	ROM_LOAD( "214-v3.bin", 0x800000, 0x200000, CRC(92a2257d) SHA1(5064aec78fa0d104e5dd5869b95382aa170214ee) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x2000000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "214-c1k.bin", 0x0000000, 0x400000, CRC(0524e33e) SHA1(f844f2b075f1982ccb75691a422d957500ba8623) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "214-c2k.bin", 0x0000001, 0x400000, CRC(e1374ccc) SHA1(7bff6465c21b53fbe85ea49fdb1fe8ea4b77394d) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "214-c3.bin",  0x0800000, 0x400000, CRC(64989a65) SHA1(e6f3749d43be0afa9dad7b085cb782ba694252ca) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "214-c4.bin",  0x0800001, 0x400000, CRC(afbea515) SHA1(ae875052728de33174827705646bd14cf3937b5c) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "214-c5.bin",  0x1000000, 0x400000, CRC(2a3bbd26) SHA1(7c1a7e50a10a1b082e0d0d515c34135ee9f995ac) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "214-c6.bin",  0x1000001, 0x400000, CRC(44d30dc7) SHA1(c8ae001e37224b55d9e4a4d99f6578b4f6eb055f) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "214-c7.bin",  0x1800000, 0x400000, CRC(3687331b) SHA1(2be95caab76d7af51674f93884330ba73a6053e4) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "214-c8.bin",  0x1800001, 0x400000, CRC(fa1461ad) SHA1(6c71a7f08e4044214223a6bf80984582ab5e0328) ) /* Plane 2,3 */
+ROM_END
+
 ROM_START( ssideki4 )
 	ROM_REGION( 0x200000, REGION_CPU1, 0 )
 	ROM_LOAD16_WORD_SWAP( "215-p1.bin", 0x100000, 0x100000, CRC(519b4ba3) SHA1(5aa59514b23aa663f2c4014ee94a31e9f59151de) )
@@ -4688,6 +4895,56 @@ ROM_START( kof97a )
 	ROM_LOAD16_BYTE( "232-c6.bin", 0x2000001, 0x400000, CRC(4ff4d47b) SHA1(4d5689ede24a5fe4330bd85d4d3f4eb2795308bb) ) /* Plane 2,3 */
 ROM_END
 
+ROM_START( kof97k )
+	ROM_REGION( 0x500000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "232-p1k.bin", 0x000000, 0x100000, CRC(4756695c) SHA1(c7fdf93d8b6175194533e41d16aa1740cb37f3e1) )
+	ROM_LOAD16_WORD_SWAP( "232-p2k.bin", 0x100000, 0x400000, CRC(3c9aa01c) SHA1(68c004861c991c1d8449c839e282a9bdf7db8d9d) )
+
+	NEO_SFIX_128K( "232-s1.bin", CRC(8514ecf5) SHA1(18d8e7feb51ea88816f1c786932a53655b0de6a0) )
+
+	NEO_BIOS_SOUND_128K( "232-m1.bin", CRC(45348747) SHA1(ed77cbae2b208d1177a9f5f6e8cd57070e90b65b) )
+
+	ROM_REGION( 0xc00000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "232-v1.bin", 0x000000, 0x400000, CRC(22a2b5b5) SHA1(ebdbc977332e6d93e266755000b43857e0082965) )
+	ROM_LOAD( "232-v2.bin", 0x400000, 0x400000, CRC(2304e744) SHA1(98d283e2bcc9291a53f52afd35ef76dfb0828432) )
+	ROM_LOAD( "232-v3.bin", 0x800000, 0x400000, CRC(759eb954) SHA1(54e77c4e9e6b89458e59824e478ddc33a9c72655) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x2800000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "232-c1k.bin", 0x0000000, 0x800000, CRC(63e04fd2) SHA1(3b1e157c27e8f116ccdf940b5e86fea47586a4da) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "232-c2k.bin", 0x0000001, 0x800000, CRC(c3e5db31) SHA1(4c69e9f5b3dc24b80350b45b847ee526fad2538d) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "232-c3.bin",  0x1000000, 0x800000, CRC(581d6618) SHA1(14d3124a08ded59f86932c6b28e1a4e48c564ccd) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "232-c4.bin",  0x1000001, 0x800000, CRC(49bb1e68) SHA1(f769c1bd1b019521111ff3f0d22c63cb1f2640ef) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "232-c5.bin",  0x2000000, 0x400000, CRC(34fc4e51) SHA1(b39c65f27873f71a6f5a5d1d04e5435f874472ee) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "232-c6.bin",  0x2000001, 0x400000, CRC(4ff4d47b) SHA1(4d5689ede24a5fe4330bd85d4d3f4eb2795308bb) ) /* Plane 2,3 */
+ROM_END
+
+ROM_START( kof97uh )
+	ROM_REGION( 0x500000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "232-p1uh.bin", 0x000000, 0x100000, CRC(2ceeda58) SHA1(ab3963fae7e2d1283d4918bec46a66c95372abea) )
+	ROM_LOAD16_WORD_SWAP( "232-p2.bin",   0x100000, 0x400000, CRC(158b23f6) SHA1(9744620a70513490aaf9c5eda33e5ec31222be19) )
+
+	NEO_SFIX_128K( "232-s1.bin", CRC(8514ecf5) SHA1(18d8e7feb51ea88816f1c786932a53655b0de6a0) )
+
+	NEO_BIOS_SOUND_128K( "232-m1.bin", CRC(45348747) SHA1(ed77cbae2b208d1177a9f5f6e8cd57070e90b65b) )
+
+	ROM_REGION( 0xc00000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "232-v1.bin", 0x000000, 0x400000, CRC(22a2b5b5) SHA1(ebdbc977332e6d93e266755000b43857e0082965) )
+	ROM_LOAD( "232-v2.bin", 0x400000, 0x400000, CRC(2304e744) SHA1(98d283e2bcc9291a53f52afd35ef76dfb0828432) )
+	ROM_LOAD( "232-v3.bin", 0x800000, 0x400000, CRC(759eb954) SHA1(54e77c4e9e6b89458e59824e478ddc33a9c72655) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x2800000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "232-c1.bin", 0x0000000, 0x800000, CRC(5f8bf0a1) SHA1(e8b63bbc814de171fd18c5864a7fc639970c1ecf) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "232-c2.bin", 0x0000001, 0x800000, CRC(e4d45c81) SHA1(fdb2b9326362e27b1c7a5beb977e0bc537488186) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "232-c3.bin", 0x1000000, 0x800000, CRC(581d6618) SHA1(14d3124a08ded59f86932c6b28e1a4e48c564ccd) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "232-c4.bin", 0x1000001, 0x800000, CRC(49bb1e68) SHA1(f769c1bd1b019521111ff3f0d22c63cb1f2640ef) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "232-c5.bin", 0x2000000, 0x400000, CRC(34fc4e51) SHA1(b39c65f27873f71a6f5a5d1d04e5435f874472ee) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "232-c6.bin", 0x2000001, 0x400000, CRC(4ff4d47b) SHA1(4d5689ede24a5fe4330bd85d4d3f4eb2795308bb) ) /* Plane 2,3 */
+ROM_END
+
 ROM_START( kof97pls ) /* bootleg */
 	ROM_REGION( 0x500000, REGION_CPU1, 0 )
 	ROM_LOAD16_WORD_SWAP( "232-p1p.bin", 0x000000, 0x100000, CRC(c01fda46) SHA1(bc6402f5082efc80a8936364c657165f19b49415) )
@@ -4831,6 +5088,24 @@ ROM_START( puzzldpr )
 	ROM_LOAD16_BYTE( "202-c2.bin", 0x000001, 0x100000, CRC(42371307) SHA1(df794f989e2883634bf7ffeea48d6bc3854529af) ) /* Plane 2,3 */
 ROM_END
 
+ROM_START( puzzldrk )
+	ROM_REGION( 0x100000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "235-p1.bin", 0x000000, 0x080000, CRC(afed5de2) SHA1(a5d82c6dbe687505e8c8d7339908da45cd379a0b) )
+
+	NEO_SFIX_64K( "235-s1.bin", CRC(5a68d91e) SHA1(a8c58eb68fd7e6e2d9d1153a9da514430437f342) )
+
+	NEO_BIOS_SOUND_128K( "202-m1.bin", CRC(9c0291ea) SHA1(3fa67c62acba79be6b3a98cc1601e45569fa11ae) )
+
+	ROM_REGION( 0x080000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "202-v1.bin", 0x000000, 0x080000, CRC(debeb8fb) SHA1(49a3d3578c087f1a0050168571ef8d1b08c5dc05) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x200000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "202-c1k.bin", 0x000000, 0x100000, CRC(fc5e5ae7) SHA1(8bfc1764f57fb932ddf583bbc0cf35ee4780ebd0) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "202-c2.bin",  0x000001, 0x100000, CRC(42371307) SHA1(df794f989e2883634bf7ffeea48d6bc3854529af) ) /* Plane 2,3 */
+ROM_END
+
 ROM_START( irrmaze )
 	ROM_REGION( 0x200000, REGION_CPU1, 0 )
 	ROM_LOAD16_WORD_SWAP( "236-p1.bin", 0x000000, 0x200000, CRC(6d536c6e) SHA1(87d66683304a6617da8af7dfdfcbf4a3ab63056a) )
@@ -5160,6 +5435,62 @@ ROM_START( kof98n )
 	ROM_LOAD16_BYTE( "242-c8.bin", 0x3000001, 0x800000, CRC(c823e045) SHA1(886fbf64bcb58bc4eabb1fc9262f6ac9901a0f28) ) /* Plane 2,3 */
 ROM_END
 
+ROM_START( kof98kr )
+	ROM_REGION( 0x500000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "242-p1k.bin", 0x000000, 0x100000, CRC(bb9ac000) SHA1(cafd84f96cacbf1aa23eb9add40af7e260c548f3) )
+	ROM_LOAD16_WORD_SWAP( "242-p2k.bin", 0x100000, 0x400000, CRC(f53ca29a) SHA1(76d730aa46fa13a07584d8916c0f57fcea5f3bd0) )
+
+	NEO_SFIX_128K( "242-s1k.bin", CRC(ae72de31) SHA1(ccf6a7c4a76a0d575b68c138dbcfb490675eaf97) )
+
+	NEO_BIOS_SOUND_256K( "242-m1.bin", CRC(4e7a6b1b) SHA1(b54d08f88713ed0271aa06f9f7c9c572ef555b1a) )
+
+	ROM_REGION( 0x1000000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "242-v1.bin", 0x000000, 0x400000, CRC(b9ea8051) SHA1(49606f64eb249263b3341b4f50cc1763c390b2af) )
+	ROM_LOAD( "242-v2.bin", 0x400000, 0x400000, CRC(cc11106e) SHA1(d3108bc05c9bf041d4236b2fa0c66b013aa8db1b) )
+	ROM_LOAD( "242-v3.bin", 0x800000, 0x400000, CRC(044ea4e1) SHA1(062a2f2e52098d73bc31c9ad66f5db8080395ce8) )
+	ROM_LOAD( "242-v4.bin", 0xc00000, 0x400000, CRC(7985ea30) SHA1(54ed5f0324de6164ea81943ebccb3e8d298368ec) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x4000000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "242-c1k.bin", 0x0000000, 0x800000, CRC(905e2f75) SHA1(3e0d72c1fcd4c86b0cc9445fa76e17c0120c2533) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "242-c2k.bin", 0x0000001, 0x800000, CRC(dcd6d171) SHA1(f275f168c37da31ed64c70d9bd239241f95bd408) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "242-c3.bin",  0x1000000, 0x800000, CRC(22127b4f) SHA1(bd0d00f889d9da7c6ac48f287d9ed8c605ae22cf) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "242-c4.bin",  0x1000001, 0x800000, CRC(0b4fa044) SHA1(fa13c3764fae6b035a626601bc43629f1ebaaffd) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "242-c5.bin",  0x2000000, 0x800000, CRC(9d10bed3) SHA1(4d44addc7c808649bfb03ec45fb9529da413adff) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "242-c6.bin",  0x2000001, 0x800000, CRC(da07b6a2) SHA1(9c3f0da7cde1ffa8feca89efc88f07096e502acf) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "242-c7.bin",  0x3000000, 0x800000, CRC(f6d7a38a) SHA1(dd295d974dd4a7e5cb26a3ef3febcd03f28d522b) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "242-c8.bin",  0x3000001, 0x800000, CRC(c823e045) SHA1(886fbf64bcb58bc4eabb1fc9262f6ac9901a0f28) ) /* Plane 2,3 */
+ROM_END
+
+ROM_START( kof98uh )
+	ROM_REGION( 0x500000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "242-p1uh.bin", 0x000000, 0x100000, CRC(deec68bd) SHA1(2a61e2a9d14742385535110a64674e6709e5be61) )
+	ROM_LOAD16_WORD_SWAP( "242-p2.bin",   0x100000, 0x400000, CRC(980aba4c) SHA1(5e735929ec6c3ca5b2efae3c7de47bcbb8ade2c5) )
+
+	NEO_SFIX_128K( "242-s1.bin", CRC(7f7b4805) SHA1(80ee6e5d0ece9c34ebca54b043a7cb33f9ff6b92) )
+
+	NEO_BIOS_SOUND_256K( "242-m1.bin", CRC(4e7a6b1b) SHA1(b54d08f88713ed0271aa06f9f7c9c572ef555b1a) )
+
+	ROM_REGION( 0x1000000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "242-v1.bin", 0x000000, 0x400000, CRC(b9ea8051) SHA1(49606f64eb249263b3341b4f50cc1763c390b2af) )
+	ROM_LOAD( "242-v2.bin", 0x400000, 0x400000, CRC(cc11106e) SHA1(d3108bc05c9bf041d4236b2fa0c66b013aa8db1b) )
+	ROM_LOAD( "242-v3.bin", 0x800000, 0x400000, CRC(044ea4e1) SHA1(062a2f2e52098d73bc31c9ad66f5db8080395ce8) )
+	ROM_LOAD( "242-v4.bin", 0xc00000, 0x400000, CRC(7985ea30) SHA1(54ed5f0324de6164ea81943ebccb3e8d298368ec) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x4000000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "242-c1.bin", 0x0000000, 0x800000, CRC(e564ecd6) SHA1(78f22787a204f26bae9b2b1c945ddbc27143352f) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "242-c2.bin", 0x0000001, 0x800000, CRC(bd959b60) SHA1(2c97c59e77c9a3fe7d664e741d37944f3d56c10b) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "242-c3.bin", 0x1000000, 0x800000, CRC(22127b4f) SHA1(bd0d00f889d9da7c6ac48f287d9ed8c605ae22cf) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "242-c4.bin", 0x1000001, 0x800000, CRC(0b4fa044) SHA1(fa13c3764fae6b035a626601bc43629f1ebaaffd) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "242-c5.bin", 0x2000000, 0x800000, CRC(9d10bed3) SHA1(4d44addc7c808649bfb03ec45fb9529da413adff) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "242-c6.bin", 0x2000001, 0x800000, CRC(da07b6a2) SHA1(9c3f0da7cde1ffa8feca89efc88f07096e502acf) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "242-c7.bin", 0x3000000, 0x800000, CRC(f6d7a38a) SHA1(dd295d974dd4a7e5cb26a3ef3febcd03f28d522b) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "242-c8.bin", 0x3000001, 0x800000, CRC(c823e045) SHA1(886fbf64bcb58bc4eabb1fc9262f6ac9901a0f28) ) /* Plane 2,3 */
+ROM_END
+
 ROM_START( lastbld2 )
 	ROM_REGION( 0x500000, REGION_CPU1, 0 )
 	ROM_LOAD16_WORD_SWAP( "243-p1.bin", 0x000000, 0x100000, CRC(af1e6554) SHA1(bd8526f60c2472937728a5d933fbd19d899f2cba) )
@@ -5206,6 +5537,26 @@ ROM_START( neocup98 )
 	ROM_LOAD16_BYTE( "244-c2.bin", 0x000001, 0x800000, CRC(33aa0f35) SHA1(3443c7765c6aa177003d42bbfcac9f31d1e12575) ) /* Plane 2,3 */
 ROM_END
 
+ROM_START( neocu98k )
+	ROM_REGION( 0x200000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "244-p1k.bin", 0x100000, 0x100000, CRC(130a8029) SHA1(76b5bc19d77a891609b3491c916872d730b730e1) )
+	ROM_CONTINUE(                        0x000000, 0x100000 )
+
+	NEO_SFIX_128K( "244-s1k.bin", CRC(becb9e7a) SHA1(b40e0ee79ab234ab2162d735d66aafa63f9d7477) )
+
+	NEO_BIOS_SOUND_128K( "244-m1.bin", CRC(a701b276) SHA1(055550ebc650835bcf8ea4457b2c91bd73e21281) )
+
+	ROM_REGION( 0x600000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "244-v1.bin", 0x000000, 0x400000, CRC(79def46d) SHA1(63414235de2e177654508f1c840040424f8993e6) )
+	ROM_LOAD( "244-v2.bin", 0x400000, 0x200000, CRC(b231902f) SHA1(9209772e947a2c7ac31b49dd613bf2eab0cb3358) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x1000000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "244-c1k.bin", 0x000000, 0x800000, CRC(8505fa3e) SHA1(79cde36cb44a87a528212aa3872c680880c5af9e) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "244-c2k.bin", 0x000001, 0x800000, CRC(54e86379) SHA1(e76f27b5cf2ab7ed00a8abfe2e2397394c51dac5) ) /* Plane 2,3 */
+ROM_END
+
 ROM_START( breakrev )
 	ROM_REGION( 0x200000, REGION_CPU1, 0 )
 	ROM_LOAD16_WORD_SWAP( "245-p1.bin", 0x100000, 0x100000, CRC(c828876d) SHA1(1dcba850e5cf8219d0945612cfded6d20ca8682a) )
@@ -5273,6 +5624,24 @@ ROM_START( flipshot )
 	ROM_LOAD16_BYTE( "247-c2.bin",  0x000001, 0x200000, CRC(7d6d6e87) SHA1(6475b58b9f91c20d1f465f3e892de0c68e12a92b) ) /* Plane 2,3 */
 ROM_END
 
+ROM_START( flipshtk )
+	ROM_REGION( 0x100000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "247-p1.bin", 0x000000, 0x080000, CRC(d2e7a7e3) SHA1(1ff4f070fcc658bbc7dc69e16c87f82d7392d100) )
+
+	NEO_SFIX_128K( "247-s1.bin", CRC(6300185c) SHA1(cb2f1de085fde214f96a962b1c2fa285eb387d44) )
+
+	NEO_BIOS_SOUND_128K( "247-m1.bin", CRC(a9fe0144) SHA1(4cc076ecce9216a373f3dcd7ba28a03d6050e522) )
+
+	ROM_REGION( 0x200000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "247-v1.bin", 0x000000, 0x200000, CRC(42ec743d) SHA1(f45b5167ebcbd59300f4e5b05448cd421654102a) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x400000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "247-c1k.bin",  0x000000, 0x200000, CRC(1ccfeff9) SHA1(3575b84acca6ec0f26f4a0ad30a16c140e1c0b2e) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "247-c2k.bin",  0x000001, 0x200000, CRC(648cdd5d) SHA1(8a0aaf13e2539e48f9b0b18f8154aa50bf4bed2a) ) /* Plane 2,3 */
+ROM_END
+
 ROM_START( pbobbl2n )
 	ROM_REGION( 0x100000, REGION_CPU1, 0 )
 	ROM_LOAD16_WORD_SWAP( "248-p1.bin", 0x000000, 0x100000, CRC(9d6c0754) SHA1(95c70c2d51fc4de01e768e03cc800a850aaad5dc) )
@@ -5507,6 +5876,72 @@ ROM_START( kof99p ) /* Prototype Version - Possibly Hacked */
 	ROM_LOAD16_BYTE( "251-c8p.bin", 0x3000001, 0x800000, CRC(ead513ce) SHA1(e9b07a0b01fdeb3004755a479df059c81b4d0ed6) ) /* Plane 2,3 */
 ROM_END
 
+ROM_START( kof99k ) /* Original Version - Encrypted GFX */
+	ROM_REGION( 0x500000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "152-p1k.bin", 0x000000, 0x100000, CRC(b98c12c5) SHA1(91ca79201cc1bf6faaa909039511a5db7f347c8a) )
+	ROM_LOAD16_WORD_SWAP( "152-p2k.bin", 0x100000, 0x400000, CRC(d87f8748) SHA1(1e5f1c3327d1ffe50b393ccdae81e10f9dd1c605) )
+
+	/* The Encrypted Boards do _not_ have an s1 rom, data for it comes from the Cx ROMs */
+	ROM_REGION( 0x20000, REGION_GFX1, 0 )
+	ROM_FILL(                 0x000000, 0x20000, 0 )
+	ROM_REGION( 0x20000, REGION_GFX2, 0 )
+	ROM_LOAD( "sfix.sfx",  0x000000, 0x20000, CRC(354029fc) SHA1(4ae4bf23b4c2acff875775d4cbff5583893ce2a1) )
+
+	NEO_BIOS_SOUND_128K( "251-m1.bin", CRC(5e74539c) SHA1(6f49a9343cbd026b2c6720ff3fa2e5b1f85e80da) )
+
+	ROM_REGION( 0x0e00000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "251-v1.bin", 0x000000, 0x400000, CRC(ef2eecc8) SHA1(8ed13b9db92dba3124bc5ba66e3e275885ece24a) )
+	ROM_LOAD( "251-v2.bin", 0x400000, 0x400000, CRC(73e211ca) SHA1(0e60fa64cab6255d9721e2b4bc22e3de64c874c5) )
+	ROM_LOAD( "251-v3.bin", 0x800000, 0x400000, CRC(821901da) SHA1(c6d4975bfaa19a62ed59126cadf2578c0a5c257f) )
+	ROM_LOAD( "251-v4.bin", 0xc00000, 0x200000, CRC(b49e6178) SHA1(dde6f76e958841e8c99b693e13ced9aa9ef316dc) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x4000000, REGION_GFX3, 0 )
+	/* Encrypted */
+	ROM_LOAD16_BYTE( "251-c1k.bin",  0x0000000, 0x800000, CRC(f33bf984) SHA1(fbc56b6eaef1a14a9e447cf488e2ed474629420e) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "251-c2k.bin",  0x0000001, 0x800000, CRC(2fbe50f6) SHA1(3170abafa4d438fd3cb672e11a0137b98bce365d) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "251-c3k.bin",  0x1000000, 0x800000, CRC(eb3ade75) SHA1(2c72cb9adc95e018b9f42c796599dd3c603dd3c7) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "251-c4k.bin",  0x1000001, 0x800000, CRC(11ae7b23) SHA1(f82f82df19f892899ec59fc0405da7ae45067853) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "251-c5k.bin",  0x2000000, 0x800000, CRC(58b22d03) SHA1(d5c0e7c4f136f2ef464e498f3946adcc7b25541d) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "251-c6k.bin",  0x2000001, 0x800000, CRC(80c5ef85) SHA1(d020443334700bceb369aa293f1bd87d8c52e2ed) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "251-c7k.bin",  0x3000000, 0x800000, CRC(634c5fa5) SHA1(f1ebb48a62a0ec397e72b45f2386e4ab35a8f80a) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "251-c8k.bin",  0x3000001, 0x800000, CRC(df6786aa) SHA1(6f362d3eea79e7fa1b3ae43d619032b194cd11d8) ) /* Plane 2,3 */
+ROM_END
+
+ROM_START( kof99uh ) /* Original Version - Encrypted GFX */
+	ROM_REGION( 0x500000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "152-p1uh.bin", 0x000000, 0x100000, CRC(f7a9ad54) SHA1(c59d14d710065b5dbdf2b389065ce328629509f1) )
+	ROM_LOAD16_WORD_SWAP( "152-p2.bin",   0x100000, 0x400000, CRC(274ef47a) SHA1(98654b68cc85c19d4a90b46f3110f551fa2e5357) )
+
+	/* The Encrypted Boards do _not_ have an s1 rom, data for it comes from the Cx ROMs */
+	ROM_REGION( 0x20000, REGION_GFX1, 0 )
+	ROM_FILL(                 0x000000, 0x20000, 0 )
+	ROM_REGION( 0x20000, REGION_GFX2, 0 )
+	ROM_LOAD( "sfix.sfx",  0x000000, 0x20000, CRC(354029fc) SHA1(4ae4bf23b4c2acff875775d4cbff5583893ce2a1) )
+
+	NEO_BIOS_SOUND_128K( "251-m1.bin", CRC(5e74539c) SHA1(6f49a9343cbd026b2c6720ff3fa2e5b1f85e80da) )
+
+	ROM_REGION( 0x0e00000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "251-v1.bin", 0x000000, 0x400000, CRC(ef2eecc8) SHA1(8ed13b9db92dba3124bc5ba66e3e275885ece24a) )
+	ROM_LOAD( "251-v2.bin", 0x400000, 0x400000, CRC(73e211ca) SHA1(0e60fa64cab6255d9721e2b4bc22e3de64c874c5) )
+	ROM_LOAD( "251-v3.bin", 0x800000, 0x400000, CRC(821901da) SHA1(c6d4975bfaa19a62ed59126cadf2578c0a5c257f) )
+	ROM_LOAD( "251-v4.bin", 0xc00000, 0x200000, CRC(b49e6178) SHA1(dde6f76e958841e8c99b693e13ced9aa9ef316dc) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x4000000, REGION_GFX3, 0 )
+	/* Encrypted */
+	ROM_LOAD16_BYTE( "251-c1.bin",   0x0000000, 0x800000, CRC(0f9e93fe) SHA1(c7d77f0833c6f526f632e4f2dce59e302f6b9a15) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "251-c2.bin",   0x0000001, 0x800000, CRC(e71e2ea3) SHA1(39c7a326fddbcca3b29c68cdc96aad4d62295c0f) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "251-c3.bin",   0x1000000, 0x800000, CRC(238755d2) SHA1(01125b5c7a28e350f091280b041954fd1ac7c98f) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "251-c4.bin",   0x1000001, 0x800000, CRC(438c8b22) SHA1(ffbc643f5b27dd00f2f95d4ef4c5f29ee814722b) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "251-c5.bin",   0x2000000, 0x800000, CRC(0b0abd0a) SHA1(d5ad324fe523bdc6f09209d236cc4932524a48f1) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "251-c6.bin",   0x2000001, 0x800000, CRC(65bbf281) SHA1(79ae174667a23dabcfe865b6cd6133c86098452e) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "251-c7.bin",   0x3000000, 0x800000, CRC(ff65f62e) SHA1(7cd335fede05b56e15db90ce407c1183a78da4e9) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "251-c8.bin",   0x3000001, 0x800000, CRC(8d921c68) SHA1(42acf1d27d52a8e3b6262eb7df50693c0b135565) ) /* Plane 2,3 */
+ROM_END
+
 ROM_START( ganryu ) /* Original Version - Encrypted GFX */
 	ROM_REGION( 0x200000, REGION_CPU1, 0 )
 	ROM_LOAD16_WORD_SWAP( "252-p1.bin", 0x100000, 0x100000, CRC(4b8ac4fb) SHA1(93d90271bff281862b03beba3809cf95a47a1e44) )
@@ -5823,6 +6258,72 @@ ROM_START( kof2000n ) /* Original Version, Encrypted Sound + GFX Roms */
 	ROM_LOAD16_BYTE( "257-c8.bin",   0x3000001, 0x800000, CRC(b1afa60b) SHA1(b916184f5cfe4121752270f4f65abf35d8eb0519) ) /* Plane 2,3 */
 ROM_END
 
+ROM_START( kof2000k ) /* Original Version, Encrypted Sound + GFX Roms */
+	ROM_REGION( 0x500000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "257-p1k.bin",  0x000000, 0x100000, CRC(a146e714) SHA1(d157540286e6756dda0068667dd57d6364167028) )
+	ROM_LOAD16_WORD_SWAP( "257-p2k.bin",  0x100000, 0x400000, CRC(b0c817ca) SHA1(414f16ddf1e668effa23090dd8ee843793bb70c8) )
+
+	/* The Encrypted Boards do _not_ have an s1 rom, data for it comes from the Cx ROMs */
+	ROM_REGION( 0x80000, REGION_GFX1, 0 )	/* larger char set */
+	ROM_FILL(                 0x000000, 0x20000, 0 )
+	ROM_REGION( 0x20000, REGION_GFX2, 0 )
+	ROM_LOAD( "sfix.sfx",  0x000000, 0x20000, CRC(354029fc) SHA1(4ae4bf23b4c2acff875775d4cbff5583893ce2a1) )
+
+	/* Encrypted */
+	NEO_BIOS_AUDIO_ENCRYPTED_256K( "257-m1.bin", CRC(4b749113) SHA1(2af2361146edd0ce3966614d90165a5c1afb8de4) )
+
+	ROM_REGION( 0x1000000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "257-v1.bin", 0x000000, 0x400000, CRC(17cde847) SHA1(4bcc0205b70dc6d9216b29025450c9c5b08cb65d) )
+	ROM_LOAD( "257-v2.bin", 0x400000, 0x400000, CRC(1afb20ff) SHA1(57dfd2de058139345ff2b744a225790baaecd5a2) )
+	ROM_LOAD( "257-v3.bin", 0x800000, 0x400000, CRC(4605036a) SHA1(51b228a0600d38a6ec37aec4822879ec3b0ee106) )
+	ROM_LOAD( "257-v4.bin", 0xc00000, 0x400000, CRC(764bbd6b) SHA1(df23c09ca6cf7d0ae5e11ff16e30c159725106b3) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x4000000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "257-c1k.bin",  0x0000000, 0x800000, CRC(7e606bdc) SHA1(a36804082a01f6034f6307c071546a9f950cb822) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "257-c2k.bin",  0x0000001, 0x800000, CRC(ada31353) SHA1(3fba84b62c69d58d11117f34f64af0463d8e6ee1) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "257-c3k.bin",  0x1000000, 0x800000, CRC(b01e0c52) SHA1(25c66263196a6a60a0d7fd1390cc0a71c202fefd) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "257-c4k.bin",  0x1000001, 0x800000, CRC(380f8c5f) SHA1(c0fa2f1ff7b925aab6bd10a04e02085f34136d55) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "257-c5k.bin",  0x2000000, 0x800000, CRC(f3295dd7) SHA1(be01e069e3fa6fe22c5db302539ee52ee83dcb29) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "257-c6k.bin",  0x2000001, 0x800000, CRC(7d37f1cb) SHA1(7cd84c611415c890086f68cd586bf3f28193c220) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "257-c7k.bin",  0x3000000, 0x800000, CRC(7828c548) SHA1(506002f8b95893f329a69a5f7602d9d608e57c98) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "257-c8k.bin",  0x3000001, 0x800000, CRC(17ac5c3e) SHA1(a139e813bab76d51521819b73f0a7efd83a3a4c5) ) /* Plane 2,3 */
+ROM_END
+
+ROM_START( kof2kuh ) /* Original Version, Encrypted Sound + GFX Roms */
+	ROM_REGION( 0x500000, REGION_CPU1, 0 )
+	ROM_LOAD16_WORD_SWAP( "257-p1uh.bin", 0x000000, 0x100000, CRC(6065ff07) SHA1(5af22f3df099e33653cf71890dc6272c91664292) )
+	ROM_LOAD16_WORD_SWAP( "257-p2n.bin",  0x100000, 0x400000, CRC(693c2c5e) SHA1(dc9121b7369ef46596343cac055a00aec81704d4) )
+
+	/* The Encrypted Boards do _not_ have an s1 rom, data for it comes from the Cx ROMs */
+	ROM_REGION( 0x80000, REGION_GFX1, 0 )	/* larger char set */
+	ROM_FILL(                 0x000000, 0x20000, 0 )
+	ROM_REGION( 0x20000, REGION_GFX2, 0 )
+	ROM_LOAD( "sfix.sfx",  0x000000, 0x20000, CRC(354029fc) SHA1(4ae4bf23b4c2acff875775d4cbff5583893ce2a1) )
+
+	/* Encrypted */
+	NEO_BIOS_AUDIO_ENCRYPTED_256K( "257-m1.bin", CRC(4b749113) SHA1(2af2361146edd0ce3966614d90165a5c1afb8de4) )
+
+	ROM_REGION( 0x1000000, REGION_SOUND1, ROMREGION_SOUNDONLY )
+	ROM_LOAD( "257-v1.bin", 0x000000, 0x400000, CRC(17cde847) SHA1(4bcc0205b70dc6d9216b29025450c9c5b08cb65d) )
+	ROM_LOAD( "257-v2.bin", 0x400000, 0x400000, CRC(1afb20ff) SHA1(57dfd2de058139345ff2b744a225790baaecd5a2) )
+	ROM_LOAD( "257-v3.bin", 0x800000, 0x400000, CRC(4605036a) SHA1(51b228a0600d38a6ec37aec4822879ec3b0ee106) )
+	ROM_LOAD( "257-v4.bin", 0xc00000, 0x400000, CRC(764bbd6b) SHA1(df23c09ca6cf7d0ae5e11ff16e30c159725106b3) )
+
+	NO_DELTAT_REGION
+
+	ROM_REGION( 0x4000000, REGION_GFX3, 0 )
+	ROM_LOAD16_BYTE( "257-c1.bin",   0x0000000, 0x800000, CRC(cef1cdfa) SHA1(6135080f3a6b4712b76cc217edcc58e72b55c2b9) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "257-c2.bin",   0x0000001, 0x800000, CRC(f7bf0003) SHA1(9f7b19a2100cf7d12867e742f440dd5277b4f895) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "257-c3.bin",   0x1000000, 0x800000, CRC(101e6560) SHA1(8073ae1139e215d1167f8d32c14079a46ce3ee1c) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "257-c4.bin",   0x1000001, 0x800000, CRC(bd2fc1b1) SHA1(da0006761923ad49b404a08d7a151193ee307a69) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "257-c5.bin",   0x2000000, 0x800000, CRC(89775412) SHA1(b221b30224bc4239f1b3c2d2fd1cd4fa84e3523c) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "257-c6.bin",   0x2000001, 0x800000, CRC(fa7200d5) SHA1(6f2b0d38af34e280d56a58955400e5c679906871) ) /* Plane 2,3 */
+	ROM_LOAD16_BYTE( "257-c7.bin",   0x3000000, 0x800000, CRC(7da11fe4) SHA1(065336cf166807acb6c8569d59d3bf37a19b0a42) ) /* Plane 0,1 */
+	ROM_LOAD16_BYTE( "257-c8.bin",   0x3000001, 0x800000, CRC(b1afa60b) SHA1(b916184f5cfe4121752270f4f65abf35d8eb0519) ) /* Plane 2,3 */
+ROM_END
+
 ROM_START( bangbead ) /* Original Version - Encrypted GFX */
 	ROM_REGION( 0x200000, REGION_CPU1, 0 )
 	ROM_LOAD16_WORD_SWAP( "259-p1.bin", 0x100000, 0x100000, CRC(88a37f8b) SHA1(566db84850fad5e8fe822e8bba910a33e083b550) )
@@ -7840,11 +8341,14 @@ GAMEB( 1992, bstars2,  neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK",
 GAMEB( 1992, quizdai2, neogeo,   neogeo, neo320, neogeo,  neogeo,   ROT0, "SNK", "Quiz Meitantei Neo and Geo - Quiz Daisousa Sen part 2", &neogeo_ctrl, NULL )
 GAMEB( 1993, 3countb,  neogeo,   neogeo, neo320, neogeo,  neogeo,   ROT0, "SNK", "3 Count Bout / Fire Suplex (NGM-043 ~ NGH-043)", &neogeo_ctrl, NULL )
 GAMEB( 1992, aof,      neogeo,   neogeo, raster, neogeo,  neogeo,   ROT0, "SNK", "Art of Fighting / Ryuuko no Ken", &neogeo_ctrl, NULL )
+GAMEB( 2016, aofk,         aof,          neogeo, raster, neogeo,  neogeo,   ROT0, "SNK", "Art of Fighting / Ryuuko no Ken (Korean Translation)", &neogeo_ctrl, NULL )
 GAMEB( 1993, samsho,   neogeo,   neogeo, neo320, neogeo,  neogeo,   ROT0, "SNK", "Samurai Shodown / Samurai Spirits", &neogeo_ctrl, NULL )
 GAMEB( 1994, tophuntr, neogeo,   neogeo, ras320, neogeo,  neogeo,   ROT0, "SNK", "Top Hunter - Roddy and Cathy", &neogeo_ctrl, NULL )
 GAMEB( 1992, fatfury2, neogeo,   neogeo, neo320, neogeo,  neogeo,   ROT0, "SNK", "Fatal Fury 2 / Garou Densetsu 2 - Arata-naru Tatakai", &neogeo_ctrl, NULL )
 GAMEB( 1992, ssideki,  neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "Super Sidekicks / Tokuten Ou", &neogeo_ctrl, NULL )
 GAMEB( 1994, kof94,    neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '94", &neogeo_ctrl, NULL )
+GAMEB( 2006, kof94k,       kof94,        neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '94 (Korean Translation)", &neogeo_ctrl, NULL )
+GAMEB( 2024, kof94uh,      kof94,        neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '94 (AES Uncensored Hack)", &neogeo_ctrl, NULL )
 GAMEB( 1994, aof2,     neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "Art of Fighting 2 / Ryuuko no Ken 2", &neogeo_ctrl, NULL )
 GAMEB( 1993, fatfursp, neogeo,   neogeo, neo320, neogeo,  neogeo,   ROT0, "SNK", "Fatal Fury Special / Garou Densetsu Special (set 1)", &neogeo_ctrl, NULL )
 GAMEB( 1993, fatfursa, fatfursp, neogeo, neo320, neogeo,  neogeo,   ROT0, "SNK", "Fatal Fury Special / Garou Densetsu Special (set 2)", &neogeo_ctrl, NULL )
@@ -7855,17 +8359,22 @@ GAMEB( 1995, fatfury3, neogeo,   neogeo, ras320, neogeo,  neogeo,   ROT0, "SNK",
 GAMEB( 1995, ssideki3, neogeo,   neogeo, ras320, neogeo,  neogeo,   ROT0, "SNK", "Super Sidekicks 3 - The Next Glory / Tokuten Ou 3 - eikoue no michi", &neogeo_ctrl, NULL )
 GAMEB( 1995, kof95,    neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '95 (set 1)", &neogeo_ctrl, NULL )
 GAMEB( 1995, kof95a,   kof95,    neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '95 (set 2)", &neogeo_ctrl, NULL )
+GAMEB( 2005, kof95k,       kof95,        neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '95 (Korean Translation)", &neogeo_ctrl, NULL )
+GAMEB( 2024, kof95uh,      kof95,        neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '95 (AES Uncensored Hack)", &neogeo_ctrl, NULL )
 GAMEB( 1995, samsho3,  neogeo,   neogeo, raster, neogeo,  neogeo,   ROT0, "SNK", "Samurai Shodown III / Samurai Spirits - Zankurou Musouken", &neogeo_ctrl, NULL )
 GAMEB( 1995, rbff1,    neogeo,   neogeo, neo320, neogeo,  neogeo,   ROT0, "SNK", "Real Bout Fatal Fury / Real Bout Garou Densetsu", &neogeo_ctrl, NULL )
 GAMEB( 1996, aof3,     neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "Art of Fighting 3 - The Path of the Warrior / Art of Fighting - Ryuuko no Ken Gaiden", &neogeo_ctrl, NULL )
 GAMEB( 1996, kof96,    neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '96 (set 1)", &neogeo_ctrl, NULL )
 GAMEB( 1996, kof96h,   kof96,    neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '96 (set 2)", &neogeo_ctrl, NULL )
+GAMEB( 1996, kof96k,       kof96,        neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '96 (Korean Translation)", &neogeo_ctrl, NULL )
 GAMEB( 1996, ssideki4, neogeo,   neogeo, ras320, neogeo,  neogeo,   ROT0, "SNK", "Ultimate 11 - The SNK Football Championship / Tokuten Ou - Honoo no Libero, The", &neogeo_ctrl, NULL )
 GAMEB( 1996, kizuna,   neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "Kizuna Encounter - Super Tag Battle / Fu'un Super Tag Battle", &neogeo_ctrl, NULL )
 GAMEB( 1996, samsho4,  neogeo,   neogeo, neo320, neogeo,  neogeo,   ROT0, "SNK", "Samurai Shodown IV - Amakusa's Revenge / Samurai Spirits - Amakusa Kourin", &neogeo_ctrl, NULL )
 GAMEB( 1996, rbffspec, neogeo,   neogeo, neo320, neogeo,  neogeo,   ROT0, "SNK", "Real Bout Fatal Fury Special / Real Bout Garou Densetsu Special", &neogeo_ctrl, NULL )
 GAMEB( 1997, kof97,    neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '97 (set 1)", &neogeo_ctrl, NULL )
 GAMEB( 1997, kof97a,   kof97,    neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '97 (set 2)", &neogeo_ctrl, NULL )
+GAMEB( 2005, kof97k,       kof97,        neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '97 (Korean Translation)", &neogeo_ctrl, NULL )
+GAMEB( 2024, kof97uh,      kof97,        neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '97 (AES Uncensored Hack)", &neogeo_ctrl, NULL )
 GAMEB( 1997, kof97pls, kof97,    neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '97 Plus (bootleg)", &neogeo_ctrl, NULL )
 GAMEB( 1997, kog,      kof97,    neogeo, neogeo, kog,     kog,      ROT0, "bootleg", "King of Gladiator (The King of Fighters '97 bootleg)", &neogeo_ctrl, NULL )
 GAMEB( 1997, lastblad, neogeo,   neogeo, neo320, neogeo,  neogeo,   ROT0, "SNK", "Last Blade / Bakumatsu Roman - Gekka no Kenshi, The (set 1)", &neogeo_ctrl, NULL )
@@ -7878,14 +8387,19 @@ GAMEB( 2015, mslug2t,  mslug2,   neogeo, raster, neogeo,  neogeo,   ROT0, "bootl
 GAMEB( 1998, kof98,    neogeo,   neogeo, neogeo, neogeo,  kof98,    ROT0, "SNK", "The King of Fighters '98 - The Slugfest - King of Fighters '98 / Dream Match Never Ends", &neogeo_ctrl, NULL )
 GAMEB( 1998, kof98k,   kof98,    neogeo, neogeo, neogeo,  kof98,    ROT0, "SNK", "The King of Fighters '98 - The Slugfest / King of Fighters '98 - dream match never ends (Korean board)", &neogeo_ctrl, NULL )
 GAMEB( 1998, kof98n,   kof98,    neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '98 - The Slugfest - King of Fighters '98 / Dream Match Never Ends (Decrypted)", &neogeo_ctrl, NULL )
+GAMEB( 2006, kof98kr,      kof98,        neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '98 - The Slugfest - King of Fighters '98 / Dream Match Never Ends (Korean Translation)", &neogeo_ctrl, NULL )
+GAMEB( 2024, kof98uh,      kof98,        neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '98 - The Slugfest - King of Fighters '98 / Dream Match Never Ends (AES Uncensored Hack)", &neogeo_ctrl, NULL )
 GAMEB( 1998, lastbld2, neogeo,   neogeo, ras320, neogeo,  neogeo,   ROT0, "SNK", "Last Blade 2 / Bakumatsu Roman - Dai Ni Maku Gekka no Kenshi, The", &neogeo_ctrl, NULL )
 GAMEB( 1998, neocup98, neogeo,   neogeo, ras320, neogeo,  neogeo,   ROT0, "SNK", "Neo-Geo Cup '98 - The Road to the Victory", &neogeo_ctrl, NULL )
+GAMEB( 2006, neocu98k,     neocup98,     neogeo, ras320, neogeo,  neogeo,   ROT0, "SNK", "Neo-Geo Cup '98 - The Road to the Victory (Korean Translation)", &neogeo_ctrl, NULL )
 GAMEB( 1999, mslugx,   neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "SNK", "Metal Slug X - Super Vehicle-001", &neogeo_ctrl, NULL )
 GAMEB( 1999, kof99,    neogeo,   neogeo, raster, neogeo,  kof99,    ROT0, "SNK", "The King of Fighters '99 - Millennium Battle (set 1)", &neogeo_ctrl, NULL ) /* Encrypted Code & GFX */
 GAMEB( 1999, kof99a,   kof99,    neogeo, raster, neogeo,  kof99,    ROT0, "SNK", "The King of Fighters '99 - Millennium Battle (set 2)", &neogeo_ctrl, NULL ) /* Encrypted Code & GFX, crashes going into attract demo */
 GAMEB( 1999, kof99e,   kof99,    neogeo, raster, neogeo,  kof99,    ROT0, "SNK", "The King of Fighters '99 - Millennium Battle (earlier)", &neogeo_ctrl, NULL ) /* Encrypted Code & GFX */
 GAMEB( 1999, kof99n,   kof99,    neogeo, raster, neogeo,  kof99n,   ROT0, "SNK", "The King of Fighters '99 - Millennium Battle (not encrypted)", &neogeo_ctrl, NULL )	/* Encrypted GFX */
 GAMEB( 1999, kof99p,   kof99,    neogeo, raster, neogeo,  neogeo,   ROT0, "SNK", "The King of Fighters '99 - Millennium Battle (prototype)", &neogeo_ctrl, NULL )
+GAMEB( 2006, kof99k,       kof99,        neogeo, raster, neogeo,  kof99n,   ROT0, "SNK", "The King of Fighters '99 - Millennium Battle (Korean Translation)", &neogeo_ctrl, NULL )	/* Encrypted GFX */
+GAMEB( 2024, kof99uh,      kof99,        neogeo, raster, neogeo,  kof99n,   ROT0, "SNK", "The King of Fighters '99 - Millennium Battle (AES Uncensored Hack)", &neogeo_ctrl, NULL )	/* Encrypted GFX */
 GAMEB( 1999, garou,    neogeo,   neogeo, ras320, neogeo,  garou,    ROT0, "SNK", "Garou - Mark of the Wolves (set 1)", &neogeo_ctrl, NULL ) /* Encrypted Code & GFX */
 GAMEB( 1999, garouo,   garou,    neogeo, ras320, neogeo,  garouo,   ROT0, "SNK", "Garou - Mark of the Wolves (set 2)", &neogeo_ctrl, NULL ) /* Encrypted Code & GFX */
 GAMEB( 1999, garoup,   garou,    neogeo, ras320, neogeo,  neogeo,   ROT0, "SNK", "Garou - Mark of the Wolves (prototype)", &neogeo_ctrl, NULL )
@@ -7893,6 +8407,8 @@ GAMEB( 2000, mslug3,   neogeo,   neogeo, raster, neogeo,  mslug3,   ROT0, "SNK",
 GAMEB( 2000, mslug3n,  mslug3,   neogeo, raster, neogeo,  mslug3n,  ROT0, "SNK", "Metal Slug 3 (not encrypted)", &neogeo_ctrl, NULL ) /* Encrypted GFX */
 GAMEB( 2000, kof2000,  neogeo,   neogeo, neogeo, neogeo,  kof2000,  ROT0, "SNK", "The King of Fighters 2000", &neogeo_ctrl, NULL ) /* Encrypted Code & GFX */
 GAMEB( 2000, kof2000n, kof2000,  neogeo, neogeo, neogeo,  kof2000n, ROT0, "SNK", "The King of Fighters 2000 (not encrypted)", &neogeo_ctrl, NULL ) /* Encrypted GFX */
+GAMEB( 2010, kof2000k,     kof2000,      neogeo, neogeo, neogeo,  kof2000n, ROT0, "SNK", "The King of Fighters 2000 (Korean Translation)", &neogeo_ctrl, NULL ) /* Encrypted GFX */
+GAMEB( 2024, kof2kuh,      kof2000,      neogeo, neogeo, neogeo,  kof2000n, ROT0, "SNK", "The King of Fighters 2000 (AES Uncensored Hack)", &neogeo_ctrl, NULL ) /* Encrypted GFX */
 GAMEB( 1996, zintrckb, neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "hack / bootleg",   "Zintrick - Oshidashi Zentrix (Hack-bootleg)", &neogeo_ctrl, NULL )
 
 /* Alpha Denshi Co. / ADK (changed name in 1993) */
@@ -7927,6 +8443,7 @@ GAMEB( 2003, pnyaa,    neogeo,   neogeo, neogeo, neogeo,  pnyaa,    ROT0, "Aiky"
 GAMEB( 1996, ghostlop, neogeo,   neogeo, raster, neogeo,  neogeo,   ROT0, "Data East Corporation", "Ghostlop (Prototype)", &neogeo_ctrl, NULL )
 GAMEB( 1993, spinmast, neogeo,   neogeo, raster, neogeo,  neogeo,   ROT0, "Data East Corporation", "Spin Master / Miracle Adventure", &neogeo_ctrl, NULL )
 GAMEB( 1994, wjammers, neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "Data East Corporation", "Windjammers / Flying Power Disc", &neogeo_ctrl, NULL )
+GAMEB( 2005, wjammerk,     wjammers,     neogeo, neogeo, neogeo,  neogeo,   ROT0, "Data East Corporation", "Windjammers / Flying Power Disc (Korean Translation)", &neogeo_ctrl, NULL )
 GAMEB( 1994, karnovr,  neogeo,   neogeo, raster, neogeo,  neogeo,   ROT0, "Data East Corporation", "Karnov's Revenge / Fighter's History Dynamite", &neogeo_ctrl, NULL )
 GAMEB( 1994, strhoop,  neogeo,   neogeo, raster, neogeo,  neogeo,   ROT0, "Data East Corporation", "Street Hoop / Street Slam / Dunk Dream", &neogeo_ctrl, NULL )
 GAMEB( 1996, magdrop2, neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "Data East Corporation", "Magical Drop II", &neogeo_ctrl, NULL )
@@ -8055,13 +8572,16 @@ GAMEB( 2003, samsh5sp, neogeo,	 neogeo, neogeo, neogeo,  samsh5sp, ROT0, "Yuki E
 /* Visco */
 GAMEB( 1992, androdun, neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "Visco", "Andro Dunos", &neogeo_ctrl, NULL )
 GAMEB( 1995, puzzledp, neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "Taito (Visco license)", "Puzzle De Pon!", &neogeo_ctrl, NULL )
+GAMEB( 2006, puzzldpk,     puzzledp,     neogeo, neogeo, neogeo,  neogeo,   ROT0, "Taito (Visco license)", "Puzzle De Pon! (Korean Translation)", &neogeo_ctrl, NULL )
 GAMEB( 1996, neomrdo,  neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "Visco", "Neo Mr. Do!", &neogeo_ctrl, NULL )
 GAMEB( 1995, goalx3,   neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "Visco", "Goal! Goal! Goal!", &neogeo_ctrl, NULL )
 GAMEB( 1996, neodrift, neogeo,   neogeo, raster, neogeo,  neogeo,   ROT0, "Visco", "Neo Drift Out - New Technology", &neogeo_ctrl, NULL )
 GAMEB( 1996, breakers, neogeo,   neogeo, neo320, neogeo,  neogeo,   ROT0, "Visco", "Breakers", &neogeo_ctrl, NULL )
 GAMEB( 1997, puzzldpr, puzzledp, neogeo, neogeo, neogeo,  neogeo,   ROT0, "Taito (Visco license)", "Puzzle De Pon! R!", &neogeo_ctrl, NULL )
+GAMEB( 2006, puzzldrk,     puzzledp,     neogeo, neogeo, neogeo,  neogeo,   ROT0, "Taito (Visco license)", "Puzzle De Pon! R! (Korean Translation)", &neogeo_ctrl, NULL )
 GAMEB( 1998, breakrev, breakers, neogeo, neo320, neogeo,  neogeo,   ROT0, "Visco", "Breakers Revenge", &neogeo_ctrl, NULL )
 GAMEB( 1998, flipshot, neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "Visco", "Battle Flip Shot", &neogeo_ctrl, NULL )
+GAMEB( 2005, flipshtk,     flipshot,     neogeo, neogeo, neogeo,  neogeo,   ROT0, "Visco", "Battle Flip Shot (Korean Translation)", &neogeo_ctrl, NULL )
 GAMEB( 1999, ctomaday, neogeo,   neogeo, neogeo, neogeo,  neogeo,   ROT0, "Visco", "Captain Tomaday", &neogeo_ctrl, NULL )
 GAMEB( 1999, ganryu,   neogeo,   neogeo, neogeo, neogeo,  ganryu,   ROT0, "Visco", "Musashi Ganryuuki", &neogeo_ctrl, NULL )	/* Encrypted GFX */
 GAMEB( 2000, bangbead, neogeo,   neogeo, raster, neogeo,  bangbead, ROT0, "Visco", "Bang Bead", &neogeo_ctrl, NULL )
diff --git a/src/drivers/psikyo.c b/src/drivers/psikyo.c
index 77d22681..aa798e20 100644
--- a/src/drivers/psikyo.c
+++ b/src/drivers/psikyo.c
@@ -1379,6 +1379,103 @@ INPUT_PORTS_START( tengai )
 
 INPUT_PORTS_END
 
+INPUT_PORTS_START( tengaik )
+
+	PORT_START	/* IN0 - c00000&1*/
+	PSIKYO_PORT_PLAYER2
+
+	PSIKYO_PORT_PLAYER1
+
+	PORT_START	/* IN1 - c00002&3*/
+	PSIKYO_PORT_COIN
+
+	PORT_BIT( 0x0100, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x0200, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x0400, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x0800, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x1000, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x2000, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x4000, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x8000, IP_ACTIVE_LOW, IPT_UNKNOWN )
+
+	PORT_START	/* IN2 - c00004&5*/
+	PORT_DIPNAME( 0x0001, 0x0001, DEF_STR( Flip_Screen ) )
+	PORT_DIPSETTING(      0x0001, DEF_STR( Off ) )
+	PORT_DIPSETTING(      0x0000, DEF_STR( On ) )
+	PORT_DIPNAME( 0x0002, 0x0000, DEF_STR( Demo_Sounds ) )
+	PORT_DIPSETTING(      0x0002, DEF_STR( Off ) )
+	PORT_DIPSETTING(      0x0000, DEF_STR( On ) )
+	PORT_DIPNAME( 0x000c, 0x000c, DEF_STR( Difficulty ) )
+	PORT_DIPSETTING(      0x0008, "Easy" )
+	PORT_DIPSETTING(      0x000c, "Normal" )
+	PORT_DIPSETTING(      0x0004, "Hard" )
+	PORT_DIPSETTING(      0x0000, "Hardest" )
+	PORT_DIPNAME( 0x0030, 0x0030, DEF_STR( Lives ) )
+	PORT_DIPSETTING(      0x0020, "1" )
+	PORT_DIPSETTING(      0x0010, "2" )
+	PORT_DIPSETTING(      0x0030, "3" )
+	PORT_DIPSETTING(      0x0000, "4" )
+	PORT_DIPNAME( 0x0040, 0x0040, DEF_STR( Bonus_Life ) )
+	PORT_DIPSETTING(      0x0040, "600K" )
+	PORT_DIPSETTING(      0x0000, "800K" )
+	PORT_SERVICE( 0x0080, IP_ACTIVE_LOW )
+
+	PORT_DIPNAME( 0x0100, 0x0100, "Credits/Coinage" )	/* [Free Play] on all for free play*/
+	PORT_DIPSETTING(      0x0100, "A+B/A&B" )
+	PORT_DIPSETTING(      0x0000, "A&B/A [Free Play]" )
+	PORT_DIPNAME( 0x0e00, 0x0e00, DEF_STR( Coin_A ) )
+	PORT_DIPSETTING(      0x0a00, DEF_STR( 3C_1C ) )
+	PORT_DIPSETTING(      0x0c00, DEF_STR( 2C_1C ) )
+	PORT_DIPSETTING(      0x0e00, DEF_STR( 1C_1C ) )
+	PORT_DIPSETTING(      0x0800, DEF_STR( 1C_2C ) )
+	PORT_DIPSETTING(      0x0600, DEF_STR( 1C_3C ) )
+	PORT_DIPSETTING(      0x0400, DEF_STR( 1C_4C ) )
+	PORT_DIPSETTING(      0x0200, DEF_STR( 1C_5C ) )
+	PORT_DIPSETTING(      0x0000, "1C 6C [Free Play]" )
+	PORT_DIPNAME( 0x7000, 0x7000, DEF_STR( Coin_B ) )
+	PORT_DIPSETTING(      0x5000, DEF_STR( 3C_1C ) )
+	PORT_DIPSETTING(      0x6000, DEF_STR( 2C_1C ) )
+	PORT_DIPSETTING(      0x7000, DEF_STR( 1C_1C ) )
+	PORT_DIPSETTING(      0x4000, DEF_STR( 1C_2C ) )
+	PORT_DIPSETTING(      0x3000, DEF_STR( 1C_3C ) )
+	PORT_DIPSETTING(      0x2000, DEF_STR( 1C_4C ) )
+	PORT_DIPSETTING(      0x1000, DEF_STR( 1C_5C ) )
+	PORT_DIPSETTING(      0x0000, "1C 6C [Free Play]" )
+	PORT_DIPNAME( 0x8000, 0x8000, "2C Start, 1C Continue" )
+	PORT_DIPSETTING(      0x8000, DEF_STR( Off ) )
+	PORT_DIPSETTING(      0x0000, "On [Free Play]" ) /* Forces 1C_1C*/
+
+	PORT_START	/* IN3 - c00006&7*/
+
+	/***********************************************
+
+	This Dip port is bit based:
+
+	If any of the bits are set it becomes World.
+	Text for other regions is present though.
+
+	************************************************/
+
+	PORT_DIPNAME( 0x000f, 0x000f, "Country" )
+	PORT_DIPSETTING(      0x000f, "Korea" )
+	PORT_DIPSETTING(      0x000e, "World" )
+
+	PORT_BIT( 0x0010, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x0020, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x0040, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x0080, IP_ACTIVE_LOW, IPT_VBLANK  )	/* vblank*/
+
+	PORT_BIT( 0x0100, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x0200, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x0400, IP_ACTIVE_LOW, IPT_UNKNOWN )	/* tested!*/
+	PORT_BIT( 0x0800, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x1000, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x2000, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x4000, IP_ACTIVE_LOW, IPT_UNKNOWN )
+	PORT_BIT( 0x8000, IP_ACTIVE_LOW, IPT_UNKNOWN )	/* tested!*/
+
+INPUT_PORTS_END
+
 
 /***************************************************************************
 
@@ -1660,6 +1757,32 @@ ROM_START( sngkace )
 
 ROM_END
 
+ROM_START( sngkacek )
+
+	ROM_REGION( 0x100000, REGION_CPU1, 0 )		/* Main CPU Code */
+	ROM_LOAD32_WORD_SWAP( "1-u127k.bin", 0x000000, 0x040000, CRC(f78906ff) SHA1(2c4bb76a4c5a5917459d335c6a42b915d9f18469) ) /* 1&0*/
+	ROM_LOAD32_WORD_SWAP( "2-u126k.bin", 0x000002, 0x040000, CRC(e5a51908) SHA1(05511f039a26064a857c3a503a5819a1472654d3) ) /* 3&2*/
+
+	ROM_REGION( 0x030000, REGION_CPU2, 0 )		/* Sound CPU Code */
+	ROM_LOAD( "3-u58.bin", 0x00000, 0x20000, CRC(310f5c76) SHA1(dbfd1c5a7a514bccd89fc4f7191744cf76bb745d) )
+	ROM_RELOAD(            0x10000, 0x20000             )
+
+	ROM_REGION( 0x200000, REGION_GFX1, ROMREGION_DISPOSE )	/* Sprites */
+	ROM_LOAD( "u14k.bin", 0x000000, 0x200000, CRC(460c0b15) SHA1(32f4d2dbb3668ab93661633dff8497205c11805b) )
+
+	ROM_REGION( 0x200000, REGION_GFX2, ROMREGION_DISPOSE )	/* Layers 0 + 1 */
+	ROM_LOAD( "u34.bin",  0x000000, 0x100000, CRC(e6a75bd8) SHA1(1aa84ea54584b6c8b2846194b48bf6d2afa67fee) )
+	ROM_LOAD( "u35k.bin", 0x100000, 0x100000, CRC(6eb5b9c6) SHA1(4bd93c1b1a665620b3275790081c018a529b3663) )
+
+/*	ROM_REGION( 0x100000, REGION_SOUND1, ROMREGION_SOUNDONLY )	 // Samples /*/
+	ROM_REGION( 0x100000, REGION_SOUND1, 0 )	/* Samples */
+	ROM_LOAD( "u68.bin",  0x000000, 0x100000, CRC(9a7f6c34) SHA1(c549b209bce1d2c6eeb512db198ad20c3f5fb0ea) )
+
+	ROM_REGION( 0x040000, REGION_USER1, 0 )	/* Sprites LUT */
+	ROM_LOAD( "u11.bin",  0x000000, 0x040000, CRC(11a04d91) SHA1(5d146a9a39a70f2ee212ceab9a5469598432449e) ) /* x1xxxxxxxxxxxxxxxx = 0xFF*/
+
+ROM_END
+
 DRIVER_INIT( sngkace )
 {
 	{
@@ -1805,7 +1928,34 @@ ROM_START( gunbirdj )
 
 	ROM_REGION( 0x040000, REGION_USER1, 0 )	/* Sprites LUT */
 	ROM_LOAD( "u3.bin",  0x000000, 0x040000, CRC(0905aeb2) SHA1(8cca09f7dfe3f804e77515f7b1b1bdbeb7bb3d80) )
+ROM_END
 
+ROM_START( gunbirdka )
+	ROM_REGION( 0x100000, REGION_CPU1, 0 )		/* Main CPU Code */
+	ROM_LOAD32_WORD_SWAP( "1-u46k.bin", 0x000000, 0x040000, CRC(8066b6f3) SHA1(6ea07cf1cb058da838524ae7f83f6ed24836848d) ) /* 1&0*/
+	ROM_LOAD32_WORD_SWAP( "2-u39k.bin", 0x000002, 0x040000, CRC(0a425ce0) SHA1(9b8a5f825c45b8919e43b83cc47056925bed6499) ) /* 3&2*/
+
+	ROM_REGION( 0x030000, REGION_CPU2, 0 )		/* Sound CPU Code */
+	ROM_LOAD( "3-u71.bin", 0x00000, 0x20000, CRC(2168e4ba) SHA1(ca7ad6acb5f806ce2528e7b52c19e8cceecb8543) )
+	ROM_RELOAD(            0x10000, 0x20000 )
+
+	ROM_REGION( 0x700000, REGION_GFX1, ROMREGION_DISPOSE )	/* Sprites */
+	ROM_LOAD( "u14k.bin", 0x000000, 0x200000, CRC(e143090a) SHA1(545ba6fdfd9b94efeb798b06ba07e8a5b27f8608) )
+	ROM_LOAD( "u24.bin",  0x200000, 0x200000, CRC(5e3ffc9d) SHA1(c284eb9ef56c8e6261fe11f91a10c5c5a56c9803) )
+	ROM_LOAD( "u15k.bin", 0x400000, 0x200000, CRC(e5f6bfb6) SHA1(87825cb74f139aa9a6affc4b236910968a410de7) )
+	ROM_LOAD( "u25k.bin", 0x600000, 0x100000, CRC(cf571ff8) SHA1(0310bc422fde4ab7c4a760ed6dc0606f10ed009a) )
+
+	ROM_REGION( 0x200000, REGION_GFX2, ROMREGION_DISPOSE )	/* Layers 0 + 1 */
+	ROM_LOAD( "u33.bin",  0x000000, 0x200000, CRC(54494e6b) SHA1(f5d090d2d34d908b56b53a246def194929eba990) )
+
+	ROM_REGION( 0x080000, REGION_SOUND1, ROMREGION_SOUNDONLY )	/* DELTA-T Samples */
+	ROM_LOAD( "u64.bin",  0x000000, 0x080000, CRC(e187ed4f) SHA1(05060723d89b1d05714447a14b5f5888ff3c2306) )
+
+	ROM_REGION( 0x100000, REGION_SOUND2, ROMREGION_SOUNDONLY )	/* ADPCM Samples */
+	ROM_LOAD( "u56.bin",  0x000000, 0x100000, CRC(9e07104d) SHA1(3bc54cb755bb3194197706965b532d62b48c4d12) )
+
+	ROM_REGION( 0x040000, REGION_USER1, 0 )	/* Sprites LUT */
+	ROM_LOAD( "u3.bin",  0x000000, 0x040000, CRC(0905aeb2) SHA1(8cca09f7dfe3f804e77515f7b1b1bdbeb7bb3d80) )
 ROM_END
 
 
@@ -2072,7 +2222,34 @@ ROM_START( tengai )
 
 	ROM_REGION( 0x040000, REGION_USER1, 0 )	/* Sprites LUT */
 	ROM_LOAD( "u1.bin",  0x000000, 0x040000, CRC(681d7d55) SHA1(b0b28471440d747adbc4d22d1918f89f6ede1615) )
+ROM_END
 
+ROM_START( tengaik )
+	ROM_REGION( 0x100000, REGION_CPU1, 0 )		/* Main CPU Code */
+	ROM_LOAD32_WORD_SWAP( "2-u40k.bin", 0x000000, 0x080000, CRC(279f7493) SHA1(bb39c50258fe30e4cc4b3da1f2acc05c362f8ddf) ) /* 1&0*/
+	ROM_LOAD32_WORD_SWAP( "3-u41k.bin", 0x000002, 0x080000, CRC(59fe486e) SHA1(a6dfbe2e19926c9c1491a5aba480018732c57293) ) /* 3&2*/
+
+	ROM_REGION( 0x030000, REGION_CPU2, 0 )		/* Sound CPU Code */
+	ROM_LOAD( "1-u63.bin", 0x00000, 0x20000, CRC(2025e387) SHA1(334b0eb3b416d46ccaadff3eee6f1abba63285fb) )
+	ROM_RELOAD(            0x10000, 0x20000 )
+
+	ROM_REGION( 0x000100, REGION_CPU3, 0 )		/* MCU */
+	/*	ROM_LOAD( "4-u59.bin", 0x00000, 0x00100, NO_DUMP )*/
+
+	ROM_REGION( 0x600000, REGION_GFX1, ROMREGION_DISPOSE )	/* Sprites */
+	ROM_LOAD16_WORD_SWAP( "u20k.bin", 0x000000, 0x200000, CRC(934a787a) SHA1(3c5144a01337c206aa452e698c5be7369468d587) )
+	ROM_LOAD16_WORD_SWAP( "u22.bin",  0x200000, 0x200000, CRC(8d21caee) SHA1(2a68af8b2be2158dcb152c434e91a75871478d41) )
+	ROM_LOAD16_WORD_SWAP( "u21k.bin", 0x400000, 0x200000, CRC(435669ca) SHA1(4eaf8531e750d5d4bea6b3f4eaa39f7267fe7206) )
+
+	ROM_REGION( 0x400000, REGION_GFX2, ROMREGION_DISPOSE )	/* Layer 0 + 1 */
+	ROM_LOAD16_WORD_SWAP( "u34k.bin", 0x000000, 0x400000, CRC(801fc802) SHA1(023c2d6515a91188791d923046365d6453c62808) ) /* four banks of 0x100000 */
+
+	ROM_REGION( 0x400000, REGION_SOUND1, ROMREGION_SOUNDONLY )	/* Samples */
+	ROM_LOAD( "u61.bin",  0x000000, 0x200000, CRC(a63633c5) SHA1(89e75a40518926ebcc7d88dea86c01ba0bb496e5) )	/* 8 bit signed pcm (16KHz)*/
+	ROM_LOAD( "u62.bin",  0x200000, 0x200000, CRC(3ad0c357) SHA1(35f78cfa2eafa93ab96b24e336f569ee84af06b6) )
+
+	ROM_REGION( 0x040000, REGION_USER1, 0 )	/* Sprites LUT */
+	ROM_LOAD( "u1.bin",  0x000000, 0x040000, CRC(681d7d55) SHA1(b0b28471440d747adbc4d22d1918f89f6ede1615) )
 ROM_END
 
 DRIVER_INIT( tengai )
@@ -2102,11 +2279,14 @@ DRIVER_INIT( tengai )
 /* Working Games */
 GAME ( 1993, samuraia, 0,        sngkace,  samuraia, sngkace,  ROT270, "Psikyo", "Samurai Aces (World)"  ) /* Banpresto?*/
 GAME ( 1993, sngkace,  samuraia, sngkace,  sngkace,  sngkace,  ROT270, "Psikyo", "Sengoku Ace (Japan)"   ) /* Banpresto?*/
+GAME ( 1993, sngkacek,  samuraia, sngkace,  sngkace,  sngkace,  ROT270, "Psikyo", "Sengoku Ace (Korean Translation)" ) /* Banpresto?*/
 GAME ( 1994, gunbird,  0,        gunbird,  gunbird,  gunbird,  ROT270, "Psikyo", "Gunbird (World)"      )
 GAME ( 1994, gunbirdk, gunbird,  gunbird,  gunbirdj, gunbird,  ROT270, "Psikyo", "Gunbird (Korea)"      )
 GAME ( 1994, gunbirdj, gunbird,  gunbird,  gunbirdj, gunbird,  ROT270, "Psikyo", "Gunbird (Japan)"      )
+GAME ( 1994, gunbirdka, gunbird,  gunbird,  gunbirdj, gunbird,  ROT270, "Psikyo", "Gunbird (Korean Translation)" )
 GAME ( 1994, btlkroad, 0,        gunbird,  btlkroad, gunbird,  ROT0,   "Psikyo", "Battle K-Road" )
 GAME ( 1995, s1945,    0,        s1945,    s1945,    s1945,    ROT270, "Psikyo", "Strikers 1945" )
 GAME ( 1995, s1945j,   s1945,    s1945,    s1945j,   s1945j,   ROT270, "Psikyo", "Strikers 1945 (Japan)" )
 GAME ( 1995, s1945jn,  s1945,    gunbird,  s1945j,   s1945jn,  ROT270, "Psikyo", "Strikers 1945 (Japan, unprotected)" )
 GAME ( 1996, tengai,   0,        s1945,    tengai,   tengai,   ROT0,   "Psikyo", "Tengai - Sengoku Blade - Sengoku Ace Episode II" )
+GAME ( 1996, tengaik,   tengai,   s1945,    tengaik,  tengai,   ROT0,   "Psikyo", "Sengoku Blade - Sengoku Ace Episode II (Korean Translation)" )
diff --git a/src/drivers/suprslam.c b/src/drivers/suprslam.c
index ba4179cc..ed0d98e3 100644
--- a/src/drivers/suprslam.c
+++ b/src/drivers/suprslam.c
@@ -273,6 +273,87 @@ INPUT_PORTS_START( suprslam )
 	PORT_DIPSETTING(      0x0000, "World" )
 INPUT_PORTS_END
 
+INPUT_PORTS_START( suprslamk )
+
+	PORT_START      /* IN1 */
+	PORT_BIT( 0x0001, IP_ACTIVE_LOW, IPT_JOYSTICK_UP    | IPF_8WAY | IPF_PLAYER1 )
+	PORT_BIT( 0x0002, IP_ACTIVE_LOW, IPT_JOYSTICK_DOWN  | IPF_8WAY | IPF_PLAYER1 )
+	PORT_BIT( 0x0004, IP_ACTIVE_LOW, IPT_JOYSTICK_LEFT  | IPF_8WAY | IPF_PLAYER1 )
+	PORT_BIT( 0x0008, IP_ACTIVE_LOW, IPT_JOYSTICK_RIGHT | IPF_8WAY | IPF_PLAYER1 )
+	PORT_BIT( 0x0010, IP_ACTIVE_LOW, IPT_BUTTON1 | IPF_PLAYER1 )
+	PORT_BIT( 0x0020, IP_ACTIVE_LOW, IPT_BUTTON2 | IPF_PLAYER1 )
+	PORT_BIT( 0x0040, IP_ACTIVE_LOW, IPT_BUTTON3 | IPF_PLAYER1 )
+	PORT_BIT( 0x0080, IP_ACTIVE_LOW, IPT_BUTTON4 | IPF_PLAYER1 )
+
+	PORT_START      /* IN1 */
+	PORT_BIT( 0x0001, IP_ACTIVE_LOW, IPT_JOYSTICK_UP    | IPF_8WAY | IPF_PLAYER2 )
+	PORT_BIT( 0x0002, IP_ACTIVE_LOW, IPT_JOYSTICK_DOWN  | IPF_8WAY | IPF_PLAYER2 )
+	PORT_BIT( 0x0004, IP_ACTIVE_LOW, IPT_JOYSTICK_LEFT  | IPF_8WAY | IPF_PLAYER2 )
+	PORT_BIT( 0x0008, IP_ACTIVE_LOW, IPT_JOYSTICK_RIGHT | IPF_8WAY | IPF_PLAYER2 )
+	PORT_BIT( 0x0010, IP_ACTIVE_LOW, IPT_BUTTON1 | IPF_PLAYER2 )
+	PORT_BIT( 0x0020, IP_ACTIVE_LOW, IPT_BUTTON2 | IPF_PLAYER2 )
+	PORT_BIT( 0x0040, IP_ACTIVE_LOW, IPT_BUTTON3 | IPF_PLAYER2 )
+	PORT_BIT( 0x0080, IP_ACTIVE_LOW, IPT_BUTTON4 | IPF_PLAYER2 )
+
+	PORT_START		/* IN0 */
+	PORT_BIT( 0x0001, IP_ACTIVE_LOW, IPT_COIN1 )
+	PORT_BIT( 0x0002, IP_ACTIVE_LOW, IPT_COIN2 )
+	PORT_BIT( 0x0004, IP_ACTIVE_LOW, IPT_COIN3 )				/* Only in "test mode"*/
+	PORT_BIT( 0x0008, IP_ACTIVE_LOW, IPT_START1 )
+	PORT_BIT( 0x0010, IP_ACTIVE_LOW, IPT_START2 )
+	PORT_BIT( 0x0020, IP_ACTIVE_LOW, IPT_SERVICE2 )				/* "Test"*/
+	PORT_BIT( 0x0040, IP_ACTIVE_LOW, IPT_TILT )
+	PORT_BIT( 0x0080, IP_ACTIVE_LOW, IPT_SERVICE1 )
+
+	PORT_START	/* DSW */
+	PORT_DIPNAME( 0x0001, 0x0001, "Coin Slots" )
+	PORT_DIPSETTING(      0x0001, "Common" )
+	PORT_DIPSETTING(      0x0000, "Separate" )
+	PORT_DIPNAME( 0x000e, 0x000e, DEF_STR( Coin_A ) )
+	PORT_DIPSETTING(      0x000a, DEF_STR( 3C_1C ) )
+	PORT_DIPSETTING(      0x000c, DEF_STR( 2C_1C ) )
+	PORT_DIPSETTING(      0x000e, DEF_STR( 1C_1C ) )
+	PORT_DIPSETTING(      0x0008, DEF_STR( 1C_2C ) )
+	PORT_DIPSETTING(      0x0006, DEF_STR( 1C_3C ) )
+	PORT_DIPSETTING(      0x0004, DEF_STR( 1C_4C ) )
+	PORT_DIPSETTING(      0x0002, DEF_STR( 1C_5C ) )
+	PORT_DIPSETTING(      0x0000, DEF_STR( 1C_6C ) )
+	PORT_DIPNAME( 0x0070, 0x0070, DEF_STR( Coin_B ) )
+	PORT_DIPSETTING(      0x0050, DEF_STR( 3C_1C ) )
+	PORT_DIPSETTING(      0x0060, DEF_STR( 2C_1C ) )
+	PORT_DIPSETTING(      0x0070, DEF_STR( 1C_1C ) )
+	PORT_DIPSETTING(      0x0040, DEF_STR( 1C_2C ) )
+	PORT_DIPSETTING(      0x0030, DEF_STR( 1C_3C ) )
+	PORT_DIPSETTING(      0x0020, DEF_STR( 1C_4C ) )
+	PORT_DIPSETTING(      0x0010, DEF_STR( 1C_5C ) )
+	PORT_DIPSETTING(      0x0000, DEF_STR( 1C_6C ) )
+	PORT_DIPNAME( 0x0080, 0x0080, DEF_STR( Free_Play ) )
+	PORT_DIPSETTING(      0x0080, DEF_STR( Off ) )
+	PORT_DIPSETTING(      0x0000, DEF_STR( On ) )
+
+	PORT_START	/* DSW */
+	PORT_DIPNAME( 0x0003, 0x0003, DEF_STR( Difficulty ) )
+	PORT_DIPSETTING(      0x0002, "Easy" )
+	PORT_DIPSETTING(      0x0003, "Normal" )
+	PORT_DIPSETTING(      0x0001, "Hard" )
+	PORT_DIPSETTING(      0x0000, "Hardest" )
+	PORT_DIPNAME( 0x000c, 0x000c, "Play Time" )
+	PORT_DIPSETTING(      0x0008, "2:00" )
+	PORT_DIPSETTING(      0x000c, "3:00" )
+	PORT_DIPSETTING(      0x0004, "4:00" )
+	PORT_DIPSETTING(      0x0000, "5:00" )
+	PORT_DIPNAME( 0x0010, 0x0010, DEF_STR( Flip_Screen ) )
+	PORT_DIPSETTING(      0x0010, DEF_STR( Off ) )
+	PORT_DIPSETTING(      0x0000, DEF_STR( On ) )
+	PORT_DIPNAME( 0x0020, 0x0020, DEF_STR( Demo_Sounds ) )
+	PORT_DIPSETTING(      0x0000, DEF_STR( Off ) )
+	PORT_DIPSETTING(      0x0020, DEF_STR( On ) )
+	PORT_SERVICE( 0x0040, IP_ACTIVE_LOW )
+	PORT_DIPNAME( 0x0080, 0x0080, "Country" )
+	PORT_DIPSETTING(      0x0080, "Korea" )
+	PORT_DIPSETTING(      0x0000, "World" )
+INPUT_PORTS_END
+
 /*** GFX DECODE **************************************************************/
 
 static struct GfxLayout suprslam_8x8x4_layout =
@@ -390,6 +471,36 @@ ROM_START( suprslam )
 	ROM_LOAD( "eb26ic36.bin", 0x200000, 0x200000, CRC(92019d89) SHA1(dbf6f8384341707996e4b9e07a3d4f536cf4905b) )
 ROM_END
 
+ROM_START( suprslamk )
+	ROM_REGION( 0x100000, REGION_CPU1, 0 ) /* 68000 Code */
+	ROM_LOAD16_WORD_SWAP( "eb26ic47k.bin", 0x000000, 0x080000, CRC(3fa42f6e) SHA1(5c4e5234aaec1a4e35af6a49892729971cbf9dcb) )
+	ROM_LOAD16_WORD_SWAP( "eb26ic73k.bin", 0x080000, 0x080000, CRC(08d9cdf4) SHA1(08abc9a7e303528af057e969f1f42e42fc4edc56) )
+
+	ROM_REGION( 0x030000, REGION_CPU2, 0 ) /* Z80 Code */
+	ROM_LOAD( "eb26ic38.bin",  0x000000, 0x020000, CRC(153f2c50) SHA1(b70f248cfb18239fcd26e36fb36159f219debf2c) )
+	ROM_RELOAD(                0x010000, 0x020000 )
+
+	ROM_REGION( 0x100000, REGION_SOUND1, 0 ) /* Samples */
+	ROM_LOAD( "eb26ic59.bin",  0x000000, 0x100000, CRC(4ae4095b) SHA1(62b0600b18febb6cecb6370b03a2d6b7756840a2) )
+
+	ROM_REGION( 0x200000, REGION_SOUND2, 0 ) /* Samples */
+	ROM_LOAD( "eb26ic66.bin",  0x000000, 0x200000, CRC(8cb33682) SHA1(0e6189ef0673227d35b9a154e333cc6cf9b65df6) )
+
+	ROM_REGION( 0x200000, REGION_GFX1, ROMREGION_DISPOSE ) /* 8x8x4 'Screen' Layer GFX */
+	ROM_LOAD( "eb26ic43k.bin", 0x000000, 0x200000, CRC(cfc28eed) SHA1(1039e352b3944e2491859b2b5b4abd9cffdc4c4f) )
+
+	ROM_REGION( 0x800000, REGION_GFX2, ROMREGION_DISPOSE ) /* 16x16x4 Sprites GFX */
+	ROM_LOAD( "eb26ic09.bin",  0x000000, 0x200000, CRC(5a415365) SHA1(a59a4ab231980b0540e9a8356a02530217779dbd) )
+	ROM_LOAD( "eb26ic10.bin",  0x200000, 0x200000, CRC(a04f3140) SHA1(621ff823d93fecdde801912064ac951727b71677) )
+	ROM_LOAD( "eb26_100k.bin", 0x400000, 0x200000, CRC(87d5f622) SHA1(f486ca2d792f98247f638bd48a36b1656701a1e1) )
+	ROM_LOAD( "eb26_101.bin",  0x600000, 0x200000, CRC(7df654b7) SHA1(3a5ed6ee7cc31566e908b835a065e9bce60389fb) )
+
+	ROM_REGION( 0x400000, REGION_GFX3, ROMREGION_DISPOSE ) /* 16x16x4 BG GFX */
+	ROM_LOAD( "eb26ic12.bin",  0x000000, 0x200000, CRC(14561bd7) SHA1(5f69f68a305aba9acb21b844c8aa5b1de60f89ff) )
+	ROM_LOAD( "eb26ic36.bin",  0x200000, 0x200000, CRC(92019d89) SHA1(dbf6f8384341707996e4b9e07a3d4f536cf4905b) )
+ROM_END
+
 /*** GAME DRIVERS ************************************************************/
 
 GAMEX( 1995, suprslam, 0, suprslam, suprslam, 0, ROT0, "Banpresto / Toei Animation", "Super Slams", GAME_IMPERFECT_GRAPHICS )
+GAMEX( 1995, suprslamk, suprslam, suprslam, suprslamk, 0, ROT0, "Banpresto / Toei Animation", "From TV Animation Slam Dunk - Super Slams (Korean Translation)", GAME_IMPERFECT_GRAPHICS )
